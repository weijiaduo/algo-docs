{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"step-algo docs","text":"<p>\u5404\u79cd\u5e38\u7528\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7684\u5b66\u4e60\u7b14\u8bb0\u3002</p> <ol> <li>\u6570\u7ec4</li> <li>\u94fe\u8868</li> <li>\u961f\u5217</li> <li>\u6808</li> <li>\u6811</li> <li>\u5806</li> <li>\u54c8\u5e0c</li> <li>\u56fe</li> <li>\u5b57\u7b26\u4e32</li> <li>\u6392\u5e8f</li> </ol> <p>\u6162\u6162\u8865\u5145\u5b8c\u5584~~~</p>"},{"location":"ch00_preface/","title":"\u524d\u8a00","text":"<p>\u4e2a\u4eba\u5bf9\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7684\u5b66\u4e60\u7b14\u8bb0\u603b\u7ed3\u3002</p> <p>\u5e0c\u671b\u80fd\u591f\u4e00\u76f4\u575a\u6301\u4e0b\u53bb\uff0c\u5965\u91cc\u7ed9~~~</p>"},{"location":"ch01_array/","title":"\u6570\u7ec4","text":""},{"location":"ch01_array/array/","title":"\u6570\u7ec4","text":""},{"location":"ch01_array/array/#_2","title":"\u4e00\u3001\u7ed3\u6784\u7279\u6027","text":"<p>\u57fa\u672c\u5b9a\u4e49\uff1a</p> <ul> <li>\u6570\u7ec4\u662f\u5b58\u653e\u5728\u8fde\u7eed\u5185\u5b58\u7a7a\u95f4\u4e0a\u7684\u76f8\u540c\u7c7b\u578b\u6570\u636e\u7684\u7ebf\u6027\u8868\u7ed3\u6784</li> </ul> <p>\u4e3b\u8981\u7279\u70b9\uff1a</p> <ul> <li>\u7ebf\u6027\u8868\u6570\u636e\u7ed3\u6784</li> <li>\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4</li> <li>\u76f8\u540c\u7c7b\u578b\u7684\u6570\u636e</li> </ul>"},{"location":"ch01_array/array/#11","title":"1.1 \u7ebf\u6027\u8868\u7ed3\u6784","text":"<p>\u7ebf\u6027\u8868\u7684\u7279\u70b9\uff1a</p> <ul> <li>\u6570\u636e\u6392\u6210\u4e00\u6761\u7ebf\u4e00\u6837\u7684\u7ed3\u6784</li> <li>\u6570\u636e\u6700\u591a\u53ea\u6709\u524d\u540e\u4e24\u4e2a\u65b9\u5411</li> </ul> <p>\u6570\u636e\u7ed3\u6784\u5206\u7c7b\uff1a</p> <ul> <li>\u7ebf\u6027\u8868\uff1a\u6570\u7ec4\u3001\u94fe\u8868\u3001\u961f\u5217\u3001\u6808</li> <li>\u975e\u7ebf\u6027\u8868\uff1a\u6811\u3001\u5806\u3001\u56fe</li> </ul>"},{"location":"ch01_array/array/#12","title":"1.2 \u8fde\u7eed\u5185\u5b58\u7a7a\u95f4","text":"<ul> <li>\u6570\u7ec4\u5143\u7d20\u4e4b\u95f4\u6ca1\u6709\u7a7a\u9699\uff0c\u662f\u8fde\u7eed\u5b58\u50a8\u7684</li> <li>\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(1)</li> <li>\u5220\u9664\u548c\u63d2\u5165\u6162\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n)</li> </ul> <p>\u95ee\uff1a\u4e3a\u4ec0\u4e48\u6570\u7ec4\u7d22\u5f15\u662f\u4ece 0 \u5f00\u59cb\uff1f</p> <p>\u7b54\uff1a\u56e0\u4e3a\u7d22\u5f15\u7684\u542b\u4e49\u672c\u8d28\u4e0a\u662f\u5185\u5b58\u5730\u5740\u7684\u504f\u79fb\u91cf\uff0c\u800c\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u504f\u79fb\u91cf\u5c31\u662f 0\u3002</p>"},{"location":"ch01_array/array/#13","title":"1.3 \u76f8\u540c\u7c7b\u578b\u6570\u636e","text":"<ul> <li>\u6570\u7ec4\u4e2d\u4fdd\u5b58\u7684\u662f\u540c\u79cd\u7c7b\u578b\u7684\u6570\u636e</li> <li>\u6bcf\u4e2a\u5143\u7d20\u5360\u7528\u7684\u5185\u5b58\u7a7a\u95f4\u662f\u4e00\u6837\u7684</li> </ul> <p>\u6b63\u56e0\u4e3a\u5143\u7d20\u7c7b\u578b\u4e00\u6837\uff0c\u5360\u7528\u7a7a\u95f4\u76f8\u540c\uff0c\u6240\u4ee5\u624d\u80fd\u5bf9\u6570\u7ec4\u8fdb\u884c\u968f\u673a\u8bbf\u95ee\u3002</p>"},{"location":"ch01_array/array/#_3","title":"\u4e8c\u3001\u5e38\u7528\u64cd\u4f5c","text":""},{"location":"ch01_array/array/#21","title":"2.1 \u904d\u5386","text":"<ul> <li>\u6570\u7ec4\u662f\u8fde\u7eed\u7684\uff0c\u904d\u5386\u5143\u7d20\u65f6\uff0c\u53ef\u901a\u8fc7\u7d22\u5f15\u504f\u79fb\u6765\u5b9e\u73b0</li> </ul> <pre><code>void traverse(int[] nums) {\n    int n = nums.length;\n    // \u901a\u8fc7\u7d22\u5f15\u504f\u79fb\u904d\u5386\u6570\u7ec4\n    for (int i = 0; i &lt; n; i++) {\n        // \u8bbf\u95ee\u5143\u7d20 nums[i]\n    }\n}\n</code></pre>"},{"location":"ch01_array/array/#22","title":"2.2 \u63d2\u5165","text":"<ul> <li>\u6570\u7ec4\u662f\u8fde\u7eed\u7684\uff0c\u63d2\u5165\u5143\u7d20\u65f6\uff0c\u9700\u5c06\u63d2\u5165\u4f4d\u7f6e\u540e\u9762\u7684\u5143\u7d20\u90fd\u5411\u540e\u79fb\u52a8\u4e00\u4f4d</li> </ul> <pre><code>void insert(int[] nums, int index, int value) {\n    int n = nums.length;\n    // \u5c06 index \u540e\u9762\u7684\u5143\u7d20\u90fd\u5411\u540e\u79fb\u52a8\u4e00\u4f4d\n    for (int i = n - 1; i &gt;= index + 1; i--) {\n        nums[i] = nums[i - 1];\n    }\n    // \u63d2\u5165\u5143\u7d20\n    nums[index] = value;\n}\n</code></pre>"},{"location":"ch01_array/array/#23","title":"2.3 \u5220\u9664","text":"<ul> <li>\u6570\u7ec4\u662f\u8fde\u7eed\u7684\uff0c\u5220\u9664\u5143\u7d20\u65f6\uff0c\u9700\u5c06\u5220\u9664\u4f4d\u7f6e\u540e\u9762\u7684\u5143\u7d20\u90fd\u5411\u524d\u79fb\u52a8\u4e00\u4f4d</li> </ul> <pre><code>void delete(int[] nums, int index) {\n    int n = nums.length;\n    // \u5c06 index \u540e\u9762\u7684\u5143\u7d20\u90fd\u5411\u524d\u79fb\u52a8\u4e00\u4f4d\n    for (int i = index; i &lt; n - 1; i++) {\n        nums[i] = nums[i + 1];\n    }\n}\n</code></pre>"},{"location":"ch01_array/array/#24","title":"2.4 \u67e5\u627e","text":"<ul> <li>\u6570\u7ec4\u662f\u8fde\u7eed\u7684\uff0c\u67e5\u627e\u5143\u7d20\u65f6\uff0c\u53ef\u901a\u8fc7\u7d22\u5f15\u504f\u79fb\u6765\u5b9e\u73b0</li> </ul> <pre><code>int search(int[] nums, int target) {\n    int n = nums.length;\n    // \u901a\u8fc7\u7d22\u5f15\u504f\u79fb\u904d\u5386\u6570\u7ec4\n    for (int i = 0; i &lt; n; i++) {\n        if (nums[i] == target) {\n            return i;\n        }\n    }\n    return -1;\n}\n</code></pre>"},{"location":"ch01_array/array/#25","title":"2.5 \u6269\u5bb9","text":"<ul> <li>\u6570\u7ec4\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\uff0c\u6269\u5bb9\u65f6\uff0c\u9700\u91cd\u65b0\u7533\u8bf7\u4e00\u5757\u66f4\u5927\u7684\u7a7a\u95f4\uff0c\u5c06\u539f\u6570\u7ec4\u62f7\u8d1d\u5230\u65b0\u6570\u7ec4\u4e2d</li> </ul> <pre><code>int[] resize(int[] nums) {\n    int n = nums.length;\n    // \u7533\u8bf7\u66f4\u5927\u7684\u5185\u5b58\u7a7a\u95f4\n    int[] newNums = new int[n * 2];\n    // \u5c06\u539f\u6570\u7ec4\u5143\u7d20\u62f7\u8d1d\u5230\u65b0\u6570\u7ec4\u4e2d\n    for (int i = 0; i &lt; n; i++) {\n        newNums[i] = nums[i];\n    }\n    return newNums;\n}\n</code></pre>"},{"location":"ch01_array/array/#_4","title":"\u4e09\u3001\u6ce8\u610f\u4e8b\u9879","text":""},{"location":"ch01_array/array/#31","title":"3.1 \u907f\u514d\u7834\u574f\u6570\u7ec4\u8fde\u7eed\u6027","text":"<p>\u8fde\u7eed\u6027\u5f15\u8d77\u7684\u95ee\u9898\uff1a</p> <ul> <li>\u5220\u9664\u4f1a\u5bfc\u81f4\u6570\u7ec4\u5143\u7d20\u79fb\u52a8\uff0c\u591a\u6b21\u5220\u9664\uff0c\u4f1a\u5f15\u53d1\u6570\u7ec4\u79fb\u52a8\u591a\u6b21\uff0c\u5f88\u5f71\u54cd\u6027\u80fd</li> </ul> <p>\u907f\u514d\u5220\u9664\u7834\u574f\u8fde\u7eed\u6027\u7684\u53ef\u884c\u65b9\u6848\uff1a</p> <ol> <li>\u5148\u6807\u8bb0\uff1a\u5220\u9664\u6570\u7ec4\u5143\u7d20\u65f6\uff0c\u4ec5\u6807\u8bb0\u88ab\u5220\u9664\u7684\u5143\u7d20\uff0c\u4f46\u662f\u6682\u65f6\u5148\u4e0d\u8981\u79fb\u52a8\u6570\u7ec4\u5143\u7d20</li> <li>\u518d\u5220\u9664\uff1a\u7b49\u6570\u7ec4\u7a7a\u95f4\u4e0d\u8db3\u65f6\uff0c\u518d\u89e6\u53d1\u771f\u6b63\u7684\u5220\u9664\uff0c\u4e00\u6b21\u6027\u6e05\u9664\u6240\u6709\u6807\u8bb0\u5220\u9664\u7684\u5143\u7d20</li> </ol>"},{"location":"ch01_array/array/#32","title":"3.2 \u8c28\u9632\u6570\u7ec4\u8bbf\u95ee\u8d8a\u754c","text":"<ul> <li>\u6570\u7ec4\u957f\u5ea6\u662f\u6709\u9650\u7684\uff0c\u907f\u514d\u8bbf\u95ee\u6570\u7ec4\u4ee5\u5916\u7684\u5730\u65b9</li> <li>\u6570\u7ec4\u4ee5\u5916\u7684\u5730\u65b9\uff0c\u6709\u53ef\u80fd\u662f\u5176\u4ed6\u7a0b\u5e8f\u7684\u6570\u636e\uff0c\u8d8a\u754c\u4fee\u6539\u6709\u53ef\u80fd\u4f1a\u5f71\u54cd\u5176\u4ed6\u7a0b\u5e8f\u8fd0\u884c</li> </ul>"},{"location":"ch01_array/array/#_5","title":"\u56db\u3001\u4f18\u7f3a\u70b9","text":""},{"location":"ch01_array/array/#41","title":"4.1 \u4f18\u70b9","text":"<ul> <li>\u7a7a\u95f4\u6548\u7387\u9ad8\uff1a\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u65e0\u989d\u5916\u5f00\u9500</li> <li>\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff1a\u5141\u8bb8\u5728 O(1) \u65f6\u95f4\u5185\u8bbf\u95ee\u5143\u7d20</li> <li>\u5bf9\u7f13\u5b58\u5c40\u90e8\u6027\u53cb\u597d\uff1a\u6570\u7ec4\u65f6\u8fde\u7eed\u7684\uff0c\u80fd\u6709\u6548\u5229\u7528 CPU \u7f13\u5b58\uff0c\u63d0\u9ad8\u6027\u80fd</li> <li>\u6709\u5e8f\u6570\u7ec4\u7684\u4e8c\u5206\u67e5\u627e\uff1a\u6570\u7ec4\u662f\u8fde\u7eed\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u67e5\u627e</li> </ul>"},{"location":"ch01_array/array/#42","title":"4.2 \u7f3a\u70b9","text":"<ul> <li>\u5927\u5c0f\u56fa\u5b9a\uff1a\u6570\u7ec4\u662f\u9884\u5148\u7533\u8bf7\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u60f3\u8981\u6539\u53d8\uff0c\u53ea\u80fd\u91cd\u65b0\u7533\u8bf7\u65b0\u7a7a\u95f4</li> <li>\u4f4e\u6548\u7684\u63d2\u5165\u548c\u5220\u9664\uff1a\u63d2\u5165\u548c\u5220\u9664\u9700\u79fb\u52a8\u5927\u91cf\u5143\u7d20</li> <li>\u7a7a\u95f4\u6d6a\u8d39\uff1a\u5206\u914d\u7a7a\u95f4\u8fdc\u6bd4\u4f7f\u7528\u7684\u5927\u65f6\u4f1a\u6d6a\u8d39\u7a7a\u95f4</li> </ul>"},{"location":"ch01_array/array/#_6","title":"\u4e94\u3001\u9002\u7528\u573a\u666f","text":"<ul> <li>\u6570\u636e\u5927\u5c0f\u56fa\u5b9a</li> <li>\u968f\u673a\u8bbf\u95ee\u5143\u7d20</li> <li>\u591a\u7ef4\u6570\u7ec4</li> <li>\u7b97\u6cd5\u8981\u6c42\u6027\u80fd\u9ad8</li> <li>\u5e95\u5c42\u6846\u67b6\u5f00\u53d1\uff0c\u6027\u80fd\u8981\u6c42\u9ad8</li> </ul>"},{"location":"ch01_array/array/#_7","title":"\u516d\u3001\u793a\u4f8b\uff1a\u5bb9\u5668","text":""},{"location":"ch01_array/array/#61","title":"6.1 \u9700\u6c42","text":"<ul> <li>\u6570\u636e\u91cf\u5927\u5c0f\u672a\u77e5\uff0c\u9700\u8981\u52a8\u6001\u6269\u5bb9</li> <li>\u4e00\u822c\u4e1a\u52a1\u9700\u6c42\uff0c\u6027\u80fd\u8981\u6c42\u4e0d\u9ad8</li> </ul>"},{"location":"ch01_array/array/#62","title":"6.2 \u7279\u70b9","text":"<ul> <li>\u5c01\u88c5\u4e86\u6570\u7ec4\u64cd\u4f5c\u7684\u4e00\u4e9b\u7ec6\u8282\uff0c\u6bd4\u5982\u589e\u5220</li> <li>\u652f\u6301\u52a8\u6001\u6269\u5bb9\uff0c\u5728\u7a7a\u95f4\u4e0d\u8db3\u65f6\u81ea\u52a8\u6269\u5bb9</li> </ul>"},{"location":"ch01_array/array/#_8","title":"\u4e03\u3001\u5e38\u7528\u7b97\u6cd5","text":"<ul> <li>\u6392\u5e8f\uff08\u5feb\u901f\u6392\u5e8f\u3001\u5f52\u5e76\u6392\u5e8f\u7b49\uff09</li> <li>\u4e8c\u5206\u67e5\u627e</li> <li>\u53cc\u6307\u9488\uff08\u5feb\u6162\u6307\u9488\u3001\u524d\u540e\u6307\u9488\uff09</li> <li>\u6ed1\u52a8\u7a97\u53e3</li> <li>\u524d\u7f00\u548c</li> <li>\u54c8\u5e0c\u8868</li> <li>\u5806</li> </ul>"},{"location":"ch01_array/array/#_9","title":"\u53c2\u8003","text":"<p>https://www.hello-algo.com/chapter_array_and_linkedlist/array/</p> <p>https://time.geekbang.org/column/article/40961</p>"},{"location":"ch01_array/binary_search/","title":"\u4e8c\u5206\u67e5\u627e","text":""},{"location":"ch01_array/binary_search/#_2","title":"\u4e00\u3001\u4ee3\u7801\u6a21\u677f","text":"<p>\u5e38\u89c1\u7684\u4e8c\u5206\u67e5\u627e\u6a21\u677f\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>left = low, right = high;\nwhile (left &lt;= right) {\n    int mid = left + (right - left) / 2;\n    if (\u6ee1\u8db3\u6761\u4ef6) {\n        right = mid - 1;\n    } else {\n        left = mid + 1;\n    }\n}\nreturn left; // \u6216 right\n</code></pre> <p>\u5728\u4e8c\u5206\u67e5\u627e\u4e2d\uff0c\u6709\u51e0\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a</p> <ul> <li>\u5faa\u73af\u6761\u4ef6\uff08<code>while (left &lt;= right)</code>\uff09</li> <li>\u4e2d\u503c\u8ba1\u7b97\uff08<code>mid</code>\uff09</li> <li>\u533a\u95f4\u6536\u7f29\uff08<code>left = mid + 1</code>\u3001<code>right = mid - 1</code>\uff09</li> <li>\u8fd4\u56de\u503c\uff08<code>left</code>\u3001<code>right</code>\uff09</li> </ul> <p>\u8fd9\u4e9b\u5730\u65b9\u5199\u9519\u4e86\u5c31\u5f88\u5bb9\u6613\u5bfc\u81f4\u6700\u540e\u7684\u7ed3\u679c\u4e0d\u5bf9\u3002</p>"},{"location":"ch01_array/binary_search/#_3","title":"\u4e8c\u3001\u5faa\u73af\u6761\u4ef6","text":"<p>\u5728\u4e8c\u5206\u67e5\u627e\u4e2d\uff0c\u5e38\u7528\u7684\u5faa\u73af\u6761\u4ef6\u6709 2 \u79cd\uff1a</p> <ul> <li><code>while (left &lt;= right)</code></li> <li><code>while (left &lt; right)</code></li> </ul> <p>\u4ec0\u4e48\u65f6\u5019\u7528 <code>&lt;=</code>\uff1f\u4ec0\u4e48\u65f6\u5019\u7528 <code>&lt;</code> \u5462\uff1f\u5b9e\u9645\u4e0a\u8fd9\u548c\u533a\u95f4\u5b9a\u4e49\u6709\u5173\u3002</p> <p>\u5e38\u89c1\u7684\u533a\u95f4\u5b9a\u4e49\u53ef\u4ee5\u5206\u4e3a 2 \u79cd\uff1a</p> <ul> <li>\u5de6\u95ed\u53f3\u95ed <code>[low, high]</code></li> <li>\u5de6\u95ed\u53f3\u5f00 <code>[low, high)</code></li> </ul> <p>\u4e0d\u540c\u7684\u533a\u95f4\u5b9a\u4e49\uff0c\u5faa\u73af\u6761\u4ef6\u7684\u5199\u6cd5\u4e5f\u4e0d\u4e00\u6837\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\u8fd9\u662f\u56e0\u4e3a\uff0c</p> <ul> <li>\u533a\u95f4\u5b9a\u4e49\u5c5e\u4e8e\u662f\u5faa\u73af\u4e0d\u53d8\u91cf\uff0c\u5728\u6574\u4e2a\u5faa\u73af\u8fc7\u7a0b\u4e2d\u8981\u4e00\u76f4\u4fdd\u6301\u6709\u610f\u4e49</li> </ul> <p>\u6240\u4ee5\u5faa\u73af\u6761\u4ef6\u7684\u5199\u6cd5\uff0c\u5176\u5b9e\u662f\u6839\u636e\u533a\u95f4\u662f\u5426\u6709\u610f\u4e49\u6765\u51b3\u5b9a\u7684\uff1a</p> <ul> <li>\u5de6\u95ed\u53f3\u95ed\uff1a\u5f53 <code>left==right</code> \u65f6\uff0c<code>[left, right]</code> \u6709\u610f\u4e49\uff0c\u56e0\u6b64\u6709 <code>=</code> \u53f7</li> <li>\u5de6\u95ed\u53f3\u5f00\uff1a\u5f53 <code>left==right</code> \u65f6\uff0c<code>[left, right)</code> \u65e0\u610f\u4e49\uff0c\u56e0\u6b64\u65e0 <code>=</code> \u53f7</li> </ul> <p>\u56e0\u6b64\uff0c\u5faa\u73af\u6761\u4ef6\u4e0a\u8981\u4e0d\u8981 <code>=</code> \u53f7\uff0c\u53d6\u51b3\u4e8e\u533a\u95f4\u5b9a\u4e49\u662f\u5426\u6709\u610f\u4e49\u3002</p> <ul> <li>\u5de6\u95ed\u53f3\u95ed <code>[low, high]</code>\uff1a<code>while (left &lt;= right)</code></li> <li>\u5de6\u95ed\u53f3\u5f00 <code>[low, high)</code>\uff1a<code>while (left &lt; right)</code></li> </ul> <p>\u6b63\u5e38\u6765\u8bf4\uff0c\u8fd9\u4e24\u79cd\u5199\u6cd5\u90fd\u662f\u53ef\u884c\u7684\uff0c\u4e0d\u8fc7\u8fd8\u662f\uff0c</p> <ul> <li>\u63a8\u8350\u4f7f\u7528\u5de6\u95ed\u53f3\u95ed <code>[low, high]</code>\uff1a<code>while (left &lt;= right)</code></li> </ul> <p>\u56e0\u4e3a\u4e24\u8fb9\u90fd\u662f\u95ed\u533a\u95f4\uff0c\u662f\u5bf9\u79f0\u7684\uff0c\u6240\u4ee5\u4e24\u8fb9\u7684\u533a\u95f4\u64cd\u4f5c\u4e5f\u662f\u5bf9\u79f0\u7684\uff0c\u4e0d\u5bb9\u6613\u51fa\u9519\u3002</p>"},{"location":"ch01_array/binary_search/#_4","title":"\u4e09\u3001\u4e2d\u503c\u8ba1\u7b97","text":"<p>\u4e00\u822c\u6765\u8bf4\uff0c\u4e8c\u5206\u4e2d\u503c\u7684\u8ba1\u7b97\u65b9\u5f0f\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a</p> <ol> <li><code>mid = (left + right) / 2</code></li> <li><code>mid = left + (right - left) / 2</code></li> <li><code>mid = left + ((right - left) &gt;&gt; 1)</code></li> </ol> <p>\u4f7f\u7528\u54ea\u79cd\u65b9\u5f0f\u6bd4\u8f83\u597d\u5462\uff1f</p> <ul> <li>\u63a8\u8350\u4f7f\u7528\u7b2c 2 \u79cd\uff1a<code>mid = left + (right - left) / 2</code></li> </ul> <p>\u7b2c 1 \u79cd\u5b58\u5728\u6574\u6570\u6ea2\u51fa\u95ee\u9898\uff0c\u6240\u4ee5\u7528\u7684\u6bd4\u8f83\u5c11\u3002</p> <p>\u7b2c 3 \u79cd\u548c\u7b2c 2 \u79cd\u672c\u8d28\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u800c\u4e14\u4ece\u7406\u8bba\u4e0a\u8bf4\u79fb\u4f4d <code>&gt;&gt;</code> \u6bd4\u9664\u6cd5 <code>/</code> \u8fd8\u8981\u5feb\u3002</p> <p>\u4f46\u662f <code>&gt;&gt;</code> \u7684\u4f18\u5148\u7ea7\u6bd4 <code>+</code> \u53f7\u4f4e\uff0c\u9700\u8981\u52a0\u591a\u4e00\u5c42\u62ec\u53f7\uff0c\u800c\u62ec\u53f7\u5f88\u5bb9\u6613\u9057\u6f0f\uff0c\u4e0d\u591f\u76f4\u89c2\u3002</p> <p>\u6240\u4ee5\u4ece\u6574\u4f53\u4e0a\u6765\u8bf4\uff0c\u8fd8\u662f\u7b2c 2 \u79cd\u5199\u6cd5\u66f4\u597d\u4e00\u70b9\u3002</p>"},{"location":"ch01_array/binary_search/#_5","title":"\u56db\u3001\u533a\u95f4\u6536\u7f29","text":"<p>\u4e8c\u5206\u67e5\u627e\u5b9e\u9645\u4e0a\u5c31\u662f\u6536\u7f29\u5de6\u53f3\u8fb9\u754c\uff0c\u76f4\u5230\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u503c\u4e3a\u6b62\u3002</p> <p>\u4e0d\u8fc7\u533a\u95f4\u6536\u7f29\u7684\u65b9\u5f0f\u6709\u597d\u51e0\u79cd\uff0c\u5305\u62ec\uff1a</p> <ul> <li><code>left = mid + 1</code></li> <li><code>right = mid - 1</code></li> <li><code>left = mid</code></li> <li><code>right = mid</code></li> </ul> <p>\u8fd9\u51e0\u79cd\u65b9\u5f0f\u53ef\u4ee5\u7ec4\u5408\u6210\u5404\u79cd\u60c5\u51b5\uff0c\u7528\u4e0d\u597d\u7684\u8bdd\uff0c\u5c31\u5f88\u5bb9\u6613\u9020\u6210\u6b7b\u5faa\u73af\u3002</p> <p>\u6bd4\u5982\u8bf4\uff0c\u4f7f\u7528 <code>left = mid</code> \u548c <code>right = mid - 1</code> \u6765\u8fd9\u6837\u7ec4\u5408\uff1a</p> <pre><code>while (left &lt;= right) {\n    int mid = left + (right - left) / 2;\n    if (arr[mid] &gt;= x) {\n        left = mid;\n    } else {\n        right = mid - 1;\n    }\n}\n</code></pre> <p>\u5047\u8bbe\u6b64\u65f6 <code>left = 0, right = 1, arr = {1, 2}, x = 1</code>\uff0c\u90a3\u4e48\u4ee3\u7801\u5c31\u4f1a\u9677\u5165\u6b7b\u5faa\u73af\u3002</p> <p>\u6b7b\u5faa\u73af\u7684\u539f\u56e0\u5c31\u662f\u5de6\u53f3\u8fb9\u754c\u6ca1\u6709\u6536\u7f29\uff0c\u5bfc\u81f4\u4e00\u76f4\u65e0\u6cd5\u8fbe\u5230\u5faa\u73af\u7ed3\u675f\u6761\u4ef6\u3002</p> <ul> <li>\u6b7b\u5faa\u73af\u57fa\u672c\u90fd\u662f\u51fa\u73b0\u5728 <code>left = mid</code> \u6216 <code>right = mid</code> \u4e0a</li> </ul> <p>\u56e0\u4e3a <code>left = mid</code> \u548c <code>right = mid</code> \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u80fd\u4f1a\u5bfc\u81f4\u533a\u95f4\u4e00\u76f4\u6ca1\u6709\u6536\u7f29\u3002</p> <p>\u533a\u95f4\u6536\u7f29\u7684\u6b63\u786e\u4f7f\u7528\u65b9\u5f0f\u5e94\u8be5\u662f\u600e\u4e48\u6837\u5462\uff1f\u8fd9\u5c31\u8981\u770b\u533a\u95f4\u5b9a\u4e49\u4e86\uff1a</p> <ul> <li>\u5de6\u95ed\u53f3\u95ed <code>[low, high]</code>\uff1a<code>left = mid + 1</code> \u548c <code>right = mid - 1</code></li> <li>\u5de6\u95ed\u53f3\u5f00 <code>[low, high)</code>\uff1a<code>left = mid + 1</code> \u548c <code>right = mid</code></li> <li>\u5de6\u5f00\u53f3\u95ed <code>(low, high]</code>\uff1a<code>left = mid</code> \u548c <code>right = mid - 1</code></li> <li>\u5de6\u5f00\u53f3\u5f00 <code>(low, high)</code>\uff1a<code>left = mid</code> \u548c <code>right = mid</code></li> </ul> <p>\u6bd4\u5982\u8bf4\uff0c\u8981\u5bfb\u627e\u7b2c\u4e00\u4e2a <code>&gt;= x</code> \u7684\u4f4d\u7f6e\uff0c\u4e0d\u540c\u533a\u95f4\u7684\u5199\u6cd5\u5982\u4e0b\uff1a</p> <p>1\uff09\u5de6\u95ed\u53f3\u95ed <code>[low, high]</code></p> <pre><code>while (left &lt;= right) {\n    // left &lt;= mid &lt;= right\n    int mid = left + (right - left) / 2;\n    if (arr[mid] &gt;= x) {\n        // [left, mid - 1]\uff0c\u56e0\u4e3a mid &lt;= right\uff0c\u6240\u4ee5\u533a\u95f4\u5728\u6536\u7f29\n        right = mid - 1;\n    } else {\n        // [mid + 1, right]\uff0c\u56e0\u4e3a mid &gt;= left\uff0c\u6240\u4ee5\u533a\u95f4\u5728\u6536\u7f29\n        left = mid + 1;\n    }\n}\n</code></pre> <p>2\uff09\u5de6\u95ed\u53f3\u5f00 <code>[low, high)</code></p> <pre><code>while (left &lt; right) {\n    // left &lt;= mid &lt; right\n    int mid = left + (right - left) / 2;\n    if (arr[mid] &gt;= x) {\n        // [left, mid)\uff0c\u56e0\u4e3a mid &lt; right\uff0c\u6240\u4ee5\u533a\u95f4\u5728\u6536\u7f29\n        right = mid;\n    } else {\n        // [mid + 1, right)\uff0c\u56e0\u4e3a mid &gt;= left\uff0c\u6240\u4ee5\u533a\u95f4\u5728\u6536\u7f29\n        left = mid + 1;\n    }\n}\n</code></pre> <p>\u533a\u95f4\u7684\u6536\u7f29\u65b9\u5f0f\u8981\u548c\u533a\u95f4\u5b9a\u4e49\u76f8\u5339\u914d\uff0c\u624d\u80fd\u4fdd\u8bc1\u533a\u95f4\u6536\u7f29\u7684\u6b63\u786e\u6027\u3002</p> <p>\u800c\u5faa\u73af\u5185\u533a\u95f4\u6536\u7f29\u7684\u6838\u5fc3\u601d\u60f3\u5c31\u662f\uff1a</p> <ul> <li>\u4e0d\u7ba1\u54ea\u79cd\u533a\u95f4\u5b9a\u4e49\uff0c\u90fd\u8981\u4fdd\u8bc1\u6bcf\u8f6e\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u533a\u95f4\u5728\u7f29\u5c0f</li> </ul> <p>\u53ea\u8981\u4fdd\u8bc1\u533a\u95f4\u4e00\u76f4\u5728\u7f29\u5c0f\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u51fa\u73b0\u6b7b\u5faa\u73af\u7684\u95ee\u9898\u3002</p>"},{"location":"ch01_array/binary_search/#_6","title":"\u4e94\u3001\u8fd4\u56de\u503c","text":"<p>\u5728\u4e00\u822c\u7684\u4e8c\u5206\u67e5\u627e\u4e2d\uff0c\u8fd4\u56de\u503c\u6709\u65f6\u5019\u662f <code>left</code>\uff0c\u6709\u65f6\u5019\u662f <code>right</code>\u3002</p> <p>\u6bd4\u5982\u8bf4\uff0c\u8981\u5bfb\u627e\u7b2c\u4e00\u4e2a <code>&gt;= x</code> \u7684\u4f4d\u7f6e\uff0c\u8fd4\u56de\u503c\u5c31\u662f <code>left</code>\uff1a</p> <pre><code>int firstGreatEqualSearch(int[] arr, int x) {\n    int n = arr.length;\n    // \u5faa\u73af\u4e0d\u53d8\u91cf\uff08\u5faa\u73af\u4e2d\u59cb\u7ec8\u6210\u7acb\u7684\u6761\u4ef6\uff09\uff1a\n    // arr[left - 1] &lt; x\n    // arr[right + 1] &gt;= x\n    int left = 0, right = n - 1;\n    while (left &lt;= right) {\n        int mid = left + (right - left) / 2;\n        if (arr[mid] &gt;= x) {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    // \u5faa\u73af\u7ec8\u6b62\u6761\u4ef6\uff1aright + 1 == left\n    return left; // \u6216 right + 1\n}\n</code></pre> <p>\u8981\u5bfb\u627e\u6700\u540e\u4e00\u4e2a <code>&lt;= x</code> \u7684\u4f4d\u7f6e\uff0c\u8fd4\u56de\u503c\u5c31\u662f <code>right</code>\uff1a</p> <pre><code>int lastLessEqualSearch(int[] arr, int x) {\n    int n = arr.length;\n    // \u5faa\u73af\u4e0d\u53d8\u91cf\uff08\u5faa\u73af\u4e2d\u59cb\u7ec8\u6210\u7acb\u7684\u6761\u4ef6\uff09\uff1a\n    // arr[left - 1] &lt;= x\n    // arr[right + 1] &gt; x\n    int left = 0, right = n - 1;\n    while (left &lt;= right) {\n        int mid = left + (right - left) / 2;\n        if (arr[mid] &lt;= x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    // \u5faa\u73af\u7ec8\u6b62\u6761\u4ef6\uff1aright + 1 == left\n    return right; // \u6216 left - 1\n}\n</code></pre> <p>\u6309\u7167\u8fd9\u79cd\u6a21\u677f\u5199\u4ee3\u7801\u7684\u8bdd\uff0c\u5c31\u9700\u8981\uff0c</p> <ul> <li>\u672b\u5c3e\u8fd4\u56de\u503c\u6839\u636e\u5faa\u73af\u4e0d\u53d8\u91cf\u6765\u51b3\u5b9a\u662f <code>left</code> \u8fd8\u662f <code>right</code></li> </ul> <p>\u4f46\u662f\uff0c\u8fd9\u79cd\u672b\u5c3e\u8fd4\u56de\u503c\u7684\u5199\u6cd5\uff0c\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u6765\u8c03\u6574\uff0c\u4e0d\u597d\u7406\u89e3\uff0c\u5199\u8d77\u6765\u4e5f\u5bb9\u6613\u51fa\u9519\u3002</p> <p>\u56e0\u6b64\uff0c\u53ef\u4ee5\u6362\u53e6\u5916\u4e00\u79cd\u5199\u6cd5\uff1a</p> <ul> <li>\u5c06\u672b\u5c3e\u8fd4\u56de\u503c\uff0c\u6539\u6210\u5728\u5faa\u73af\u4f53\u5185\u5224\u65ad\u6210\u7acb\u6761\u4ef6\uff0c\u7136\u540e\u8fd4\u56de\u503c</li> </ul> <p>\u6bd4\u5982\uff0c\u8981\u5bfb\u627e\u7b2c\u4e00\u4e2a <code>&gt;= x</code> \u7684\u4f4d\u7f6e\uff1a</p> <pre><code>int firstGreatEqualSearch(int[] arr, int x) {\n    int n = arr.length;\n    int left = 0, right = n - 1;\n    while (left &lt;= right) {\n        int mid = left + (right - left) / 2;\n        if (arr[mid] &gt;= x) {\n            // \u6539\u6210\u5728\u5faa\u73af\u4f53\u5185\u5224\u65ad\u6210\u7acb\u6761\u4ef6\uff0c\u7136\u540e\u8fd4\u56de\u503c\n            if (mid == 0 || arr[mid - 1] &lt; x) {\n              return mid;\n            }\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    // \u6ce8\u610f\uff0c\u5f53\u6240\u6709\u5143\u7d20\u90fd\u4e0d\u6ee1\u8db3\u65f6\uff0c\u8fd9\u91cc\u8fd4\u56de\u4e86 -1\n    // \u800c\u4e0a\u9762\u7684\u4ee3\u7801\u5219\u8fd4\u56de\u7684\u4e0d\u4e00\u6837\uff0c\u4e0a\u9762\u8fd4\u56de\u7684\u662f n\n    return -1;\n}\n</code></pre> <p>\u8fd9\u79cd\u5faa\u73af\u4f53\u5185\u8fd4\u56de\u7684\u5199\u6cd5\u867d\u7136\u6ca1\u90a3\u4e48\u7b80\u6d01\uff0c\u4f46\u662f\u81f3\u5c11\u5b83\u903b\u8f91\u6e05\u6670\u3001\u7b80\u5355\u6613\u61c2\u3002</p> <p>\u56e0\u6b64\uff0c\u9664\u975e\u5bf9\u672b\u5c3e\u8fd4\u56de\u503c\u7684\u5199\u6cd5\u5f88\u719f\u7ec3\u4e86\uff0c\u5426\u5219\u63a8\u8350\u7528\u5728\u5faa\u73af\u4e2d\u8fd4\u56de\u503c\u7684\u5199\u6cd5\u3002</p>"},{"location":"ch01_array/binary_search/#_7","title":"\u603b\u7ed3","text":"\u533a\u95f4\u5b9a\u4e49 \u5de6\u95ed\u53f3\u95ed <code>[low, high]</code> \u5de6\u95ed\u53f3\u5f00 <code>[low, high)</code> \u521d\u59cb\u8fb9\u754c low = 0, high = n - 1 low = 0, high = n \u5faa\u73af\u6761\u4ef6 left &lt;= right left &lt; right \u4e2d\u503c\u8ba1\u7b97 mid = left + (right - left) / 2 mid = left + (right - left) / 2 \u6536\u7f29\u65b9\u5f0f left = mid + 1, right = mid - 1 left = mid + 1, right = mid \u7ec8\u6b62\u60c5\u51b5 left == right + 1 left == right left \u8303\u56f4 [low, high + 1] [low, high] right \u8303\u56f4 [low - 1, high] [low, high]"},{"location":"ch01_array/binary_search/#_8","title":"\u53c2\u8003","text":"<p>https://www.hello-algo.com/chapter_searching/binary_search/</p> <p>https://www.programmercarl.com/0704.%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE.html</p> <p>https://time.geekbang.org/column/article/42733</p>"},{"location":"ch01_array/binary_search/#_9","title":"\u9644\u5f55","text":""},{"location":"ch01_array/binary_search/#_10","title":"\u7b49\u4e8e\u7ed9\u5b9a\u503c\u7684\u4f4d\u7f6e","text":"<pre><code>public int equalSearch(int[] arr, int x) {\n    int n = arr.length;\n    int low = 0, high = n - 1;\n    while (low &lt;= high) {\n        int mid = low + (high - low) / 2;\n        if (arr[mid] == x) {\n            return mid;\n        } else if (arr[mid] &lt; x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return -1;\n}\n</code></pre>"},{"location":"ch01_array/binary_search/#_11","title":"\u7b2c\u4e00\u4e2a\u7b49\u4e8e\u7ed9\u5b9a\u503c\u7684\u4f4d\u7f6e","text":"<pre><code>int firstEqualSearch(int[] arr, int x) {\n    int n = arr.length;\n    int left = 0, right = n - 1;\n    while (left &lt;= right) {\n        int mid = left + (right - left) / 2;\n        if (arr[mid] == x) {\n            if (mid == 0 || arr[mid - 1] != x) {\n              return mid;\n            }\n            right = mid - 1;\n        } else if (arr[mid] &lt; x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return -1;\n}\n</code></pre>"},{"location":"ch01_array/binary_search/#_12","title":"\u6700\u540e\u4e00\u4e2a\u7b49\u4e8e\u7ed9\u5b9a\u503c\u7684\u4f4d\u7f6e","text":"<pre><code>int lastEqualSearch(int[] arr, int x) {\n    int n = arr.length;\n    int left = 0, right = n - 1;\n    while (left &lt;= right) {\n        int mid = left + (right - left) / 2;\n        if (arr[mid] == x) {\n            if (mid == n - 1 || arr[mid + 1] != x) {\n              return mid;\n            }\n            left = mid + 1;\n        } else if (arr[mid] &lt; x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return -1;\n}\n</code></pre>"},{"location":"ch01_array/binary_search/#_13","title":"\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u7ed9\u5b9a\u503c\u7684\u4f4d\u7f6e","text":"<pre><code>int firstGreatEqualSearch(int[] arr, int x) {\n    int n = arr.length;\n    int left = 0, right = n - 1;\n    while (left &lt;= right) {\n        int mid = left + (right - left) / 2;\n        if (arr[mid] &gt;= x) {\n            if (mid == 0 || arr[mid - 1] &lt; x) {\n              return mid;\n            }\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    return -1;\n}\n</code></pre>"},{"location":"ch01_array/binary_search/#_14","title":"\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e\u7ed9\u5b9a\u503c\u7684\u4f4d\u7f6e","text":"<pre><code>int lastLessEqualSearch(int[] arr, int x) {\n    int n = arr.length;\n    int left = 0, right = n - 1;\n    while (left &lt;= right) {\n        int mid = left + (right - left) / 2;\n        if (arr[mid] &lt;= x) {\n            if (mid == n - 1 || arr[mid + 1] &gt; x) {\n              return mid;\n            }\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return -1;\n}\n</code></pre>"},{"location":"ch02_linkedlist/","title":"\u94fe\u8868","text":""},{"location":"ch02_linkedlist/linkedlist/","title":"\u94fe\u8868","text":""},{"location":"ch02_linkedlist/linkedlist/#_2","title":"\u4e00\u3001\u7ed3\u6784\u7279\u6027","text":"<p>\u94fe\u8868\u662f\u901a\u8fc7\u6307\u9488\u5c06\u4e00\u7cfb\u5217\u79bb\u6563\u7684\u5185\u5b58\u5757\u4e32\u8054\u5728\u4e00\u8d77\u7684\u7ebf\u6027\u8868\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u4e3b\u8981\u7279\u70b9\uff1a</p> <ul> <li>\u7ebf\u6027\u8868\u6570\u636e\u7ed3\u6784</li> <li>\u79bb\u6563\u7684\u5185\u5b58\u7a7a\u95f4</li> <li>\u6307\u9488\u5173\u8054</li> <li>\u52a8\u6001\u7533\u8bf7\u5185\u5b58\u7a7a\u95f4</li> </ul>"},{"location":"ch02_linkedlist/linkedlist/#11","title":"1.1 \u79bb\u6563\u7684\u7684\u5185\u5b58\u7a7a\u95f4","text":"<p>\u94fe\u8868\u662f\u901a\u8fc7\u6307\u9488\u5c06\u4e00\u7cfb\u5217\u79bb\u6563\u7684\u5185\u5b58\u5757\u4e32\u8054\u5728\u4e00\u8d77\u7684\u7ebf\u6027\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u6bcf\u4e00\u4e2a\u5185\u5b58\u5757\u79f0\u4e3a\u94fe\u8868\u7684 \u201c\u8282\u70b9\u201d\uff0c\u8282\u70b9\u5305\u542b\u4e24\u90e8\u5206\uff1a\u6570\u636e\u548c\u6307\u9488\u3002</p> <ul> <li>\u6570\u636e\uff1a\u4fdd\u5b58\u7684\u662f\u771f\u5b9e\u6570\u636e\uff0c\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b</li> <li>\u6307\u9488\uff1a\u4fdd\u5b58\u7684\u662f\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5185\u5b58\u5730\u5740</li> </ul> <p>PS: \u6307\u9488\u5360\u7528\u7684\u7a7a\u95f4\u5927\u5c0f\u6839\u636e\u64cd\u4f5c\u7cfb\u7edf\u53ca\u7f16\u8bd1\u73af\u5883\u800c\u5b9a\uff0c\u5927\u591a\u4e3a 8 \u5b57\u8282\u6216 4 \u5b57\u8282</p> <pre><code> ______ ______      ______ ______      ______ ______\n| data | next | -&gt; | data | next | -&gt; | data | next | -&gt; NULL\n</code></pre> <p>\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u79f0\u4e3a \u201c\u5934\u8282\u70b9\u201d\uff0c\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u79f0\u4e3a \u201c\u5c3e\u8282\u70b9\u201d\u3002</p> <p>\u94fe\u8868\u8282\u70b9\u5728\u5185\u5b58\u4e2d\u4e0d\u662f\u8fde\u7eed\u5b58\u50a8\u7684\uff0c\u800c\u662f\u901a\u8fc7\u6307\u9488\u76f8\u8fde\uff0c\u6240\u4ee5\u94fe\u8868\u8282\u70b9\u662f\u6bd4\u8f83\u6563\u4e71\u7684\u3002</p>"},{"location":"ch02_linkedlist/linkedlist/#12","title":"1.2 \u52a8\u6001\u7533\u8bf7\u5185\u5b58\u7a7a\u95f4","text":"<p>\u5728\u5185\u5b58\u7a7a\u95f4\u7684\u7533\u8bf7\u65b9\u5f0f\u4e0a\uff0c\u94fe\u8868\u548c\u6570\u7ec4\u662f\u4e0d\u4e00\u6837\u7684\uff1a</p> <ul> <li>\u6570\u7ec4\u662f\u4e00\u6b21\u6027\u7533\u8bf7\u4e00\u5927\u5757\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4</li> <li>\u800c\u94fe\u8868\u5219\u662f\u5728\u9700\u8981\u7684\u65f6\u5019\u624d\u52a8\u6001\u7533\u8bf7\uff0c\u6bcf\u6b21\u7533\u8bf7\u4e00\u4e2a\u8282\u70b9\u5927\u5c0f\u7684\u5185\u5b58\u7a7a\u95f4</li> </ul> <p>\u6bd4\u5982\u8bf4\uff0c\u4e00\u5f00\u59cb\u94fe\u8868\u53ea\u6709 1 \u4e2a\u8282\u70b9\uff1a</p> <pre><code> ______ ______\n| data | next | -&gt; NULL\n</code></pre> <p>\u5f53\u9700\u8981\u65b0\u8282\u70b9\u65f6\uff0c\u5c31\u52a8\u6001\u751f\u6210\u4e00\u4e2a\u8282\u70b9\uff1a</p> <pre><code> ______ ______      ______ ______\n| data | next | -&gt; | data | next | -&gt; NULL\n</code></pre> <p>\u94fe\u8868\u662f\u6309\u9700\u4f7f\u7528\u5185\u5b58\u7a7a\u95f4\uff0c\u4e0d\u591f\u65f6\u7533\u8bf7\uff0c\u4e0d\u9700\u8981\u65f6\u91ca\u653e\uff0c\u5728\u5185\u5b58\u5229\u7528\u7387\u4e0a\u6bd4\u6570\u7ec4\u8981\u9ad8\u3002</p>"},{"location":"ch02_linkedlist/linkedlist/#_3","title":"\u4e8c\u3001\u5e38\u7528\u64cd\u4f5c","text":""},{"location":"ch02_linkedlist/linkedlist/#21","title":"2.1 \u8bbf\u95ee","text":"<p>\u8bbf\u95ee\u67d0\u4e2a\u4f4d\u7f6e\u7684\u8282\u70b9\u65f6\uff0c\u6570\u7ec4\u53ef\u4ee5\u901a\u8fc7\u5730\u5740\u504f\u79fb\u7b97\u51fa\u8282\u70b9\u7684\u4f4d\u7f6e\uff0c\u76f4\u63a5\u968f\u673a\u8bbf\u95ee\u3002</p> <p>\u4f46\u94fe\u8868\u662f\u4e00\u79cd\u94fe\u5f0f\u79bb\u6563\u7684\u5185\u5b58\u5206\u5e03\uff0c\u6ca1\u529e\u6cd5\u7b97\u51fa\u8282\u70b9\u4f4d\u7f6e\uff0c\u6240\u4ee5\u94fe\u8868\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\u3002</p> <p>\u6bd4\u5982\u8bf4\uff0c\u5982\u679c\u60f3\u8981\u8bbf\u95ee\u7b2c K \u4e2a\u8282\u70b9\uff0c\u53ea\u80fd\u4ece\u524d\u5f80\u540e\u904d\u5386\uff0c\u76f4\u5230\u627e\u5230\u7b2c K \u4e2a\u8282\u70b9\u3002</p> <pre><code>ListNode findKth(ListNode head, int k) {\n  ListNode p = head;\n  for (int i = 0; i &lt; k &amp;&amp; p != null; i++) {\n    p = p.next;\n  }\n  return p;\n}\n</code></pre> <p>\u8bbf\u95ee\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n)\u3002</p>"},{"location":"ch02_linkedlist/linkedlist/#22","title":"2.2 \u63d2\u5165","text":"<p>\u76f8\u6bd4\u4e8e\u6570\u7ec4\u7684\u63d2\u5165\uff0c\u94fe\u8868\u7684\u63d2\u5165\u64cd\u4f5c\u66f4\u52a0\u7b80\u5355\u3002</p> <p>\u6570\u7ec4\u5728\u63d2\u5165\u4e4b\u540e\uff0c\u4e3a\u4e86\u4fdd\u6301\u5185\u5b58\u6570\u636e\u7684\u8fde\u7eed\u6027\uff0c\u4e00\u822c\u90fd\u9700\u8981\u505a\u6570\u636e\u642c\u79fb\u3002</p> <p>\u4f46\u94fe\u8868\u672c\u8eab\u5c31\u662f\u79bb\u6563\u7684\uff0c\u65e0\u9700\u7ef4\u62a4\u5185\u5b58\u6570\u636e\u8fde\u7eed\u6027\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u4fee\u6539\u76f8\u90bb\u8282\u70b9\u7684\u6307\u9488\u5373\u53ef\u3002</p> <pre><code>void insert(ListNode p, ListNode newNode) {\n  newNode.next = p.next;\n  p.next = newNode;\n}\n</code></pre> <pre><code> ______ ______                              ______ ______\n| data | next | --                     --&gt; | data | next |\n                 |                     |\n                 |                     |\n                 |    ______ ______    |\n                 --&gt; | data | next | ---\n\n                        newNode\n</code></pre> <p>\u63d2\u5165\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(1)\u3002</p>"},{"location":"ch02_linkedlist/linkedlist/#23","title":"2.3 \u5220\u9664","text":"<p>\u5220\u9664\u64cd\u4f5c\u548c\u63d2\u5165\u64cd\u4f5c\u7c7b\u4f3c\uff0c\u4e5f\u53ea\u9700\u8981\u4fee\u6539\u76f8\u90bb\u8282\u70b9\u7684\u6307\u9488\u5373\u53ef\u3002</p> <pre><code>\n```java\nvoid delete(ListNode p) {\n  deleteNode = p.next;\n  p.next = p.next.next;\n  deleteNode.next = null;\n}\n</code></pre> <pre><code>                 ----------------------\n                 |                    |\n                 |                    |\n ______ ______   |    ______ ______   |     ______ ______\n| data | next | --   | data | next |   --&gt; | data | next |\n\n                        deleteNode\n</code></pre> <p>\u5220\u9664\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(1)\u3002</p>"},{"location":"ch02_linkedlist/linkedlist/#_4","title":"\u4e09\u3001\u94fe\u8868\u7c7b\u578b","text":""},{"location":"ch02_linkedlist/linkedlist/#31","title":"3.1 \u5355\u5411\u94fe\u8868","text":"<p>\u5355\u5411\u94fe\u8868\u5c31\u662f\u4e0a\u9762\u4ecb\u7ecd\u7684\u94fe\u8868\uff0c\u8282\u70b9\u4e2d\u5305\u542b 2 \u4e2a\u5c5e\u6027\uff1a\u6570\u636e\u548c\u6307\u9488\u3002</p> <p>\u5355\u5411\u94fe\u8868\u6709\u660e\u786e\u7684\u65b9\u5411\u3001\u5934\u8282\u70b9\u548c\u5c3e\u8282\u70b9\u3002</p>"},{"location":"ch02_linkedlist/linkedlist/#32","title":"3.2 \u53cc\u5411\u94fe\u8868","text":"<p>\u9664\u4e86\u5355\u5411\u94fe\u8868\u4ee5\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u53cc\u5411\u94fe\u8868\uff0c\u8282\u70b9\u4e2d\u4f1a\u5e26\u6709\u6307\u5411\u524d\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\u3002</p> <pre><code> ______ ______ ______       ______ ______ ______       ______ ______ ______\n| prev | data | next | &lt;=&gt; | prev | data | next | &lt;=&gt; | prev | data | next |\n</code></pre> <p>\u53cc\u5411\u94fe\u8868\u548c\u5355\u5411\u94fe\u8868\u7684\u7ed3\u6784\u5dee\u522b\u4e0d\u5927\uff0c\u4ec5\u4ec5\u662f\u591a\u4e86\u4e00\u4e2a\u524d\u5411\u6307\u9488\u3002</p> <p>\u4e0d\u8fc7\u7531\u4e8e\u591a\u4e86\u4e00\u4e2a\u524d\u5411\u6307\u9488\uff0c\u6240\u4ee5\u5728\u63d2\u5165\u548c\u5220\u9664\u65f6\uff0c\u9700\u8981\u540c\u65f6\u7ef4\u62a4\u524d\u540e\u4e24\u4e2a\u6307\u9488\uff1a</p> <p>\u53cc\u5411\u94fe\u8868\u7684\u63d2\u5165\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 O(1)\uff1a</p> <pre><code>void insert(ListNode p, ListNode newNode) {\n  newNode.next = p.next;\n  newNode.prev = p;\n  p.next.prev = newNode;\n  p.next = newNode;\n}\n</code></pre> <p>\u53cc\u5411\u94fe\u8868\u7684\u5220\u9664\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 O(1)\uff1a</p> <pre><code>void delete(ListNode p) {\n  deleteNode = p.next;\n  p.next = p.next.next;\n  p.next.prev = p;\n  deleteNode.prev = deleteNode.next = null;\n}\n</code></pre> <p>\u53cc\u5411\u94fe\u8868\u7684\u4f18\u70b9\u662f\uff0c\u53ef\u4ee5\u652f\u6301 O(1) \u65f6\u95f4\u590d\u6742\u5ea6\u7684\u60c5\u51b5\u4e0b\u627e\u5230\u524d\u9a71\u8282\u70b9\uff0c\u8fd9\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u975e\u5e38\u5b9e\u7528\u3002</p>"},{"location":"ch02_linkedlist/linkedlist/#33","title":"3.3 \u5faa\u73af\u94fe\u8868","text":"<p>\u8fd8\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u94fe\u8868\uff0c\u53eb\u505a\u5faa\u73af\u94fe\u8868\u3002</p> <p>\u5faa\u73af\u662f\u6307\u94fe\u8868\u7684\u5c3e\u8282\u70b9\u4f1a\u6307\u5411\u5934\u8282\u70b9\uff0c\u4ece\u800c\u5f62\u6210\u4e00\u4e2a\u73af\u3002</p> <pre><code>       ------------------------------------------\n       |                                        |\n       |                                        |\n       v                                        |\n ______ ______      ______ ______      ______ ______\n| data | next | -&gt; | data | next | -&gt; | data | next |\n</code></pre> <p>\u5faa\u73af\u94fe\u8868\u65e2\u53ef\u4ee5\u662f\u5355\u94fe\uff0c\u4e5f\u53ef\u4ee5\u662f\u53cc\u94fe\uff0c\u53d6\u51b3\u4e8e\u8282\u70b9\u7684\u5b9a\u4e49\u3002</p> <p>\u5728\u5faa\u73af\u94fe\u8868\u4e2d\uff0c\u6ca1\u6709\u5934\u5c3e\u8282\u70b9\u7684\u8bf4\u6cd5\uff0c\u4efb\u610f\u8282\u70b9\u90fd\u53ef\u4ee5\u89c6\u4f5c\u5934\u8282\u70b9\u3002</p>"},{"location":"ch02_linkedlist/linkedlist/#_5","title":"\u56db\u3001\u6ce8\u610f\u4e8b\u9879","text":""},{"location":"ch02_linkedlist/linkedlist/#41","title":"4.1 \u94fe\u8868\u7684\u6307\u9488","text":"<p>\u5728\u5bf9\u94fe\u8868\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u9700\u8981\u7279\u522b\u6ce8\u610f\u94fe\u8868\u6307\u9488\u7684\u4fee\u6539\uff0c\u4e0d\u8981\u5f04\u9519\u4e86\u3002</p> <p>\u94fe\u8868\u6307\u9488\u7684\u4fee\u6539\u662f\u6709\u4e00\u5b9a\u987a\u5e8f\u7684\uff0c\u5982\u679c\u6307\u9488\u6307\u5411\u9519\u4e86\uff0c\u5c31\u5f88\u5bb9\u6613\u51fa\u73b0\u6b7b\u5faa\u73af\u3001\u6570\u636e\u4e22\u5931\u7b49\u60c5\u51b5\u3002</p> <p>\u6bd4\u5982\uff0c\u5355\u5411\u94fe\u8868\u7684\u5220\u9664\uff1a</p> <pre><code>void insert(ListNode p, ListNode newNode) {\n  newNode.next = p.next;\n  p.next = newNode;\n}\n</code></pre> <p>\u4ea4\u6362\u4e00\u4e0b\u8fd92\u4e2a\u64cd\u4f5c\uff1a</p> <pre><code>void insert(ListNode p, ListNode newNode) {\n  p.next = newNode;\n  newNode.next = p.next;\n}\n</code></pre> <p>\u5c31\u4f1a\u5bfc\u81f4\u94fe\u8868\u51fa\u73b0\u73af\uff0c\u800c\u4e14\u540e\u9762\u7684\u94fe\u8868\u8282\u70b9\u5168\u90fd\u4e22\u5931\u4e86\u3002</p>"},{"location":"ch02_linkedlist/linkedlist/#42","title":"4.2 \u94fe\u8868\u7684\u73af","text":"<p>\u5728\u904d\u5386\u5faa\u73af\u94fe\u8868\u65f6\uff0c\u6ce8\u610f\u5224\u65ad\u904d\u5386\u6761\u4ef6\uff0c\u5426\u5219\u6709\u53ef\u80fd\u904d\u5386\u51fa\u73b0\u6b7b\u5faa\u73af\u3002</p> <p>\u6bd4\u5982\uff0c\u5bf9\u5faa\u73af\u94fe\u8868\u8fd9\u6837\u5b50\u904d\u5386\u5c31\u4f1a\u5bfc\u81f4\u6b7b\u5faa\u73af\uff1a</p> <pre><code>ListNode p = head;\nwhile (p != null) {\n  // do something\n  p = p.next;\n}\n</code></pre> <p>\u5faa\u73af\u94fe\u8868\u662f\u5934\u5c3e\u76f8\u8fde\u7684\uff0c\u4e0d\u4f1a\u51fa\u73b0 <code>p == null</code> \u7684\u60c5\u51b5\u3002</p>"},{"location":"ch02_linkedlist/linkedlist/#43","title":"4.3 \u5185\u5b58\u788e\u7247\u95ee\u9898","text":"<p>\u5982\u679c\u9891\u7e41\u5730\u5bf9\u94fe\u8868\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\uff0c\u5c31\u4f1a\u5bfc\u81f4\u5185\u5b58\u9891\u7e41\u5730\u8fdb\u884c\u7533\u8bf7\u548c\u91ca\u653e\uff0c\u5f88\u5bb9\u6613\u9020\u6210\u5185\u5b58\u788e\u7247\u3002</p> <p>\u6240\u4ee5\u5728\u4f7f\u7528\u94fe\u8868\u65f6\uff0c\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u8fd9\u4e2a\u5185\u5b58\u788e\u7247\u7684\u60c5\u51b5\u3002</p>"},{"location":"ch02_linkedlist/linkedlist/#_6","title":"\u4e94\u3001\u4f18\u7f3a\u70b9","text":""},{"location":"ch02_linkedlist/linkedlist/#51","title":"5.1 \u4f18\u70b9","text":"<ul> <li>\u957f\u5ea6\u4e0d\u56fa\u5b9a\uff1a\u7075\u6d3b\u6269\u5c55\uff0c\u9700\u8981\u65f6\u7533\u8bf7\uff0c\u4e0d\u9700\u8981\u65f6\u91ca\u653e</li> <li>\u5185\u5b58\u6548\u7387\u9ad8\uff1a\u4e0d\u4f1a\u6d6a\u8d39\u5185\u5b58\u7a7a\u95f4\uff08\u6307\u9488\u4e0d\u7b97\u6d6a\u8d39\u7a7a\u95f4\uff0c\u662f\u5fc5\u8981\u7684\uff09</li> <li>\u63d2\u5165\u5220\u9664\u64cd\u4f5c\u6548\u7387\u9ad8\uff1a\u590d\u6742\u5ea6\u4e3a O(1)</li> </ul>"},{"location":"ch02_linkedlist/linkedlist/#52","title":"5.2 \u7f3a\u70b9","text":"<ul> <li>\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff1a\u53ea\u80fd\u4ece\u5934\u8282\u70b9\u5f00\u59cb\u904d\u5386</li> <li>\u5360\u7528\u5185\u5b58\u591a\uff1a\u94fe\u8868\u8282\u70b9\u9700\u8981\u989d\u5916\u7684\u7a7a\u95f4\u5b58\u50a8\u6307\u9488\u4fe1\u606f</li> <li>\u5bf9\u7f13\u5b58\u5c40\u90e8\u6027\u4e0d\u53cb\u597d\uff1a\u56e0\u4e3a\u94fe\u8868\u8282\u70b9\u662f\u79bb\u6563\u7684\uff0c\u4e0d\u8fde\u7eed</li> </ul>"},{"location":"ch02_linkedlist/linkedlist/#_7","title":"\u516d\u3001\u5178\u578b\u5e94\u7528","text":""},{"location":"ch02_linkedlist/linkedlist/#61","title":"6.1 \u5355\u5411\u94fe\u8868","text":"<ul> <li>\u8d44\u6e90\u7ba1\u7406<ul> <li>\u5355\u5411\u94fe\u8868\u53ef\u4ee5\u7528\u6765\u7ba1\u7406\u8d44\u6e90\uff0c\u4f8b\u5982\u5185\u5b58\u5206\u914d\u4e2d\u7684\u7a7a\u95f2\u5757\u94fe\u8868\uff0c\u901a\u8fc7\u5c06\u7a7a\u95f2\u7684\u5185\u5b58\u5757\u8fde\u63a5\u6210\u4e00\u4e2a\u94fe\u8868\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u8fdb\u884c\u5206\u914d\u548c\u91ca\u653e\u3002</li> </ul> </li> <li>\u961f\u5217\u5b9e\u73b0<ul> <li>\u5355\u5411\u94fe\u8868\u53ef\u4ee5\u7528\u4e8e\u5b9e\u73b0\u961f\u5217\uff08FIFO\uff09\u7684\u6570\u636e\u7ed3\u6784\uff0c\u901a\u8fc7\u5728\u94fe\u8868\u7684\u5c3e\u90e8\u6dfb\u52a0\u5143\u7d20\uff0c\u5e76\u5728\u94fe\u8868\u7684\u5934\u90e8\u79fb\u9664\u5143\u7d20\uff0c\u53ef\u4ee5\u5b9e\u73b0\u9ad8\u6548\u7684\u5165\u961f\u548c\u51fa\u961f\u64cd\u4f5c\u3002</li> </ul> </li> <li>\u56fe\u7684\u8868\u793a<ul> <li>\u5728\u56fe\u7684\u8868\u793a\u4e2d\uff0c\u6bcf\u4e2a\u9876\u70b9\u901a\u5e38\u5305\u542b\u4e00\u4e2a\u6307\u5411\u5176\u90bb\u5c45\u9876\u70b9\u7684\u94fe\u8868\u3002\u5355\u5411\u94fe\u8868\u53ef\u4ee5\u7528\u4e8e\u8868\u793a\u6709\u5411\u56fe\u6216\u65e0\u5411\u56fe\u4e2d\u9876\u70b9\u7684\u90bb\u5c45\u5173\u7cfb\u3002</li> </ul> </li> <li>\u4efb\u52a1\u8c03\u5ea6<ul> <li>\u5728\u4efb\u52a1\u8c03\u5ea6\u7cfb\u7edf\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u5355\u5411\u94fe\u8868\u6765\u7ba1\u7406\u5f85\u6267\u884c\u7684\u4efb\u52a1\u5217\u8868\uff0c\u901a\u8fc7\u5c06\u4efb\u52a1\u8fde\u63a5\u6210\u4e00\u4e2a\u94fe\u8868\uff0c\u53ef\u4ee5\u6309\u7167\u7279\u5b9a\u7684\u987a\u5e8f\u8fdb\u884c\u8c03\u5ea6\u548c\u6267\u884c\u3002</li> </ul> </li> <li>\u591a\u7ea7\u53cd\u9988\u961f\u5217\u8c03\u5ea6\u7b97\u6cd5<ul> <li>\u591a\u7ea7\u53cd\u9988\u961f\u5217\u8c03\u5ea6\u7b97\u6cd5\u4e2d\uff0c\u4efb\u52a1\u88ab\u5206\u6210\u591a\u4e2a\u4f18\u5148\u7ea7\u961f\u5217\uff0c\u5e76\u6309\u7167\u4e00\u5b9a\u89c4\u5219\u8fdb\u884c\u8c03\u5ea6\u3002\u6bcf\u4e2a\u961f\u5217\u53ef\u4ee5\u4f7f\u7528\u5355\u5411\u94fe\u8868\u6765\u7ba1\u7406\u4efb\u52a1\uff0c\u5b9e\u73b0\u6309\u4f18\u5148\u7ea7\u8fdb\u884c\u4efb\u52a1\u8c03\u5ea6\u3002</li> </ul> </li> <li>\u7b26\u53f7\u8868\u548c\u5b57\u5178\u5b9e\u73b0<ul> <li>\u5728\u7b26\u53f7\u8868\u548c\u5b57\u5178\u7684\u5b9e\u73b0\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u5355\u5411\u94fe\u8868\u6765\u5b58\u50a8\u952e\u503c\u5bf9\u3002\u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u952e\u548c\u4e00\u4e2a\u503c\uff0c\u5e76\u901a\u8fc7\u6307\u9488\u8fde\u63a5\u6210\u4e00\u4e2a\u94fe\u8868\uff0c\u5b9e\u73b0\u9ad8\u6548\u7684\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u3002</li> </ul> </li> </ul>"},{"location":"ch02_linkedlist/linkedlist/#62","title":"6.2 \u53cc\u5411\u94fe\u8868","text":"<ul> <li>LRU\u7f13\u5b58\uff08Least Recently Used Cache\uff09<ul> <li>LRU\u7f13\u5b58\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u7f13\u5b58\u66ff\u6362\u7b56\u7565\uff0c\u5176\u4e2d\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684\u6570\u636e\u88ab\u6dd8\u6c70\u3002\u53cc\u5411\u94fe\u8868\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0LRU\u7f13\u5b58\uff0c\u6bcf\u6b21\u8bbf\u95ee\u6570\u636e\u65f6\uff0c\u5c06\u5176\u79fb\u5230\u94fe\u8868\u7684\u5934\u90e8\uff0c\u8fd9\u6837\u5c3e\u90e8\u7684\u8282\u70b9\u5c31\u662f\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u6dd8\u6c70\u3002</li> </ul> </li> <li>\u53cc\u5411\u961f\u5217\uff08Deque\uff09<ul> <li>\u53cc\u5411\u961f\u5217\u662f\u4e00\u79cd\u5177\u6709\u961f\u5217\u548c\u6808\u7684\u7279\u6027\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u5728\u961f\u5217\u7684\u5934\u90e8\u548c\u5c3e\u90e8\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u3002\u53cc\u5411\u94fe\u8868\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u53cc\u5411\u961f\u5217\uff0c\u63d0\u4f9b\u9ad8\u6548\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u3002</li> </ul> </li> <li>\u56fe\u7684\u8868\u793a<ul> <li>\u5728\u56fe\u7684\u8868\u793a\u4e2d\uff0c\u6bcf\u4e2a\u9876\u70b9\u901a\u5e38\u5305\u542b\u4e00\u4e2a\u6307\u5411\u5176\u90bb\u5c45\u9876\u70b9\u7684\u94fe\u8868\u3002\u53cc\u5411\u94fe\u8868\u53ef\u4ee5\u7528\u4e8e\u8868\u793a\u6709\u5411\u56fe\u6216\u65e0\u5411\u56fe\u4e2d\u9876\u70b9\u7684\u90bb\u5c45\u5173\u7cfb\uff0c\u6bcf\u4e2a\u9876\u70b9\u53ef\u4ee5\u540c\u65f6\u4fdd\u5b58\u6307\u5411\u524d\u4e00\u4e2a\u90bb\u5c45\u548c\u540e\u4e00\u4e2a\u90bb\u5c45\u7684\u6307\u9488\u3002</li> </ul> </li> <li>\u6d4f\u89c8\u5668\u5386\u53f2\u8bb0\u5f55<ul> <li>\u5728\u6d4f\u89c8\u5668\u4e2d\uff0c\u53cc\u5411\u94fe\u8868\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u6d4f\u89c8\u5668\u7684\u5386\u53f2\u8bb0\u5f55\u529f\u80fd\u3002\u6bcf\u6b21\u8bbf\u95ee\u4e00\u4e2a\u65b0\u7684\u9875\u9762\uff0c\u5c06\u5176\u6dfb\u52a0\u5230\u94fe\u8868\u7684\u5c3e\u90e8\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u5b9e\u73b0\u524d\u8fdb\u548c\u540e\u9000\u529f\u80fd\u3002</li> </ul> </li> <li>\u6587\u672c\u7f16\u8f91\u5668\u7684\u64a4\u9500\u548c\u91cd\u505a\u64cd\u4f5c<ul> <li>\u5728\u6587\u672c\u7f16\u8f91\u5668\u4e2d\uff0c\u53cc\u5411\u94fe\u8868\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u64a4\u9500\u548c\u91cd\u505a\u64cd\u4f5c\u3002\u6bcf\u6b21\u7f16\u8f91\u64cd\u4f5c\u90fd\u53ef\u4ee5\u5c06\u7f16\u8f91\u5185\u5bb9\u6dfb\u52a0\u5230\u94fe\u8868\u7684\u5c3e\u90e8\uff0c\u53ef\u4ee5\u901a\u8fc7\u5411\u524d\u6216\u5411\u540e\u904d\u5386\u94fe\u8868\u6765\u5b9e\u73b0\u64a4\u9500\u548c\u91cd\u505a\u64cd\u4f5c\u3002</li> </ul> </li> <li>\u97f3\u4e50\u64ad\u653e\u5668\u7684\u64ad\u653e\u5217\u8868<ul> <li>\u5728\u97f3\u4e50\u64ad\u653e\u5668\u4e2d\uff0c\u53cc\u5411\u94fe\u8868\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u64ad\u653e\u5217\u8868\uff0c\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u4e00\u4e2a\u97f3\u4e50\u6587\u4ef6\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u5728\u5f53\u524d\u6b4c\u66f2\u7684\u524d\u540e\u63d2\u5165\u6216\u5220\u9664\u6b4c\u66f2\u3002</li> </ul> </li> </ul>"},{"location":"ch02_linkedlist/linkedlist/#63","title":"6.3 \u5faa\u73af\u94fe\u8868","text":"<ul> <li>\u7ea6\u745f\u592b\u95ee\u9898\uff08Josephus Problem\uff09<ul> <li>\u5728\u7ea6\u745f\u592b\u95ee\u9898\u4e2d\uff0c\u6709n\u4e2a\u4eba\u56f4\u6210\u4e00\u4e2a\u73af\u5f62\uff0c\u6bcf\u6b21\u4ece\u6307\u5b9a\u4f4d\u7f6e\u5f00\u59cb\u8ba1\u6570\uff0c\u5e76\u6309\u7167\u56fa\u5b9a\u89c4\u5219\u5c06\u5f53\u524d\u4f4d\u7f6e\u7684\u4eba\u79fb\u51fa\u73af\u5f62\uff0c\u76f4\u5230\u6700\u540e\u53ea\u5269\u4e0b\u4e00\u4e2a\u4eba\u3002\u73af\u5f62\u94fe\u8868\u53ef\u4ee5\u7528\u6765\u6a21\u62df\u548c\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</li> </ul> </li> <li>\u5faa\u73af\u961f\u5217\uff08Circular Queue\uff09<ul> <li>\u5faa\u73af\u961f\u5217\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u961f\u5217\u6570\u636e\u7ed3\u6784\uff0c\u5f53\u961f\u5217\u7684\u5c3e\u90e8\u8fbe\u5230\u6570\u7ec4\u7684\u672b\u5c3e\u65f6\uff0c\u53ef\u4ee5\u7ed5\u56de\u6570\u7ec4\u7684\u5f00\u5934\uff0c\u5f62\u6210\u4e00\u4e2a\u5faa\u73af\u3002\u73af\u5f62\u94fe\u8868\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u5faa\u73af\u961f\u5217\uff0c\u63d0\u4f9b\u9ad8\u6548\u7684\u961f\u5217\u64cd\u4f5c\u3002</li> </ul> </li> <li>\u5faa\u73af\u94fe\u8868\u904d\u5386<ul> <li>\u4f7f\u7528\u73af\u5f62\u94fe\u8868\u53ef\u4ee5\u5b9e\u73b0\u5faa\u73af\u904d\u5386\uff0c\u5373\u4ece\u4efb\u610f\u8282\u70b9\u5f00\u59cb\u904d\u5386\u6574\u4e2a\u94fe\u8868\uff0c\u800c\u4e0d\u4f1a\u51fa\u73b0\u904d\u5386\u5230\u5c3e\u8282\u70b9\u540e\u7684\u7ec8\u6b62\u6761\u4ef6\u3002</li> </ul> </li> <li>\u73af\u5f62\u7f13\u51b2\u533a\uff08Circular Buffer\uff09<ul> <li>\u73af\u5f62\u7f13\u51b2\u533a\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u5728\u56fa\u5b9a\u5927\u5c0f\u7684\u7f13\u51b2\u533a\u4e2d\u5faa\u73af\u5b58\u50a8\u6570\u636e\u3002\u73af\u5f62\u94fe\u8868\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u73af\u5f62\u7f13\u51b2\u533a\uff0c\u5b9e\u73b0\u9ad8\u6548\u7684\u6570\u636e\u8bfb\u5199\u64cd\u4f5c\u3002</li> </ul> </li> <li>\u5feb\u6162\u6307\u9488\u7b97\u6cd5\uff08Floyd's Cycle Detection Algorithm\uff09<ul> <li>\u5feb\u6162\u6307\u9488\u7b97\u6cd5\u662f\u4e00\u79cd\u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u5728\u73af\u5f62\u94fe\u8868\u4e2d\u5bfb\u627e\u73af\u7684\u7b97\u6cd5\u3002\u8be5\u7b97\u6cd5\u53ef\u4ee5\u5e94\u7528\u4e8e\u68c0\u6d4b\u73af\u5f62\u94fe\u8868\u4e2d\u662f\u5426\u5b58\u5728\u73af\u4ee5\u53ca\u627e\u5230\u73af\u7684\u8d77\u59cb\u8282\u70b9\u7b49\u95ee\u9898\u3002</li> </ul> </li> </ul>"},{"location":"ch02_linkedlist/linkedlist/#_8","title":"\u53c2\u8003","text":"<p>https://www.hello-algo.com/chapter_array_and_linkedlist/linked_list/</p> <p>https://www.programmercarl.com/%E9%93%BE%E8%A1%A8%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.html#%E9%93%BE%E8%A1%A8%E7%9A%84%E7%B1%BB%E5%9E%8B</p> <p>https://time.geekbang.org/column/article/41013</p>"},{"location":"ch02_linkedlist/skiplist/","title":"\u8df3\u8868","text":""},{"location":"ch02_linkedlist/skiplist/#_2","title":"\u4e00\u3001\u4ec0\u4e48\u662f\u8df3\u8868\uff1f","text":"<p>\u8df3\u8868\uff0c\u53c8\u53eb\u505a\u8df3\u8dc3\u8868\u3001\u8df3\u8dc3\u5217\u8868\u3002</p> <ul> <li>\u662f\u4e00\u79cd\u5bf9\u6709\u5e8f\u94fe\u5f0f\u7ebf\u6027\u8868\u7684\u4f18\u5316</li> <li>\u5728\u539f\u59cb\u94fe\u8868\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e86\u591a\u7ea7\u7d22\u5f15\u94fe\u8868</li> <li>\u5206\u4e3a\u591a\u5c42\uff0c\u4ece\u4e0b\u5f80\u4e0a\u5206\u522b\u662f\u539f\u59cb\u94fe\u8868\u3001\u4e00\u7ea7\u7d22\u5f15\u3001\u4e8c\u7ea7\u7d22\u5f15...</li> <li>\u641c\u7d22\u65f6\u4ece\u4e0a\u5f80\u4e0b\uff0c\u5b9e\u73b0\u4e86\u7c7b\u4f3c\u201c\u4e8c\u5206\u67e5\u627e\u201d\u7684\u529f\u80fd</li> </ul> <p>\u5b83\u7684\u7ed3\u6784\u5927\u6982\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code> ___                                 ___\n| 1 | ----------------------------&gt; | 5 |                -- \u4e8c\u7ea7\u7d22\u5f15\n  |                                   |\n ___               ___               ___\n| 1 | ----------&gt; | 3 | ----------&gt; | 5 |                -- \u4e00\u7ea7\u7d22\u5f15\n  |                 |                 |\n ___      ___      ___      ___      ___      ___\n| 1 | -&gt; | 2 | -&gt; | 3 | -&gt; | 4 | -&gt; | 5 | -&gt; | 6 |       -- \u539f\u59cb\u94fe\u8868\n</code></pre> <p>\u8df3\u8868\u5c31\u662f\u5bf9\u6709\u5e8f\u94fe\u8868\u7684\u4e00\u79cd\u4f18\u5316\uff0c\u901a\u8fc7\u6dfb\u52a0\u591a\u7ea7\u7d22\u5f15\u6765\u63d0\u5347\u6027\u80fd\u3002</p> <p>\u8df3\u8868\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u5229\u7528\u7a7a\u95f4\u6765\u6362\u65f6\u95f4\u7684\u6570\u636e\u7ed3\u6784\u3002</p>"},{"location":"ch02_linkedlist/skiplist/#_3","title":"\u4e8c\u3001\u4e3a\u4ec0\u4e48\u8981\u7528\u8df3\u8868\uff1f","text":""},{"location":"ch02_linkedlist/skiplist/#21","title":"2.1 \u5f15\u5165\u80cc\u666f","text":"<p>\u5bf9\u4e8e\u94fe\u8868\u6765\u8bf4\uff0c\u67e5\u627e\u67d0\u4e2a\u503c\uff0c\u53ea\u80fd\u901a\u8fc7\u904d\u5386\u7684\u65b9\u5f0f\u5b9e\u73b0\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f <code>O(n)</code>\u3002</p> <p>\u5373\u4f7f\u94fe\u8868\u662f\u6709\u5e8f\u7684\uff0c\u4f9d\u65e7\u4e5f\u53ea\u80fd\u662f\u4ece\u5934\u5230\u5c3e\u904d\u5386\uff0c\u5b8c\u5168\u6ca1\u6709\u7528\u5230\u6570\u636e\u7684\u6709\u5e8f\u6027\u3002</p> <pre><code> ___      ___      ___      ___      ___      ___\n| 1 | -&gt; | 2 | -&gt; | 3 | -&gt; | 4 | -&gt; | 5 | -&gt; | 6 |\n</code></pre> <p>\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6709\u6ca1\u6709\u529e\u6cd5\u7528\u5230\u94fe\u8868\u7684\u6709\u5e8f\u6027\uff1f</p> <ul> <li>\u7ed9\u94fe\u8868\u5efa\u7acb\u7d22\u5f15\uff0c\u65b9\u4fbf\u5feb\u901f\u5b9a\u4f4d\u6570\u636e\u7684\u533a\u95f4\u8303\u56f4</li> </ul> <p>\u6bd4\u5982\u8bf4\uff0c\u94fe\u8868\u7684\u6bcf2\u4e2a\u8282\u70b9\u5c31\u63d0\u53d6\u51fa\u4e00\u4e2a\u7d22\u5f15\u8282\u70b9\uff1a</p> <pre><code> ___               ___               ___\n| 1 | ----------&gt; | 3 | ----------&gt; | 5 |                -- \u7d22\u5f15\n  |                 |                 |\n ___      ___      ___      ___      ___      ___\n| 1 | -&gt; | 2 | -&gt; | 3 | -&gt; | 4 | -&gt; | 5 | -&gt; | 6 |       -- \u539f\u59cb\u94fe\u8868\n</code></pre> <p>\u901a\u8fc7\u7d22\u5f15\u5148\u5feb\u901f\u5b9a\u4f4d\u5230\u533a\u95f4 <code>[1, 3]</code>\u3001<code>[3, 5]</code> \u4ee5\u53ca <code>[5, +]</code>\uff0c\u7f29\u5c0f\u8303\u56f4\uff0c\u518d\u5c0f\u8303\u56f4\u904d\u5386\u641c\u7d22\u3002</p> <p>\u6bd4\u5982\u8bf4\uff0c\u67e5\u627e\u6570\u503c 4\uff1a</p> <ol> <li>\u9996\u5148\u5728\u7d22\u5f15\u5c42\u904d\u5386\u5224\u65ad\uff0c\u53d1\u73b0 4 \u662f\u5728\u533a\u95f4 <code>[3, 5]</code> \u5185\u7684</li> <li>\u7136\u540e\u627e\u5230\u4e86\u539f\u59cb\u94fe\u8868\u7684 3\uff0c\u518d\u4ece 3 \u5f00\u59cb\u5f80\u53f3\u904d\u5386\uff0c\u76f4\u5230\u627e\u5230 4</li> </ol> <p>4 \u7684\u641c\u7d22\u94fe\u8def\u5c31\u662f\uff1a<code>1 -&gt; 3 -&gt; 4</code>\uff0c\u8fd9\u5b9a\u4f4d\u901f\u5ea6\u5c31\u6bd4\u904d\u5386\u5feb\u591a\u4e86\u3002</p> <p>\u6709\u65f6\u5019\u5efa\u7b2c\u4e00\u5c42\u7d22\u5f15\u540e\uff0c\u904d\u5386\u8303\u56f4\u8fd8\u662f\u5f88\u5927\uff08\u7b2c\u4e00\u5c42\u7d22\u5f15\u7684\u8282\u70b9\u6570\u91cf\u662f n/2\uff09\u3002</p> <p>\u8fd9\u4e2a\u65f6\u5019\u8fd8\u53ef\u4ee5\u518d\u5f80\u4e0a\u591a\u5efa\u51e0\u5c42\u7d22\u5f15\uff1a</p> <pre><code> ___                                 ___\n| 1 | ----------------------------&gt; | 5 |                -- \u4e8c\u7ea7\u7d22\u5f15\n  |                                   |\n ___               ___               ___\n| 1 | ----------&gt; | 3 | ----------&gt; | 5 |                -- \u4e00\u7ea7\u7d22\u5f15\n  |                 |                 |\n ___      ___      ___      ___      ___      ___\n| 1 | -&gt; | 2 | -&gt; | 3 | -&gt; | 4 | -&gt; | 5 | -&gt; | 6 |       -- \u539f\u59cb\u94fe\u8868\n</code></pre> <p>\u8fd9\u79cd\u5728\u539f\u59cb\u94fe\u8868\u4e0a\u5efa\u591a\u5c42\u7d22\u5f15\uff0c\u5b9e\u73b0\u5feb\u901f\u67e5\u627e\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5c31\u662f\u8df3\u8868\u3002</p>"},{"location":"ch02_linkedlist/skiplist/#22","title":"2.2 \u7b97\u6cd5\u5206\u6790","text":"<p>\u539f\u59cb\u6709\u5e8f\u94fe\u8868\u7684\u7b97\u6cd5\u590d\u6742\u5ea6\u662f\uff1a</p> <ul> <li>\u641c\u7d22\uff1a\u65f6\u95f4 <code>O(n)</code>\uff0c\u7a7a\u95f4 <code>O(1)</code></li> <li>\u5220\u9664\uff1a\u65f6\u95f4 <code>O(n)</code>\uff0c\u7a7a\u95f4 <code>O(1)</code></li> <li>\u63d2\u5165\uff1a\u65f6\u95f4 <code>O(n)</code>\uff0c\u7a7a\u95f4 <code>O(1)</code></li> </ul> <p>\u8df3\u8868\u7684\u7b97\u6cd5\u590d\u6742\u5ea6\u5982\u4f55\u5462\uff1f\u4ee5 2 \u4e2a\u8282\u70b9 1 \u4e2a\u7d22\u5f15\u7684\u8df3\u8868\u4e3a\u4f8b\u3002</p> <p>1\uff09\u7a7a\u95f4\u590d\u6742\u5ea6</p> <p>\u8df3\u8868\u7684\u591a\u5c42\u7d22\u5f15\uff0c\u4ece\u4e0b\u5f80\u4e0a\u6570\u7684\u8bdd\uff0c\u8282\u70b9\u6570\u91cf\u5206\u522b\u662f\uff1a</p> <pre><code>n/2, n/4, n/8, ..., 2\n</code></pre> <p>\u603b\u5171\u662f <code>n/2 + n/4 + ... + 2 = n - 2</code>\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a</p> <ul> <li>\u8df3\u8868\u7ed3\u6784\u672c\u8eab\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u662f <code>O(n)</code></li> </ul> <p>2\uff09\u65f6\u95f4\u590d\u6742\u5ea6</p> <p>\u6839\u636e\u4e0a\u9762\u7684\u7ed3\u6784\uff0c\u8df3\u8868\u7684\u5c42\u7ea7\u6570\u91cf\u5f88\u5bb9\u6613\u77e5\u9053\uff1a</p> <ul> <li>\u8df3\u8868\u7684\u7d22\u5f15\u5c42\u7ea7\u6570\u91cf\u662f <code>logn</code></li> </ul> <p>\u94fe\u8868\u7684\u63d2\u5165\u548c\u5220\u9664\uff0c\u5b9e\u9645\u4e0a\u662f\u4f9d\u8d56\u4e8e\u641c\u7d22\uff0c\u6240\u4ee5\u53ea\u8981\u5206\u6790\u641c\u7d22\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5373\u53ef\u3002</p> <p>\u56e0\u4e3a\u6bcf 2 \u4e2a\u8282\u70b9\u5bf9\u5e94 1 \u4e2a\u7d22\u5f15\u8282\u70b9\uff0c\u6240\u4ee5\u6bcf\u4e00\u5c42\u7684\u641c\u7d22\u8282\u70b9\u6570\u91cf\u4e0d\u4f1a\u8d85\u8fc7 3\u3002</p> <p>\u6bd4\u5982\u4e0a\u4e00\u5c42\u7d22\u5f15\u786e\u5b9a\u4e86\u533a\u95f4 <code>[3, 5]</code>\uff0c\u90a3\u4e48\u5f80\u4e0b\u4e00\u5c42\u641c\u7d22\uff0c\u641c\u7d22\u53ea\u80fd\u662f <code>3,4,5</code>\u3002</p> <p>\u56e0\u6b64\u8df3\u8868\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4f9d\u8d56\u4e8e\u6bcf\u5c42\u904d\u5386\u7684\u8282\u70b9\u6570\u91cf\uff1a</p> <ul> <li>\u641c\u7d22\uff1a\u65f6\u95f4 <code>O(m * logn)</code></li> <li>\u5220\u9664\uff1a\u65f6\u95f4 <code>O(m * logn)</code></li> <li>\u63d2\u5165\uff1a\u65f6\u95f4 <code>O(m * logn)</code></li> </ul> <p>\u5176\u4e2d m \u662f\u6bcf\u5c42\u6700\u591a\u904d\u5386\u7684\u8282\u70b9\u6570\u91cf\u3002</p> <p>\u8df3\u8868\u5c06\u539f\u59cb\u94fe\u8868\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4ece <code>O(n)</code> \u63d0\u5347\u5230\u4e86 <code>O(logn)</code> \u7ea7\u522b\u3002</p> <p>\u5f53\u7136\uff0c\u8fd9\u662f\u5229\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u624d\u5f97\u5230\u7684\uff0c\u7a7a\u95f4\u6d88\u8017\u53d8\u591a\u4e86\u3002</p>"},{"location":"ch02_linkedlist/skiplist/#_4","title":"\u4e09\u3001\u8df3\u8868\u5982\u4f55\u5b9e\u73b0\uff1f","text":"<p>\u8df3\u8868\u7684\u5b9e\u73b0\u65b9\u5f0f\u53ef\u4ee5\u5206\u4e3a2\u79cd\uff1a</p> <ul> <li>\u6570\u7ec4\u5b9e\u73b0\uff1a\u7531\u4e00\u4e2a\u6570\u7ec4\u5b9e\u73b0\uff0c\u6570\u7ec4\u5185\u90e8\u5305\u542b\u591a\u5c42\u7d22\u5f15\u6307\u9488</li> <li>\u94fe\u8868\u5b9e\u73b0\uff1a\u6709\u591a\u6761\u94fe\u8868\u5b9e\u73b0\uff0c\u6bcf\u6761\u94fe\u8868\u4e00\u5c42\u7d22\u5f15</li> </ul> <p>\u5b83\u4eec\u7684\u533a\u522b\u53ea\u5728\u4e8e\u5e95\u5c42\u5b58\u50a8\u4e0d\u540c\uff0c\u5bf9\u5916\u662f\u4e00\u81f4\u7684\u3002</p> <p>\u4e0b\u9762\u4ee5\u94fe\u8868\u5b9e\u73b0\u4e3a\u4f8b\uff0c\u8bf4\u660e\u8df3\u8868\u7684\u5b9e\u73b0\u3002</p>"},{"location":"ch02_linkedlist/skiplist/#31","title":"3.1 \u8df3\u8868\u7684\u5b9a\u4e49","text":""},{"location":"ch02_linkedlist/skiplist/#311","title":"3.1.1 \u7ed3\u6784\u5b9a\u4e49","text":"<p>\u4e3a\u4e86\u51cf\u5c11\u4ee3\u7801\u4e2d\u7684\u5224\u7a7a\uff0c\u91c7\u7528\u4e86\u4e00\u4e2a\u54e8\u5175\u5934\u8282\u70b9\uff0c\u6240\u4ee5\u5b9e\u9645\u7684\u8df3\u8868\u7ed3\u6784\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>head\n ___\n|   | ---------------------------------------------------------&gt; null\n  |\n ___      ___                                 ___\n|   | -&gt; | 1 | ----------------------------&gt; | 5 | ------------&gt; null\n  |        |                                   |\n ___      ___               ___               ___\n|   | -&gt; | 1 | ----------&gt; | 3 | ----------&gt; | 5 | ------------&gt; null\n  |        |                 |                 |\n ___      ___      ___      ___      ___      ___      ___\n|   | -&gt; | 1 | -&gt; | 2 | -&gt; | 3 | -&gt; | 4 | -&gt; | 5 | -&gt; | 6 | ---&gt; null\n</code></pre> <p>\u9876\u5c42\u7684 <code>head</code> \u8282\u70b9\u5355\u72ec\u4e00\u5c42\uff0c\u5e76\u4e14\u8fd9\u4e00\u5c42\u53ea\u6709\u5b83\u4e00\u4e2a\u975e\u7a7a\u8282\u70b9\u3002</p>"},{"location":"ch02_linkedlist/skiplist/#312","title":"3.1.2 \u63a5\u53e3\u5b9a\u4e49","text":"<pre><code>public interface SkipList&lt;T extends Comparable&lt;T&gt;&gt; {\n\n    /**\n     * \u641c\u7d22\u6307\u5b9a\u503c\u662f\u5426\u5b58\u5728\n     *\n     * @param value \u6307\u5b9a\u503c\n     * @return true\u5b58\u5728/false\u4e0d\u5b58\u5728\n     */\n    boolean search(T value);\n\n    /**\n     * \u6dfb\u52a0\u65b0\u503c\n     *\n     * @param value \u65b0\u503c\n     */\n    void add(T value);\n\n    /**\n     * \u5220\u9664\u6307\u5b9a\u503c\n     *\n     * @param value \u6307\u5b9a\u503c\n     * @return true\u5220\u9664\u6210\u529f/false\u5220\u9664\u5931\u8d25\n     */\n    boolean erase(T value);\n\n}\n</code></pre>"},{"location":"ch02_linkedlist/skiplist/#313","title":"3.1.3 \u94fe\u5f0f\u8df3\u8868\u7684\u5b9a\u4e49","text":"<pre><code>public class LinkedSkipList&lt;T extends Comparable&lt;T&gt;&gt; implements SkipList&lt;T&gt; {\n\n    class Node {\n        // \u8282\u70b9\u503c\n        T value;\n        // \u540c\u4e00\u5c42\u7684\u53f3\u4fa7\u8282\u70b9\u6307\u9488\n        Node right;\n        // \u4e0b\u4e00\u5c42\u7684\u540c\u503c\u8282\u70b9\u6307\u9488\n        Node down;\n\n        public Node(T value, Node right, Node down) {\n            this.value = value;\n            this.right = right;\n            this.down = down;\n        }\n    }\n\n}\n</code></pre>"},{"location":"ch02_linkedlist/skiplist/#32","title":"3.2 \u8df3\u8868\u7684\u641c\u7d22","text":""},{"location":"ch02_linkedlist/skiplist/#321","title":"3.2.1 \u4ee3\u7801\u5b9e\u73b0","text":"<p>\u8df3\u8868\u7684\u641c\u7d22\uff0c\u5c31\u662f\u4ece\u9876\u5c42\u7684\u7d22\u5f15\u5f00\u59cb\uff0c\u4e00\u5c42\u4e00\u5c42\u5f80\u4e0b\u627e\uff0c\u76f4\u5230\u627e\u5bf9\u5bf9\u5e94\u7684\u8282\u70b9\u4e3a\u6b62\u3002</p> <pre><code>public boolean search(T value) {\n    Node p = head, q = null;\n    // \u4ece\u4e0a\u5f80\u4e0b\u4e00\u76f4\u627e\uff0c\u76f4\u5230\u6700\u5e95\u5c42\u7684\u539f\u59cb\u94fe\u8868\u4e3a\u6b62\n    while (p != null) {\n        // \u5728\u5f53\u524d\u5c42\u904d\u5386\u641c\u7d22\uff0c\u76f4\u5230\u627e\u5230 value \u6240\u5728\u533a\u95f4\n        while (p.right != null &amp;&amp; value.compareTo(p.right.value) &gt; 0) {\n            p = p.right;\n        }\n        // \u641c\u7d22\u4e0b\u4e00\u5c42\n        q = p;\n        p = p.down;\n    }\n    // \u9a8c\u8bc1\u8282\u70b9\u503c\u662f\u5426\u76f8\u7b49\n    return q != null &amp;&amp; q.right != null &amp;&amp; q.right.value.equals(value);\n}\n</code></pre>"},{"location":"ch02_linkedlist/skiplist/#322","title":"3.2.2 \u7ed3\u6784\u793a\u610f","text":"<p>\u641c\u7d22\u8fc7\u7a0b\u5c31\u7c7b\u4f3c\u4e0b\u9762\u8fd9\u6837\uff08\u6682\u65f6\u5ffd\u7565\u5176\u4ed6\u7ebf\uff09\uff1a</p> <pre><code>head\n ___\n|   |\n  |\n ___      ___                                 ___\n|   | -&gt; | 1 |                               | 5 |\n           |                                    \n ___      ___               ___               ___\n|   |    | 1 | ----------&gt; | 3 |             | 5 |\n                             |                  \n ___      ___      ___      ___      ___      ___      ___\n|   |    | 1 |    | 2 |    | 3 | -&gt; | 4 |    | 5 |    | 6 |\n</code></pre> <p>\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u4e00\u5c42\u4e00\u5c42\u627e\u7b26\u5408\u8303\u56f4\u7684\u533a\u95f4\uff0c\u76f4\u5230\u6700\u5e95\u5c42\u7684\u539f\u59cb\u94fe\u8868\u3002</p>"},{"location":"ch02_linkedlist/skiplist/#33","title":"3.3 \u8df3\u8868\u7684\u63d2\u5165","text":""},{"location":"ch02_linkedlist/skiplist/#331","title":"3.3.1 \u4ee3\u7801\u5b9e\u73b0","text":"<p>\u63d2\u5165\u8282\u70b9\uff0c\u9664\u4e86\u8981\u77e5\u9053\u63d2\u5165\u70b9\u7684\u4f4d\u7f6e\uff0c\u8fd8\u8981\u77e5\u9053\u4e0a\u4e00\u5c42\u8df3\u5230\u4e0b\u4e00\u5c42\u7684\u8f6c\u6298\u8282\u70b9\u3002</p> <p>\u56e0\u4e3a\u63d2\u5165\u8282\u70b9\uff0c\u4e0d\u4ec5\u4ec5\u662f\u63d2\u5165\u6700\u5e95\u5c42\uff0c\u4e0a\u9762\u7684\u7d22\u5f15\u5c42\u4e5f\u9700\u8981\u4e00\u8d77\u66f4\u65b0\u3002</p> <pre><code>/**\n * \u67e5\u627e\u6307\u5b9a\u503c\u7684\u524d\u7f6e\u8def\u5f84\n *\n * @param value \u6307\u5b9a\u503c\n * @return \u524d\u7f6e\u8def\u5f84\n */\nprivate List&lt;Node&gt; findProcessors(T value) {\n    Deque&lt;Node&gt; stack = new ArrayDeque&lt;&gt;();\n    Node p = head;\n    // \u4ece\u4e0a\u5f80\u4e0b\u4e00\u76f4\u627e\uff0c\u76f4\u5230\u6700\u5e95\u5c42\u7684\u539f\u59cb\u94fe\u8868\u4e3a\u6b62\n    while (p != null) {\n        // \u5728\u5f53\u524d\u5c42\u904d\u5386\u641c\u7d22\uff0c\u76f4\u5230\u627e\u5230 value \u6240\u5728\u533a\u95f4\n        while (p.right != null &amp;&amp; value.compareTo(p.right.value) &gt; 0) {\n            p = p.right;\n        }\n        // \u8bb0\u5f55\u4e0a\u4e00\u5c42\u8282\u70b9\n        stack.push(p);\n        // \u641c\u7d22\u4e0b\u4e00\u5c42\n        p = p.down;\n    }\n\n    // \u8def\u5f84\u662f\u5012\u5e8f\u6446\u653e\u7684\uff0c\u6700\u63a5\u8fd1\u503c value \u7684\u5728\u7d22\u5f15 0 \u7684\u4f4d\u7f6e\n    List&lt;Node&gt; path = new ArrayList&lt;&gt;(stack.size());\n    while (!stack.isEmpty()) {\n        path.add(stack.pop());\n    }\n    return path;\n}\n</code></pre> <p>\u67e5\u627e\u8fd4\u56de\u7684\u662f\u76ee\u6807\u8282\u70b9\u7684\u524d\u7f6e\u8def\u5f84\uff1a</p> <ul> <li>\u524d\u7f6e\u8def\u5f84\u662f\u641c\u7d22\u8fc7\u7a0b\u4e2d\u4e0a\u4e00\u5c42\u8df3\u5230\u4e0b\u4e00\u5c42\u7684\u90a3\u4e2a\u8f6c\u6298\u8282\u70b9\u5217\u8868</li> </ul> <p>\u6bd4\u5982\u4e0a\u9762\u641c\u7d22 4 \u65f6\uff0c\u641c\u7d22\u8def\u5f84\u662f <code>1-&gt;3-&gt;4</code>\uff0c\u90a3\u4e48\u5f97\u5230\u7684\u524d\u7f6e\u8def\u5f84\u5c31\u662f <code>[3, 1]</code>\u3002</p> <p>\u4e3a\u4ec0\u4e48\u524d\u7f6e\u8def\u5f84\u662f\u5012\u5e8f\u7684\uff1f</p> <ul> <li>\u56e0\u4e3a\u63d2\u5165\u8282\u70b9\u662f\u4ece\u4e0b\u5f80\u4e0a\u63d2\u5165\u7684\uff0c\u4e3a\u4e86\u65b9\u4fbf\u5c31\u5012\u5e8f\u8fd4\u56de\u4e86</li> </ul> <p>\u627e\u5230\u524d\u7f6e\u8def\u5f84\u540e\uff0c\u5c31\u53ef\u4ee5\u51c6\u5907\u63d2\u5165\u8282\u70b9\u4e86\uff1a</p> <pre><code>public void add(T value) {\n    List&lt;Node&gt; processors = findProcessors(value);\n    int levels = processors.size();\n\n    Node newNode = null;\n    boolean insertUp = true;\n    for (int i = 0; i &lt; levels &amp;&amp; insertUp; i++) {\n        Node processor = processors.get(i);\n        // \u65b0\u8282\u70b9\u6307\u5411\u4e0b\u4e00\u5c42\u7684\u540c\u503c\u8282\u70b9\n        newNode = new Node(value, processor.right, newNode);\n        // \u5728\u5f53\u524d\u5c42\u63d2\u5165\u65b0\u8282\u70b9\n        processor.right = newNode;\n\n        // \u662f\u5426\u8981\u7ee7\u7eed\u5f80\u4e0a\u4e00\u5c42\u63d2\u5165\u8282\u70b9\n        insertUp = random.nextDouble() &lt; FACTOR;\n    }\n\n    // \u66f4\u65b0\u5c42\u7ea7\n    if (insertUp) {\n        levelUp();\n    }\n}\n</code></pre>"},{"location":"ch02_linkedlist/skiplist/#332","title":"3.3.2 \u7ed3\u6784\u793a\u610f","text":"<p>\u6bd4\u5982\u63d2\u5165\u524d\u8df3\u8868\u7684\u7ed3\u6784\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>head\n ___\n|   | ---------------------------------------------------------&gt; null\n  |\n ___      ___                                 ___\n|   | -&gt; | 1 | ----------------------------&gt; | 5 | ------------&gt; null\n  |        |                                   |\n ___      ___                                 ___\n|   | -&gt; | 1 | ----------------------------&gt; | 5 | ------------&gt; null\n  |        |                                   |\n ___      ___      ___               ___      ___      ___\n|   | -&gt; | 1 | -&gt; | 2 | ----------&gt; | 4 | -&gt; | 5 | -&gt; | 6 | ---&gt; null\n</code></pre> <p>\u6b64\u65f6\u63d2\u5165\u4e00\u4e2a 3\uff0c\u63d2\u5165\u8fc7\u7a0b\u662f\u4ece\u4e0b\u5f80\u4e0a\u7684\uff1a</p> <p>1\uff09\u7b2c\u4e00\u6b21\u63d2\u5165</p> <pre><code>head\n ___\n|   | ---------------------------------------------------------&gt; null\n  |\n ___      ___                                 ___\n|   | -&gt; | 1 | ----------------------------&gt; | 5 | ------------&gt; null\n  |        |                                   |\n ___      ___                                 ___\n|   | -&gt; | 1 | ----------------------------&gt; | 5 | ------------&gt; null\n  |        |                                   |\n ___      ___      ___      ___      ___      ___      ___\n|   | -&gt; | 1 | -&gt; | 2 | -&gt; | 3 | -&gt; | 4 | -&gt; | 5 | -&gt; | 6 | ---&gt; null\n</code></pre> <p>2\uff09\u7b2c\u4e8c\u6b21\u63d2\u5165</p> <pre><code>head\n ___\n|   | ---------------------------------------------------------&gt; null\n  |\n ___      ___                                 ___\n|   | -&gt; | 1 | ----------------------------&gt; | 5 | ------------&gt; null\n  |        |                                   |\n ___      ___               ___               ___\n|   | -&gt; | 1 | ----------&gt; | 3 | ----------&gt; | 5 | ------------&gt; null\n  |        |                 |                 |\n ___      ___      ___      ___      ___      ___      ___\n|   | -&gt; | 1 | -&gt; | 2 | -&gt; | 3 | -&gt; | 4 | -&gt; | 5 | -&gt; | 6 | ---&gt; null\n</code></pre> <p>\u81f3\u4e8e\u9700\u8981\u63d2\u5165\u591a\u5c11\u5c42\uff0c\u8fd9\u4e2a\u662f\u901a\u8fc7\u968f\u673a\u6570\u63a7\u5236\u7684\u3002</p> <p>\u91c7\u7528\u4e86\u968f\u673a\u6570 <code>random.nextDouble() &lt; FACTOR</code>\uff0c\u6765\u5224\u65ad\u8981\u4e0d\u8981\u5f80\u4e0a\u4e00\u5c42\u63d2\u5165\u8282\u70b9\u3002</p> <p>\u4e3a\u4ec0\u4e48\u91c7\u7528\u968f\u673a\u6570\uff1f</p> <ul> <li>\u4e3a\u4e86\u51cf\u5c11\u7b97\u6cd5\u4ee3\u7801\u7684\u590d\u6742\u5ea6</li> <li>\u540c\u65f6\u53c8\u5c3d\u91cf\u786e\u4fdd\u8df3\u8868\u7684\u7ed3\u6784\u5e73\u8861</li> </ul> <p>\u8df3\u8868\u672c\u8eab\u4ee3\u7801\u5c31\u6bd4\u8f83\u7b80\u5355\uff0c\u5982\u679c\u4e3a\u4e86\u7ef4\u6301\u7ed3\u6784\u800c\u5f15\u5165\u5176\u4ed6\u590d\u6742\u7b97\u6cd5\uff0c\u663e\u5f97\u5f97\u4e0d\u507f\u5931\u3002</p> <p>\u968f\u673a\u6570\u5c31\u5f88\u5408\u9002\uff0c\u4f7f\u7528\u4e0d\u590d\u6742\uff0c\u800c\u4e14\u80fd\u5927\u6982\u7387\u4fdd\u8bc1\u8df3\u8868\u7ed3\u6784\u4e0d\u4f1a\u4e25\u91cd\u9000\u5316\u3002</p>"},{"location":"ch02_linkedlist/skiplist/#333","title":"3.3.3 \u63d0\u5347\u5c42\u7ea7","text":"<p>\u5982\u679c\u8282\u70b9\u88ab\u63d2\u5165\u5230\u4e86\u9876\u5c42\uff0c\u8fd9\u4e2a\u65f6\u5019\u9700\u8981\u63d0\u5347\u6574\u4e2a\u8df3\u8868\u7684\u5c42\u7ea7\u3002</p> <p>\u6bd4\u5982 3 \u8282\u70b9\u88ab\u63d2\u5165\u5230\u9876\u5c42\u540e\uff0c\u8df3\u8868\u7ed3\u6784\u53d8\u6210\u4e86\u8fd9\u6837\uff1a</p> <pre><code>head\n ___                        ___\n|   | -------------------&gt; | 3 | ------------------------------&gt; null\n  |\n ___      ___               ___               ___\n|   | -&gt; | 1 | ----------&gt; | 3 | ----------&gt; | 5 | ------------&gt; null\n  |        |                 |                 |\n ___      ___               ___               ___\n|   | -&gt; | 1 | ----------&gt; | 3 | ----------&gt; | 5 | ------------&gt; null\n  |        |                 |                 |\n ___      ___      ___      ___      ___      ___      ___\n|   | -&gt; | 1 | -&gt; | 2 | -&gt; | 3 | -&gt; | 4 | -&gt; | 5 | -&gt; | 6 | ---&gt; null\n</code></pre> <p>\u4e3a\u4e86\u7ef4\u6301\u8df3\u8868\u5934\u8282\u70b9\u5728\u5355\u72ec\u4e00\u5c42\u7684\u7ed3\u6784\uff0c\u5c31\u9700\u8981\u63d0\u5347\u5c42\u7ea7\uff1a</p> <pre><code>/**\n * \u63d0\u5347\u5c42\u7ea7\n */\nprivate void levelUp() {\n    // \u6700\u4e0a\u5c42\u53ea\u6709\u4e00\u4e2a\u5934\u8282\u70b9\n    head = new Node(null, null, head);\n}\n</code></pre> <p>\u63d0\u5347\u5c42\u7ea7\u540e\uff0c\u8df3\u8868\u7684\u7ed3\u6784\u5c31\u6062\u590d\u6b63\u5e38\u4e86\uff1a</p> <pre><code>head\n ___\n|   | ---------------------------------------------------------&gt; null\n  |\n ___                        ___\n|   | -------------------&gt; | 3 | ------------------------------&gt; null\n  |\n ___      ___               ___               ___\n|   | -&gt; | 1 | ----------&gt; | 3 | ----------&gt; | 5 | ------------&gt; null\n  |        |                 |                 |\n ___      ___               ___               ___\n|   | -&gt; | 1 | ----------&gt; | 3 | ----------&gt; | 5 | ------------&gt; null\n  |        |                 |                 |\n ___      ___      ___      ___      ___      ___      ___\n|   | -&gt; | 1 | -&gt; | 2 | -&gt; | 3 | -&gt; | 4 | -&gt; | 5 | -&gt; | 6 | ---&gt; null\n</code></pre>"},{"location":"ch02_linkedlist/skiplist/#34","title":"3.4 \u8df3\u8868\u7684\u5220\u9664","text":""},{"location":"ch02_linkedlist/skiplist/#341","title":"3.4.1 \u4ee3\u7801\u5b9e\u73b0","text":"<p>\u5220\u9664\u548c\u63d2\u5165\u8fc7\u7a0b\u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f\u5148\u627e\u5230\u524d\u7f6e\u8def\u5f84\u540e\uff0c\u518d\u5904\u7406\u8282\u70b9\uff1a</p> <pre><code>public boolean erase(T value) {\n    List&lt;Node&gt; processors = findProcessors(value);\n\n    // \u9a8c\u8bc1\u5220\u9664\u8282\u70b9\u662f\u5426\u5b58\u5728\uff0c\u6ca1\u6709\u627e\u5230\u5219\u76f4\u63a5\u8fd4\u56de\n    Node target = processors.get(0).right;\n    if (target == null || !value.equals(target.value)) {\n        return false;\n    }\n\n    // \u4ece\u4e0b\u5f80\u4e0a\uff0c\u9010\u5c42\u5220\u9664\u6307\u5b9a\u8282\u70b9\n    for (Node processor : processors) {\n        // \u6307\u5b9a value \u503c\u7684\u8282\u70b9\u5728\u6bcf\u4e00\u5c42\u90fd\u5220\u5b8c\u4e86\uff0c\u5c31\u8df3\u51fa\u5faa\u73af\n        Node delNode = processor.right;\n        if (delNode == null || !delNode.value.equals(value)) {\n            break;\n        }\n        processor.right = delNode.right;\n    }\n\n    // \u66f4\u65b0\u5c42\u7ea7\n    levelDown();\n\n    return true;\n}\n</code></pre>"},{"location":"ch02_linkedlist/skiplist/#342","title":"3.4.2 \u7ed3\u6784\u793a\u610f","text":"<p>\u5220\u9664\u4e5f\u548c\u63d2\u5165\u4e00\u6837\uff0c\u662f\u4ece\u4e0b\u5f80\u4e0a\u7684\u3002\u6bd4\u5982\u5220\u9664 3\uff1a</p> <p>1\uff09\u7b2c\u4e00\u6b21\u5220\u9664</p> <pre><code>head\n ___\n|   | ---------------------------------------------------------&gt; null\n  |\n ___      ___                                 ___\n|   | -&gt; | 1 | ----------------------------&gt; | 5 | ------------&gt; null\n  |        |                                   |\n ___      ___               ___               ___\n|   | -&gt; | 1 | ----------&gt; | 3 | ----------&gt; | 5 | ------------&gt; null\n  |        |                                   |\n ___      ___      ___               ___      ___      ___\n|   | -&gt; | 1 | -&gt; | 2 | ----------&gt; | 4 | -&gt; | 5 | -&gt; | 6 | ---&gt; null\n</code></pre> <p>2\uff09\u7b2c\u4e8c\u6b21\u5220\u9664</p> <pre><code>head\n ___\n|   | ---------------------------------------------------------&gt; null\n  |\n ___      ___                                 ___\n|   | -&gt; | 1 | ----------------------------&gt; | 5 | ------------&gt; null\n  |        |                                   |\n ___      ___                                 ___\n|   | -&gt; | 1 | ----------------------------&gt; | 5 | ------------&gt; null\n  |        |                                   |\n ___      ___      ___               ___      ___      ___\n|   | -&gt; | 1 | -&gt; | 2 | ----------&gt; | 4 | -&gt; | 5 | -&gt; | 6 | ---&gt; null\n</code></pre>"},{"location":"ch02_linkedlist/skiplist/#343","title":"3.4.3 \u964d\u4f4e\u5c42\u7ea7","text":"<p>\u5220\u9664\u8282\u70b9\u540e\uff0c\u6709\u53ef\u80fd\u5bfc\u81f4\u8df3\u8868\u7684\u4e0a\u5c42\u8282\u70b9\u53d8\u5f97\u6bd4\u8f83\u5c11\uff0c\u6b64\u65f6\u9700\u8981\u964d\u4f4e\u5c42\u7ea7\u3002</p> <p>\u6bd4\u5982\u628a 1 \u548c 5 \u90fd\u5220\u6389\u540e\uff1a</p> <pre><code>head\n ___\n|   | ---------------------------------------------------------&gt; null\n  |\n ___                                          \n|   | ---------------------------------------------------------&gt; null\n  |                                             \n ___                                      \n|   | ---------------------------------------------------------&gt; null\n  |                                             \n ___               ___               ___               ___\n|   | ----------&gt; | 2 | ----------&gt; | 4 | ----------&gt; | 6 | ---&gt; null\n</code></pre> <p>\u4e0a\u9762\u51e0\u5c42\u94fe\u8868\u90fd\u7a7a\u4e86\uff0c\u6d6a\u8d39\u7a7a\u95f4\uff0c\u8fd9\u4e2a\u65f6\u5019\u9700\u8981\u5c06\u8fd9\u4e9b\u8282\u70b9\u5f88\u5c11\u7684\u5c42\u7ea7\u5220\u9664\uff1a</p> <pre><code>/**\n * \u964d\u4f4e\u5c42\u7ea7\n */\nprivate void levelDown() {\n    while (head.down != null) {\n        // \u8fde\u7eed 2 \u5c42\u4e3a\u7a7a\u65f6\uff0c\u624d\u964d\u4f4e\u5c42\u7ea7\uff0c\u56e0\u4e3a\u6700\u4e0a\u5c42\u53ea\u6709 1 \u4e2a\u5934\u8282\u70b9\n        if (head.right != null || head.down.right != null) {\n            break;\n        }\n        Node p = head;\n        head = head.down;\n        p.down = null;\n    }\n}\n</code></pre> <p>\u5220\u9664\u540e\uff0c\u8df3\u8868\u53c8\u6062\u590d\u6210\u6b63\u5e38\u7684\u7ed3\u6784\u4e86\uff1a</p> <pre><code>head\n ___\n|   | ---------------------------------------------------------&gt; null\n  |                                             \n ___               ___               ___               ___\n|   | ----------&gt; | 2 | ----------&gt; | 4 | ----------&gt; | 6 | ---&gt; null\n</code></pre>"},{"location":"ch02_linkedlist/skiplist/#_5","title":"\u56db\u3001\u8df3\u8868\u7684\u5e94\u7528\u573a\u666f","text":"<p>\u8df3\u8868\u8bbe\u8ba1\u7684\u76ee\u7684\uff0c\u662f\u4e3a\u4e86\u5feb\u901f\u67e5\u627e\u3002\u6240\u4ee5\u5b83\u6bd4\u8f83\u9002\u5408\u8fd9\u4e9b\u573a\u666f\uff1a</p> <ul> <li>\u662f\u6709\u5e8f\u94fe\u8868\uff0c\u65e0\u5e8f\u94fe\u8868\u7528\u4e0d\u4e86</li> <li>\u591a\u6b21\u67e5\u8be2\u94fe\u8868\uff0c\u6ce8\u610f\u662f\u591a\u6b21\uff0c\u53ea\u67e5\u4e00\u6b21\u7684\u8bdd\u4e0d\u5982\u76f4\u63a5\u904d\u5386</li> <li>\u8f83\u5c11\u7684\u63d2\u5165\u548c\u5220\u9664\uff0c\u867d\u7136\u8df3\u8868\u7684\u63d2\u5165\u5220\u9664\u6027\u80fd\u4e0d\u5dee\uff0c\u4f46\u662f\u5176\u76ee\u7684\u4e0d\u5728\u4e8e\u6b64</li> </ul> <p>\u5176\u5b9e\u672c\u8d28\u4e0a\uff0c</p> <ul> <li>\u8df3\u8868\u5c31\u662f\u4e8c\u5206\u67e5\u627e\u7684\u94fe\u8868\u5b9e\u73b0\u7248\u672c</li> </ul> <p>\u6240\u4ee5\u6709\u5e8f\u6570\u7ec4\u4e8c\u5206\u67e5\u627e\u9002\u7528\u7684\u573a\u666f\uff0c\u57fa\u672c\u9002\u7528\u4e8e\u6709\u5e8f\u94fe\u8868\u7684\u8df3\u8868\u3002</p>"},{"location":"ch02_linkedlist/skiplist/#_6","title":"\u53c2\u8003","text":"<p>https://leetcode.cn/problems/design-skiplist/</p> <p>https://blog.csdn.net/yjw123456/article/details/105159817/</p> <p>https://blog.csdn.net/weixin_45480785/article/details/116293416</p> <p>https://baijiahao.baidu.com/s?id=1710441201075985657&amp;wfr=spider&amp;for=pc</p>"},{"location":"ch02_linkedlist/skiplist/#_7","title":"\u9644\u5f55","text":""},{"location":"ch02_linkedlist/skiplist/#_8","title":"\u8df3\u8868\u63a5\u53e3","text":"<pre><code>/**\n * \u8df3\u8868\u63a5\u53e3\n *\n * @author weijiaduo\n * @since 2022/7/28\n */\npublic interface SkipList&lt;T extends Comparable&lt;T&gt;&gt; {\n\n    /**\n     * \u641c\u7d22\u6307\u5b9a\u503c\u662f\u5426\u5b58\u5728\n     *\n     * @param value \u6307\u5b9a\u503c\n     * @return true\u5b58\u5728/false\u4e0d\u5b58\u5728\n     */\n    boolean search(T value);\n\n    /**\n     * \u6dfb\u52a0\u65b0\u503c\n     *\n     * @param value \u65b0\u503c\n     */\n    void add(T value);\n\n    /**\n     * \u5220\u9664\u6307\u5b9a\u503c\n     *\n     * @param value \u6307\u5b9a\u503c\n     * @return true\u5220\u9664\u6210\u529f/false\u5220\u9664\u5931\u8d25\n     */\n    boolean erase(T value);\n\n}\n</code></pre>"},{"location":"ch02_linkedlist/skiplist/#_9","title":"\u94fe\u8868\u5b9e\u73b0","text":"<pre><code>/**\n * \u8df3\u8868\uff08\u94fe\u8868\uff09\n *\n * @author weijiaduo\n * @since 2022/7/28\n */\npublic class LinkedSkipList&lt;T extends Comparable&lt;T&gt;&gt; implements SkipList&lt;T&gt; {\n\n    class Node {\n        T value;\n        Node right;\n        Node down;\n\n        public Node(T value, Node right, Node down) {\n            this.value = value;\n            this.right = right;\n            this.down = down;\n        }\n    }\n\n    /**\n     * \u9ed8\u8ba4\u6700\u5927\u5c42\u7ea7\n     */\n    static final int DEFAULT_MAX_LEVEL = 32;\n    /**\n     * \u968f\u673a\u56e0\u5b50\n     */\n    static final double FACTOR = 0.25;\n\n    /**\n     * \u54e8\u5175\u5934\u8282\u70b9\n     */\n    Node head;\n    /**\n     * \u6700\u5927\u5c42\u7ea7\n     */\n    int maxLevels;\n    /**\n     * \u968f\u673a\u6570\n     */\n    Random random = new Random();\n\n    public LinkedSkipList() {\n        this(DEFAULT_MAX_LEVEL);\n    }\n\n    public LinkedSkipList(int maxLevels) {\n        this.maxLevels = maxLevels;\n        this.head = new Node(null, null, null);\n    }\n\n    @Override\n    public boolean search(T value) {\n        Node p = head, q = null;\n        // \u4ece\u4e0a\u5f80\u4e0b\u4e00\u76f4\u627e\uff0c\u76f4\u5230\u6700\u5e95\u5c42\u7684\u539f\u59cb\u94fe\u8868\u4e3a\u6b62\n        while (p != null) {\n            // \u5728\u5f53\u524d\u5c42\u904d\u5386\uff0c\u76f4\u5230\u627e\u5230 value \u6240\u5728\u533a\u95f4\n            while (p.right != null &amp;&amp; value.compareTo(p.right.value) &gt; 0) {\n                p = p.right;\n            }\n            // \u8bb0\u5f55\u4e0a\u4e00\u5c42\u7684\u8f6c\u6298\u70b9\n            q = p;\n            // \u641c\u7d22\u4e0b\u4e00\u5c42\n            p = p.down;\n        }\n        return q != null &amp;&amp; q.right != null &amp;&amp; q.right.value.equals(value);\n    }\n\n    @Override\n    public void add(T value) {\n        List&lt;Node&gt; processors = findProcessors(value);\n        int levels = processors.size();\n\n        Node newNode = null;\n        boolean insertUp = true;\n        for (int i = 0; i &lt; levels &amp;&amp; insertUp; i++) {\n            Node processor = processors.get(i);\n            // \u65b0\u8282\u70b9\u6307\u5411\u4e0b\u4e00\u5c42\u7684\u540c\u503c\u8282\u70b9\n            newNode = new Node(value, processor.right, newNode);\n            // \u5728\u5f53\u524d\u5c42\u63d2\u5165\u65b0\u8282\u70b9\n            processor.right = newNode;\n\n            // \u662f\u5426\u8981\u7ee7\u7eed\u5f80\u4e0a\u4e00\u5c42\u63d2\u5165\u8282\u70b9\n            insertUp = random.nextDouble() &lt; FACTOR;\n        }\n\n        // \u66f4\u65b0\u5c42\u7ea7\n        if (insertUp) {\n            levelUp();\n        }\n    }\n\n    @Override\n    public boolean erase(T value) {\n        List&lt;Node&gt; processors = findProcessors(value);\n\n        // \u9a8c\u8bc1\u5220\u9664\u8282\u70b9\u662f\u5426\u5b58\u5728\uff0c\u6ca1\u6709\u627e\u5230\u5219\u76f4\u63a5\u8fd4\u56de\n        Node target = processors.get(0).right;\n        if (target == null || !value.equals(target.value)) {\n            return false;\n        }\n\n        // \u4ece\u4e0b\u5f80\u4e0a\uff0c\u9010\u5c42\u5220\u9664\u6307\u5b9a\u8282\u70b9\n        for (Node processor : processors) {\n            // \u6307\u5b9a value \u503c\u7684\u8282\u70b9\u5728\u6bcf\u4e00\u5c42\u90fd\u5220\u5b8c\u4e86\uff0c\u5c31\u8df3\u51fa\u5faa\u73af\n            Node delNode = processor.right;\n            if (delNode == null || !delNode.value.equals(value)) {\n                break;\n            }\n            processor.right = delNode.right;\n        }\n\n        // \u66f4\u65b0\u5c42\u7ea7\n        levelDown();\n\n        return true;\n    }\n\n    /**\n     * \u63d0\u5347\u5c42\u7ea7\n     */\n    private void levelUp() {\n        // \u6700\u4e0a\u5c42\u53ea\u6709\u4e00\u4e2a\u5934\u8282\u70b9\n        head = new Node(null, null, head);\n    }\n\n    /**\n     * \u964d\u4f4e\u5c42\u7ea7\n     */\n    private void levelDown() {\n        while (head.down != null) {\n            // \u8fde\u7eed 2 \u5c42\u4e3a\u7a7a\u65f6\uff0c\u624d\u964d\u4f4e\u5c42\u7ea7\uff0c\u56e0\u4e3a\u6700\u4e0a\u5c42\u53ea\u6709 1 \u4e2a\u5934\u8282\u70b9\n            if (head.right != null || head.down.right != null) {\n                break;\n            }\n            Node p = head;\n            head = head.down;\n            p.down = null;\n        }\n    }\n\n    /**\n     * \u67e5\u627e\u6307\u5b9a\u503c\u7684\u524d\u7f6e\u8def\u5f84\n     *\n     * @param value \u6307\u5b9a\u503c\n     * @return \u524d\u7f6e\u8def\u5f84\n     */\n    private List&lt;Node&gt; findProcessors(T value) {\n        Deque&lt;Node&gt; stack = new ArrayDeque&lt;&gt;();\n        Node p = head;\n        // \u4ece\u4e0a\u5f80\u4e0b\u4e00\u76f4\u627e\uff0c\u76f4\u5230\u6700\u5e95\u5c42\u7684\u539f\u59cb\u94fe\u8868\u4e3a\u6b62\n        while (p != null) {\n            // \u5728\u5f53\u524d\u5c42\u904d\u5386\uff0c\u76f4\u5230\u627e\u5230 value \u6240\u5728\u533a\u95f4\n            while (p.right != null &amp;&amp; value.compareTo(p.right.value) &gt; 0) {\n                p = p.right;\n            }\n            // \u8bb0\u5f55\u4e0a\u4e00\u5c42\u7684\u8f6c\u6298\u70b9\n            stack.push(p);\n            // \u641c\u7d22\u4e0b\u4e00\u5c42\n            p = p.down;\n        }\n\n        // \u8def\u5f84\u662f\u5012\u5e8f\u6446\u653e\u7684\uff0c\u6700\u63a5\u8fd1\u503c value \u7684\u5728\u7d22\u5f15 0 \u7684\u4f4d\u7f6e\n        List&lt;Node&gt; path = new ArrayList&lt;&gt;(stack.size());\n        while (!stack.isEmpty()) {\n            path.add(stack.pop());\n        }\n        return path;\n    }\n\n}\n</code></pre>"},{"location":"ch02_linkedlist/skiplist/#_10","title":"\u6570\u7ec4\u5b9e\u73b0","text":"<pre><code>/**\n * \u8df3\u8868\uff08\u6570\u7ec4\u5b9e\u73b0\uff09\n *\n * @author weijiaduo\n * @since 2022/7/27\n */\npublic class ArraySkipList&lt;T extends Comparable&lt;T&gt;&gt; implements SkipList&lt;T&gt; {\n\n    class Node {\n        T value;\n        List&lt;Node&gt; forwards;\n\n        Node(T value, int levels) {\n            this.value = value;\n            forwards = new ArrayList&lt;&gt;(levels);\n            for (int i = 0; i &lt; levels; i++) {\n                forwards.add(null);\n            }\n        }\n    }\n\n    /**\n     * \u9ed8\u8ba4\u6700\u5927\u5c42\u7ea7\n     */\n    static final int DEFAULT_MAX_LEVEL = 32;\n    /**\n     * \u968f\u673a\u56e0\u5b50\n     */\n    static final double FACTOR = 0.25;\n\n    /**\n     * \u54e8\u5175\u5934\u8282\u70b9\n     */\n    Node head;\n    /**\n     * \u5f53\u524d\u5c42\u7ea7\n     */\n    int levels = 0;\n    /**\n     * \u6700\u5927\u5c42\u7ea7\n     */\n    int maxLevels;\n    /**\n     * \u968f\u673a\u6570\n     */\n    Random random = new Random();\n\n    public ArraySkipList() {\n        this(DEFAULT_MAX_LEVEL);\n    }\n\n    public ArraySkipList(int maxLevels) {\n        this.maxLevels = maxLevels;\n        head = new Node(null, maxLevels);\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public boolean search(T value) {\n        Node p = head, q = null;\n        // \u4ece\u4e0a\u5f80\u4e0b\u4e00\u76f4\u627e\uff0c\u76f4\u5230\u6700\u5e95\u5c42\u7684\u539f\u59cb\u94fe\u8868\u4e3a\u6b62\n        for (int i = levels - 1; i &gt;= 0; i--) {\n            // \u5728\u5f53\u524d\u5c42\u904d\u5386\uff0c\u76f4\u5230\u627e\u5230 value \u6240\u5728\u533a\u95f4\n            Node right = p.forwards.get(i);\n            while (right != null &amp;&amp; value.compareTo(right.value) &gt; 0) {\n                p = right;\n                right = p.forwards.get(i);\n            }\n            // \u8bb0\u5f55\u4e0a\u4e00\u5c42\u7684\u8f6c\u6298\u70b9\n            q = p;\n        }\n        if (q != null) {\n            Node target = q.forwards.get(0);\n            return target != null &amp;&amp; value.equals(target.value);\n        }\n        return false;\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public void add(T value) {\n        List&lt;Node&gt; processors = findProcessors(value);\n        int lv = randomLevel();\n        levels = Math.max(levels, lv);\n        Node newNode = new Node(value, levels);\n        for (int i = 0; i &lt; lv; i++) {\n            Node processor = processors.get(i);\n            newNode.forwards.set(i, processor.forwards.get(i));\n            processor.forwards.set(i, newNode);\n        }\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public boolean erase(T value) {\n        List&lt;Node&gt; processors = findProcessors(value);\n        Node target = processors.get(0).forwards.get(0);\n        if (target == null || !value.equals(target.value)) {\n            return false;\n        }\n\n        // \u4ece\u4e0b\u5f80\u4e0a\uff0c\u9010\u5c42\u5220\u9664\u6307\u5b9a\u8282\u70b9\n        for (int i = 0; i &lt; levels; i++) {\n            Node processor = processors.get(i);\n            Node delNode = processor.forwards.get(i);\n            if (delNode == null || delNode != target) {\n                break;\n            }\n            processor.forwards.set(i, delNode.forwards.get(i));\n        }\n\n        // \u964d\u4f4e\u5c42\u7ea7\uff0c\u6700\u9876\u5c42\u53ea\u6709\u5934\u8282\u70b9\u65f6\n        for (; levels &gt; 1; levels--) {\n            if (head.forwards.get(levels - 1) != null) {\n                break;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * \u67e5\u627e\u6307\u5b9a\u503c\u7684\u524d\u7f6e\u8def\u5f84\n     *\n     * @param value \u6307\u5b9a\u503c\n     * @return \u524d\u7f6e\u8def\u5f84\n     */\n    private List&lt;Node&gt; findProcessors(T value) {\n        List&lt;Node&gt; path = new ArrayList&lt;&gt;(maxLevels);\n        for (int i = 0; i &lt; maxLevels; i++) {\n            path.add(head);\n        }\n        Node p = head;\n        for (int i = levels - 1; i &gt;= 0; i--) {\n            // \u5728\u5f53\u524d\u5c42\u904d\u5386\uff0c\u76f4\u5230\u627e\u5230 value \u6240\u5728\u533a\u95f4\n            Node right = p.forwards.get(i);\n            while (right != null &amp;&amp; value.compareTo(right.value) &gt; 0) {\n                p = right;\n                right = p.forwards.get(i);\n            }\n            // \u8bb0\u5f55\u4e0a\u4e00\u5c42\u7684\u8f6c\u6298\u70b9\n            path.set(i, p);\n        }\n        return path;\n    }\n\n    /**\n     * \u968f\u673a\u5c42\u7ea7\n     * &lt;p&gt;\n     * \u8fd9\u4e2a\u968f\u673a\u6709\u70b9\u5f71\u54cd\u65f6\u95f4\n     *\n     * @return \u968f\u5373\u5c42\u7ea7\n     */\n    private int randomLevel() {\n        int lv = 1;\n        while (lv &lt; maxLevels &amp;&amp; random.nextDouble() &lt; FACTOR) {\n            lv++;\n        }\n        return lv;\n    }\n\n}\n</code></pre>"},{"location":"ch03_queue/","title":"\u961f\u5217","text":""},{"location":"ch03_queue/queue/","title":"\u961f\u5217","text":""},{"location":"ch03_queue/queue/#_2","title":"\u4e00\u3001\u7ed3\u6784\u7279\u6027","text":"<p>\u57fa\u672c\u5b9a\u4e49\uff1a</p> <ul> <li>\u961f\u5217\u662f\u4e00\u79cd\u9075\u5faa\u5148\u5165\u5148\u51fa\u89c4\u5219\u7684\u7ebf\u6027\u6570\u636e\u7ed3\u6784</li> </ul> <p>\u4e3b\u8981\u7279\u70b9\uff1a</p> <ul> <li>\u6570\u636e\u662f\u5148\u8fdb\u5148\u51fa\uff0c\u540e\u8fdb\u540e\u51fa</li> <li>\u53ea\u5141\u8bb8\u4ece\u961f\u9996\u5165\u961f\uff0c\u4ece\u961f\u5c3e\u51fa\u961f</li> </ul> <p>\u961f\u5217\u7684\u4e24\u7aef\u5206\u522b\u79f0\u4e3a\u300c\u961f\u9996\u300d\u548c\u300c\u961f\u5c3e\u300d\u3002</p> <ul> <li>\u961f\u9996\uff1a\u5141\u8bb8\u5220\u9664\u7684\u4e00\u7aef</li> <li>\u961f\u5c3e\uff1a\u5141\u8bb8\u63d2\u5165\u7684\u4e00\u7aef</li> </ul> <pre><code>                   \u961f\u9996        \u961f\u5c3e\n                    |           |\n                    v           v\n                  \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n \u51fa\u961f\u65b9\u5411 &lt;--      | 1 | 2 | 3 | 4               &lt;-- \u5165\u961f\u65b9\u5411\n                  \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n</code></pre> <p>\u961f\u5217\u7c7b\u4f3c\u4e8e\u7ba1\u9053\u4e00\u6837\uff0c\u4ece\u4e00\u7aef\u8fdb\u5165\uff0c\u4ece\u53e6\u4e00\u7aef\u51fa\u6765\u3002</p>"},{"location":"ch03_queue/queue/#_3","title":"\u4e8c\u3001\u5e38\u7528\u64cd\u4f5c","text":"<p>\u961f\u5217\u7684\u5e38\u7528\u64cd\u4f5c\u6709 3 \u79cd\uff1a</p> <ul> <li>\u8bbf\u95ee\uff1a\u8bbf\u95ee\u961f\u9996\u3001\u961f\u5c3e</li> <li>\u5165\u961f\uff1a\u4ece\u961f\u5c3e\u5165\u961f</li> <li>\u51fa\u961f\uff1a\u4ece\u961f\u9996\u51fa\u961f</li> </ul>"},{"location":"ch03_queue/queue/#21","title":"2.1 \u8bbf\u95ee\u64cd\u4f5c","text":"<p>\u961f\u5217\u53ef\u4ee5\u8bbf\u95ee\u961f\u9996\u548c\u961f\u5c3e\uff0c\u4f46\u662f\u4e0d\u80fd\u8bbf\u95ee\u4e2d\u95f4\u7684\u5143\u7d20\u3002</p> <pre><code>  \u961f\u9996        \u961f\u5c3e\n   |           |\n   v           v\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n | 1 | 2 | 3 | 4\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n   ^           ^\n   |           |\n  \u8bbf\u95ee        \u8bbf\u95ee\n</code></pre>"},{"location":"ch03_queue/queue/#22","title":"2.2 \u5165\u961f\u64cd\u4f5c","text":"<p>\u5165\u961f\u662f\u4ece\u961f\u5c3e\u5165\u961f\uff0c\u4ece\u961f\u5c3e\u5143\u7d20\u540e\u8ffd\u52a0\uff0c\u65b0\u6dfb\u52a0\u7684\u5143\u7d20\u53d8\u6210\u961f\u5c3e\u3002</p> <pre><code>  \u961f\u9996        \u961f\u5c3e\n   |           |\n   v           v\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n | 1 | 2 | 3 | 4\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n          | \u5165\u961f 5\n          v\n\n  \u961f\u9996            \u961f\u5c3e\n   |               |\n   v               v\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n | 1 | 2 | 3 | 4 | 5\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n</code></pre>"},{"location":"ch03_queue/queue/#23","title":"2.3 \u51fa\u961f\u64cd\u4f5c","text":"<p>\u51fa\u961f\u662f\u4ece\u961f\u9996\u51fa\u961f\uff0c\u5c06\u961f\u9996\u5143\u7d20\u5220\u9664\uff0c\u961f\u5217\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\u53d8\u6210\u961f\u9996\u3002</p> <pre><code>  \u961f\u9996        \u961f\u5c3e\n   |           |\n   v           v\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n | 1 | 2 | 3 | 4\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n        | \u51fa\u961f 1\n        v\n\n  \u961f\u9996    \u961f\u5c3e\n   |       |\n   v       v\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n | 2 | 3 | 4\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n</code></pre>"},{"location":"ch03_queue/queue/#_4","title":"\u4e09\u3001\u5b9e\u73b0\u65b9\u5f0f","text":"<p>\u6839\u636e\u961f\u5217\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5206\u4e3a\u51e0\u79cd\uff1a</p> <ul> <li>\u987a\u5e8f\u961f\u5217\uff1a\u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0</li> <li>\u94fe\u5f0f\u961f\u5217\uff1a\u57fa\u4e8e\u94fe\u8868\u5b9e\u73b0</li> <li>\u5faa\u73af\u961f\u5217\uff1a\u961f\u5217\u7684\u5934\u5c3e\u76f8\u8fde\uff0c\u5f62\u6210\u4e00\u4e2a\u73af</li> </ul>"},{"location":"ch03_queue/queue/#31","title":"3.1 \u987a\u5e8f\u961f\u5217","text":"<p>\u987a\u5e8f\u961f\u5217\u662f\u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0\u7684\u961f\u5217\u3002</p> <pre><code>  \u961f\u9996        \u961f\u5c3e\n   |           |\n   v           v\n  ___ ___ ___ ___ ___ ___ ___\n | 1 | 2 | 3 | 4 |   |   |   |      &lt;- \u6570\u7ec4\n</code></pre> <p>\u5165\u961f\u4e00\u822c\u662f\u5728\u6570\u7ec4\u672b\u7aef\uff1a</p> <pre><code>  \u961f\u9996            \u961f\u5c3e\n   |               |\n   v               v\n  ___ ___ ___ ___ ___ ___ ___\n | 1 | 2 | 3 | 4 | 5 |   |   |\n</code></pre> <p>\u5165\u961f\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(1)\u3002</p> <p>\u51fa\u961f\u4e00\u822c\u662f\u5728\u6570\u7ec4\u9996\u7aef\uff1a</p> <pre><code>      \u961f\u9996    \u961f\u5c3e\n       |       |\n       v       v\n  ___ ___ ___ ___ ___ ___ ___\n |   | 2 | 3 | 4 |   |   |   |\n</code></pre> <p>\u51fa\u961f\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(1)\u3002</p> <p>\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u961f\u5c3e\u4f1a\u4e00\u76f4\u5f80\u540e\u79fb\uff0c\u5f53\u62b5\u8fbe\u6570\u7ec4\u672b\u7aef\u65f6\uff0c\u5c31\u6ca1\u529e\u6cd5\u518d\u63d2\u5165\u4e86\u3002</p> <p>\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u4e00\u822c\u9700\u8981\u8fdb\u884c\u8fc1\u79fb\uff0c\u5c06\u961f\u5217\u5143\u7d20\u79fb\u5230\u9996\u7aef\u8fd9\u8fb9\uff1a</p> <pre><code>              \u961f\u9996        \u961f\u5c3e\n               |           |\n               v           v\n  ___ ___ ___ ___ ___ ___ ___\n |   |   |   | 4 | 5 | 6 | 7 |\n\n               | \u8fc1\u79fb\n               v \n\n  \u961f\u9996        \u961f\u5c3e\n   |           |\n   v           v\n  ___ ___ ___ ___ ___ ___ ___\n | 4 | 5 | 6 | 7 |   |   |   |\n</code></pre> <p>\u7136\u540e\u5c31\u80fd\u7ee7\u7eed\u5165\u961f\u4e86\uff0c\u4e0d\u8fc7\u8fd9\u4f1a\u5bf9\u6027\u80fd\u6709\u4e00\u4e9b\u5f71\u54cd\u3002</p>"},{"location":"ch03_queue/queue/#32","title":"3.2 \u94fe\u5f0f\u961f\u5217","text":"<p>\u94fe\u5f0f\u961f\u5217\u662f\u57fa\u4e8e\u94fe\u8868\u5b9e\u73b0\u7684\u961f\u5217\u3002</p> <pre><code>  \u961f\u9996                                \u961f\u5c3e\n   |                                   |\n   v                                   v\n  ___         ___         ___         ___\n | 1 |  --&gt;  | 2 |  --&gt;  | 3 |  --&gt;  | 4 |  --&gt;  NULL\n</code></pre> <p>\u5165\u961f\u4e00\u822c\u662f\u5728\u94fe\u5c3e\uff1a</p> <pre><code>  \u961f\u9996                                            \u961f\u5c3e\n   |                                               |\n   v                                               v\n  ___         ___         ___         ___         ___\n | 1 |  --&gt;  | 2 |  --&gt;  | 3 |  --&gt;  | 4 |  --&gt;  | 5 |  --&gt;  NULL\n</code></pre> <p>\u5165\u961f\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(1)\u3002</p> <p>\u51fa\u961f\u4e00\u822c\u662f\u5728\u94fe\u9996\uff1a</p> <pre><code>  \u961f\u9996                    \u961f\u5c3e\n   |                       |\n   v                       v\n  ___         ___         ___ \n | 2 |  --&gt;  | 3 |  --&gt;  | 4 |  --&gt;  NULL\n</code></pre> <p>\u51fa\u961f\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(1)\u3002</p> <p>\u94fe\u5f0f\u961f\u5217\u5c31\u4e0d\u9700\u8981\u8fc1\u79fb\u4e86\uff0c\u56e0\u4e3a\u94fe\u8868\u6ca1\u6709\u5927\u5c0f\u9650\u5236\u3002</p>"},{"location":"ch03_queue/queue/#33","title":"3.3 \u5faa\u73af\u961f\u5217","text":"<p>\u5faa\u73af\u961f\u5217\u662f\u5c06\u987a\u5e8f\u961f\u5217\u7684\u5934\u5c3e\u76f8\u8fde\uff0c\u5f62\u6210\u4e00\u4e2a\u73af\u5f62\u3002</p> <p>\u5faa\u73af\u961f\u5217\u662f\u5bf9\u987a\u5e8f\u961f\u5217\u7684\u4e00\u79cd\u4f18\u5316\uff0c\u7528\u4e8e\u907f\u514d\u8fc1\u79fb\u64cd\u4f5c\u3002</p> <p>\u6bd4\u5982\u8bf4\uff0c\u5f53\u5faa\u73af\u961f\u5217\u7684\u6570\u636e\u62b5\u8fbe\u6570\u7ec4\u672b\u7aef\u65f6\uff1a</p> <pre><code>              \u961f\u9996        \u961f\u5c3e\n               |           |\n               v           v\n  ___ ___ ___ ___ ___ ___ ___\n |   |   |   | 4 | 5 | 6 | 7 |      &lt;- \u6570\u7ec4\n</code></pre> <p>\u6b64\u65f6\uff0c\u518d\u4e0b\u4e00\u4e2a\u5165\u961f\u7684\u4f4d\u7f6e\uff0c\u5c31\u662f\u5728\u6570\u7ec4\u7684\u9996\u7aef\uff1a</p> <pre><code>  \u961f\u5c3e        \u961f\u9996\n   |           |\n   v           v\n  ___ ___ ___ ___ ___ ___ ___\n | 8 |   |   | 4 | 5 | 6 | 7 |      &lt;- \u6570\u7ec4\n</code></pre> <p>\u8fd9\u6837\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a\u73af\uff0c\u4ece\u800c\u907f\u514d\u4e86\u6570\u7ec4\u5143\u7d20\u7684\u8fc1\u79fb\u3002</p> <p>\u5faa\u73af\u961f\u5217\u5728\u5b9e\u9645\u4e2d\u7684\u4f7f\u7528\u4f1a\u66f4\u591a\u4e00\u4e9b\u3002</p>"},{"location":"ch03_queue/queue/#_5","title":"\u56db\u3001\u590d\u6742\u5ea6","text":"<p>\u987a\u5e8f\u961f\u5217\uff1a</p> <ul> <li>\u5165\u961f\uff1a\u65f6\u95f4\u590d\u6742\u5ea6 O(1)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 O(1)</li> <li>\u51fa\u961f\uff1a\u65f6\u95f4\u590d\u6742\u5ea6 O(1)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 O(1)</li> </ul> <p>\u94fe\u5f0f\u961f\u5217\uff1a</p> <ul> <li>\u5165\u961f\uff1a\u65f6\u95f4\u590d\u6742\u5ea6 O(1)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 O(1)</li> <li>\u51fa\u961f\uff1a\u65f6\u95f4\u590d\u6742\u5ea6 O(1)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 O(1)</li> </ul> <p>\u5faa\u73af\u961f\u5217\uff1a</p> <ul> <li>\u5165\u961f\uff1a\u65f6\u95f4\u590d\u6742\u5ea6 O(1)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 O(1)</li> <li>\u51fa\u961f\uff1a\u65f6\u95f4\u590d\u6742\u5ea6 O(1)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 O(1)</li> </ul>"},{"location":"ch03_queue/queue/#_6","title":"\u4e94\u3001\u5178\u578b\u5e94\u7528","text":"<ul> <li>\u8fde\u63a5\u6c60\u7684\u7b49\u5f85\u961f\u5217</li> <li>\u6ca1\u6709\u7a7a\u95f2\u8d44\u6e90\u65f6\uff0c\u4f7f\u7528\u961f\u5217\u6392\u961f\u7b49\u5f85</li> <li>\u6dd8\u5b9d\u8ba2\u5355</li> <li>\u5404\u7c7b\u5f85\u529e\u4e8b\u9879\uff0c\u9700\u8981\u5148\u8fdb\u5148\u51fa\u7684\uff0c\u6bd4\u5982\u6392\u961f</li> <li>\u7f13\u51b2\u533a\u7ba1\u7406\uff08\u5faa\u73af\u961f\u5217\uff09</li> <li>\u6570\u636e\u4f20\u8f93\uff08\u5faa\u73af\u961f\u5217\uff09</li> <li>\u8f6e\u8be2\u8c03\u5ea6\uff08\u5faa\u73af\u961f\u5217\uff09</li> </ul>"},{"location":"ch03_queue/queue/#_7","title":"\u53c2\u8003","text":"<p>https://www.hello-algo.com/chapter_stack_and_queue/queue/</p> <p>https://time.geekbang.org/column/article/41330</p>"},{"location":"ch04_stack/","title":"\u6808","text":""},{"location":"ch04_stack/monotonic_stack/","title":"\u5355\u8c03\u6808","text":""},{"location":"ch04_stack/monotonic_stack/#_2","title":"\u4e00\u3001\u4ec0\u4e48\u662f\u5355\u8c03\u6808\uff1f","text":"<p>\u5355\u8c03\u6808\uff08Monotonic Stack\uff09\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6808\uff0c\u5728\u6808\u7684\u300c\u5148\u8fdb\u540e\u51fa\u300d\u57fa\u7840\u4e0a\uff0c\u8981\u6c42\u300c\u4ece\u6808\u9876\u5230\u6808\u5e95\u7684\u5143\u7d20\u662f\u5355\u8c03\u7684\uff08\u9012\u589e\u6216\u9012\u51cf\uff09\u300d\u3002</p> <p>\u4e0e\u666e\u901a\u6808\u4e0d\u540c\uff0c\u5355\u8c03\u6808\u7684\u5143\u7d20\u662f\u6309\u7167\u7279\u5b9a\u7684\u5355\u8c03\u6027\uff08\u9012\u589e\u6216\u9012\u51cf\uff09\u6392\u5217\u7684\uff1a</p> <pre><code> \u666e\u901a\u6808        \u5355\u8c03\u6808\n\n|     |       |     |                    \n|     |       |     |                     \n|  3  |       |  1  |    &lt;-- \u6808\u9876\n|  1  |       |  2  |                 \n|__2__|       |__3__|    &lt;-- \u6808\u5e95\n</code></pre> <p>\u6309\u7167\u5355\u8c03\u6808\u7684\u5143\u7d20\u662f\u6309\u7167\u7279\u5b9a\u7684\u5355\u8c03\u6027\uff0c\u53ef\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff1a</p> <ul> <li>\u5355\u8c03\u9012\u589e\u6808\uff1a\u4ece\u6808\u9876\u5230\u6808\u5e95\u7684\u5143\u7d20\u662f\u5355\u8c03\u9012\u589e\u7684</li> <li>\u5355\u8c03\u9012\u51cf\u6808\uff1a\u4ece\u6808\u9876\u5230\u6808\u5e95\u7684\u5143\u7d20\u662f\u5355\u8c03\u9012\u51cf\u7684</li> </ul> <p>\u6ce8\u610f\uff0c\u5355\u8c03\u6808\u5b9a\u4e49\u7684\u987a\u5e8f\u662f\u4ece\u300c\u6808\u9876\u300d\u5230\u300c\u6808\u5e95\u300d\u3002</p>"},{"location":"ch04_stack/monotonic_stack/#11","title":"1.1 \u5355\u8c03\u9012\u589e\u6808","text":"<p>\u6808\u4e2d\u7684\u5143\u7d20\u6309\u7167\u9012\u589e\uff08\u975e\u4e25\u683c\u9012\u589e\uff09\u7684\u987a\u5e8f\u6392\u5217\uff0c\u5373\u4ece\u6808\u5e95\u5230\u6808\u9876\u7684\u5143\u7d20\u503c\u9010\u6e10\u589e\u52a0\u3002</p> <pre><code>|     |\n|     |\n|  1  |    &lt;-- \u6808\u9876\n|  2  |\n|__3__|    &lt;-- \u6808\u5e95\n</code></pre>"},{"location":"ch04_stack/monotonic_stack/#12","title":"1.2 \u5355\u8c03\u9012\u51cf\u6808","text":"<p>\u6808\u4e2d\u7684\u5143\u7d20\u6309\u7167\u9012\u51cf\uff08\u975e\u4e25\u683c\u9012\u51cf\uff09\u7684\u987a\u5e8f\u6392\u5217\uff0c\u5373\u4ece\u6808\u5e95\u5230\u6808\u9876\u7684\u5143\u7d20\u503c\u9010\u6e10\u51cf\u5c0f</p> <pre><code>|     |\n|     |\n|  3  |    &lt;-- \u6808\u9876\n|  2  |\n|__1__|    &lt;-- \u6808\u5e95\n</code></pre>"},{"location":"ch04_stack/monotonic_stack/#_3","title":"\u4e8c\u3001\u4e3a\u4ec0\u4e48\u7528\u5355\u8c03\u6808\uff1f","text":"<p>\u5355\u8c03\u6808\u7684\u4e3b\u8981\u4f18\u52bf\u5728\u4e8e\u53ef\u4ee5\u9ad8\u6548\u5730\u89e3\u51b3\u4e00\u7c7b\u7279\u5b9a\u95ee\u9898\uff0c\u8fd9\u4e9b\u95ee\u9898\u6d89\u53ca\u5230\u7ef4\u62a4\u5143\u7d20\u7684\u5355\u8c03\u6027\uff08\u9012\u589e\u6216\u9012\u51cf\uff09\u3002\u4f7f\u7528\u5355\u8c03\u6808\u7684\u539f\u56e0\u5305\u62ec\uff1a</p> <ul> <li>\u63d0\u9ad8\u7b97\u6cd5\u7684\u6027\u80fd\uff1a\u5355\u8c03\u6808\u901a\u5e38\u80fd\u591f\u4ee5\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u89e3\u51b3\u95ee\u9898\uff0c\u800c\u4e0d\u9700\u8981\u5d4c\u5957\u5faa\u73af\u3002</li> <li>\u51cf\u5c11\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u4e0e\u4e00\u4e9b\u5176\u4ed6\u6570\u636e\u7ed3\u6784\u76f8\u6bd4\uff0c\u5355\u8c03\u6808\u901a\u5e38\u9700\u8981\u8f83\u5c11\u7684\u989d\u5916\u7a7a\u95f4\uff0c\u56e0\u4e3a\u5b83\u53ea\u5b58\u50a8\u6709\u9650\u6570\u91cf\u7684\u5143\u7d20\u3002</li> <li>\u89e3\u51b3\u7279\u5b9a\u95ee\u9898\uff1a\u5355\u8c03\u6808\u7279\u522b\u9002\u7528\u4e8e\u4e0b\u4e00\u4e2a\u66f4\u5927\u6216\u66f4\u5c0f\u5143\u7d20\u7684\u95ee\u9898\uff0c\u8fd9\u4e9b\u95ee\u9898\u5f88\u96be\u7528\u4f20\u7edf\u7684\u65b9\u6cd5\u89e3\u51b3\uff0c\u4f46\u5355\u8c03\u6808\u53ef\u4ee5\u5728\u5e38\u6570\u65f6\u95f4\u5185\u89e3\u51b3\u5b83\u4eec\u3002</li> </ul> <p>\u5355\u8c03\u6808\u53ef\u7528\u4e8e\u9ad8\u6548\u5730\u89e3\u51b3\u7279\u5b9a\u95ee\u9898\uff0c\u5c24\u5176\u662f\u6d89\u53ca\u5230\u7ef4\u62a4\u5143\u7d20\u7684\u5355\u8c03\u6027\u548c\u67e5\u627e\u4e0b\u4e00\u4e2a\u66f4\u5927\u6216\u66f4\u5c0f\u5143\u7d20\u7684\u95ee\u9898\u3002</p>"},{"location":"ch04_stack/monotonic_stack/#_4","title":"\u4e09\u3001\u5982\u4f55\u5b9e\u73b0\u5355\u8c03\u6808\uff1f","text":"<p>\u5355\u8c03\u6808\u7684\u5b9e\u73b0\u7ec6\u8282\u53ef\u80fd\u66f4\u591a\u5730\u5173\u6ce8\u5728\u4e24\u4e2a\u65b9\u9762\uff1a\u5355\u8c03\u6027\u548c\u904d\u5386\u65b9\u5411\u3002</p>"},{"location":"ch04_stack/monotonic_stack/#31","title":"3.1 \u5982\u4f55\u9009\u62e9\u5355\u8c03\u6027\uff1f","text":"<p>\u5355\u8c03\u6808\u6700\u5173\u952e\u7684\u5c31\u662f\u9009\u62e9\u5355\u8c03\u6027\uff0c\u800c\u5355\u8c03\u6027\u7684\u9009\u62e9\uff08\u9012\u589e\u6216\u9012\u51cf\uff09\u901a\u5e38\u53d6\u51b3\u4e8e\u95ee\u9898\u7684\u6027\u8d28\uff1a</p> <ul> <li>\u9012\u589e\u6808\uff1a\u4e0a/\u4e0b\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\u95ee\u9898</li> <li>\u9012\u51cf\u6808\uff1a\u4e0a/\u4e0b\u4e00\u4e2a\u66f4\u5c0f\u5143\u7d20\u95ee\u9898</li> </ul> <p>\u95ee\u9898\u5b9a\u4e49\u4e86\u9700\u8981\u627e\u5230\u4e0a/\u4e0b\u4e00\u4e2a\u66f4\u5927\u6216\u66f4\u5c0f\u5143\u7d20\uff0c\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\uff0c\u5c31\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u9012\u589e\u6808\u6216\u9012\u51cf\u6808\u3002</p>"},{"location":"ch04_stack/monotonic_stack/#1","title":"1) \u9012\u589e\u6808","text":"<p>\u6c42\u4e0a/\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u5143\u7d20\uff0c\u5219\u91c7\u7528\u5355\u8c03\u9012\u589e\u6808\u7684\u65b9\u5f0f\uff0c\u6808\u4e2d\u5143\u7d20\u6309\u9012\u589e\u987a\u5e8f\u6392\u5217\u3002</p> <p>\u5355\u8c03\u9012\u589e\u6808\u7684\u51fa\u5165\u6808\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>\u6301\u7eed\u6bd4\u8f83\u6808\u9876\u548c\u65b0\u5143\u7d20\uff0c\u5982\u679c\u65b0\u5143\u7d20\u6bd4\u6808\u9876\u5143\u7d20\u66f4\u5927\uff0c\u5c31\u5c06\u6808\u9876\u5143\u7d20\u5f39\u51fa</li> <li>\u5f53\u6808\u4e3a\u7a7a\uff0c\u6216\u8005\u65b0\u5143\u7d20\u6bd4\u6808\u9876\u5143\u7d20\u66f4\u5c0f\u65f6\uff0c\u5c31\u5c06\u65b0\u5143\u7d20\u538b\u5165\u6808\u4e2d</li> </ul> <p>\u5176\u4f2a\u4ee3\u7801\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>while (!stack.empty() &amp;&amp; x &gt; stack.top()) {\n    stack.pop();\n}\nstack.push(x);\n</code></pre> <p>\u6bd4\u5982\uff0c\u6c42 <code>[73, 74, 75, 71, 69, 72, 76, 73]</code> \u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\u3002</p> <p>\u4e00\u5f00\u59cb\u662f\u7a7a\u6808\uff0c\u76f4\u63a5\u5c06 <code>73</code> \u538b\u5165\u6808\u4e2d\uff1a</p> <pre><code> \u63d2\u516573\n   |\n|  v   |\n|      |\n|      |\n|      |\n|__73__|    &lt;-- \u6808\u9876/\u6808\u5e95\n\n\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\uff1a[--, --, --, --, --, --, --, --]\n</code></pre> <p><code>74 &gt; 73</code>\uff0c\u6240\u4ee5\u9700\u5148\u5c06\u6808\u9876\u5f39\u51fa\uff0c\u518d\u5c06 <code>74</code> \u538b\u5165\u6808\u4e2d\uff1a</p> <pre><code> \u5f39\u51fa73         \u63d2\u516574\n   ^              |\n|  |   |      |   v  |\n|      |      |      |\n|      |      |      |\n|      |      |      |\n|______|      |__74__|    &lt;-- \u6808\u9876/\u6808\u5e95\n\n\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\uff1a[74, --, --, --, --, --, --, --]\n</code></pre> <p><code>75 &gt; 74</code>\uff0c\u6240\u4ee5\u9700\u5148\u5c06\u6808\u9876\u5f39\u51fa\uff0c\u518d\u5c06 <code>75</code> \u538b\u5165\u6808\u4e2d\uff1a</p> <pre><code> \u5f39\u51fa74         \u63d2\u516575\n   ^              |\n|  |   |      |   v  |\n|      |      |      |\n|      |      |      |\n|      |      |      |\n|______|      |__75__|    &lt;-- \u6808\u9876/\u6808\u5e95\n\n\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\uff1a[74, 75, --, --, --, --, --, --]\n</code></pre> <p><code>71 &lt; 75</code>\uff0c\u6240\u4ee5\u5c06 <code>71</code> \u538b\u5165\u6808\u4e2d\uff1a</p> <pre><code> \u63d2\u516571\n   |\n|  v   |\n|      |\n|      |\n|  71  |    &lt;-- \u6808\u9876\n|__75__|    &lt;-- \u6808\u5e95\n\n\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\uff1a[74, 75, --, --, --, --, --, --]\n</code></pre> <p><code>69 &lt; 71</code>\uff0c\u6240\u4ee5\u5c06 <code>69</code> \u538b\u5165\u6808\u4e2d\uff1a</p> <pre><code> \u63d2\u516569\n   |\n|  v   |\n|      |\n|  69  |    &lt;-- \u6808\u9876\n|  71  |\n|__75__|    &lt;-- \u6808\u5e95\n\n\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\uff1a[74, 75, --, --, --, --, --, --]\n</code></pre> <p><code>72 &gt; 69</code> \u4e14 <code>71 &gt;71</code>\uff0c\u9700\u5148\u5c06 <code>69</code>\u3001<code>71</code> \u5f39\u51fa\uff0c\u624d\u5c06 <code>72</code> \u538b\u5165\u6808\u4e2d\uff1a</p> <pre><code> \u5f39\u51fa69         \u5f39\u51fa71         \u63d2\u516572\n   ^              ^             |\n|  |   |      |   |  |      |   v  |\n|      |      |      |      |      |\n|      |      |      |      |      |\n|  71  |      |      |      |  72  |    &lt;-- \u6808\u9876\n|__75__|      |__75__|      |__75__|    &lt;-- \u6808\u5e95\n\n\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\uff1a[74, 75, --, 72, 72, --, --, --]\n</code></pre> <p>\u6ce8\u610f\uff1a\u6b64\u5904\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\u6570\u7ec4\u7684\u66f4\u65b0\uff0c75 \u7684\u4f4d\u7f6e\u8fd8\u672a\u66f4\u65b0\u66f4\u5927\u503c\u3002</p> <p><code>76 &gt; 72</code> \u4e14 <code>76 &gt; 75</code>\uff0c\u9700\u5148\u5c06 <code>71</code>\u3001<code>75</code> \u5f39\u51fa\uff0c\u518d\u5c06 <code>76</code> \u538b\u5165\u6808\u4e2d\uff1a</p> <pre><code> \u5f39\u51fa72         \u5f39\u51fa75         \u63d2\u516576\n   ^              ^             |\n|  |   |      |   |  |      |   v  |\n|      |      |      |      |      |\n|      |      |      |      |      |\n|      |      |      |      |      |\n|__75__|      |______|      |__76__|    &lt;-- \u6808\u9876\u6808\u5e95\n\n\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\uff1a[74, 75, 76, 72, 72, 76, --, --]\n</code></pre> <p><code>73 &lt; 76</code>\uff0c\u6240\u4ee5\u5c06 <code>73</code> \u538b\u5165\u6808\u4e2d\uff1a</p> <pre><code> \u63d2\u516573\n   |\n|  v   |\n|      |\n|      |\n|  73  |    &lt;-- \u6808\u9876\n|__76__|    &lt;-- \u6808\u5e95\n\n\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\uff1a[74, 75, 76, 72, 72, 76, -, -]\n</code></pre> <p>\u81f3\u6b64\uff0c\u5c31\u5f97\u5230\u4e86\u6bcf\u4e2a\u5143\u7d20\u7684\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\u3002</p> <pre><code>[73, 74, 75, 71, 69, 72, 76, 73]\n[74, 75, 76, 72, 72, 76, --, --]\n</code></pre> <p>\u8fd9\u91cc\u4f7f\u7528\u5143\u7d20\u503c\u6765\u4e3e\u4f8b\u7684\uff0c\u6b63\u5e38\u6765\u8bf4\uff0c\u5355\u8c03\u6808\u91cc\u9762\u4e00\u822c\u90fd\u5b58\u50a8\u7684\u662f\u5143\u7d20\u7d22\u5f15\uff0c\u56e0\u4e3a\u65b9\u4fbf\u5b9a\u4f4d\u5143\u7d20\u3002</p>"},{"location":"ch04_stack/monotonic_stack/#2","title":"2) \u9012\u51cf\u6808","text":"<p>\u6c42\u4e0a/\u4e0b\u4e00\u4e2a\u66f4\u5c0f\u7684\u5143\u7d20\uff0c\u5219\u91c7\u7528\u5355\u8c03\u9012\u51cf\u6808\u7684\u65b9\u5f0f\uff0c\u6808\u4e2d\u5143\u7d20\u6309\u9012\u51cf\u987a\u5e8f\u6392\u5217\u3002</p> <p>\u5355\u8c03\u9012\u51cf\u6808\u7684\u51fa\u5165\u6808\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>\u6301\u7eed\u6bd4\u8f83\u6808\u9876\u548c\u65b0\u5143\u7d20\uff0c\u5982\u679c\u65b0\u5143\u7d20\u6bd4\u6808\u9876\u5143\u7d20\u66f4\u5c0f\uff0c\u5c31\u5c06\u6808\u9876\u5143\u7d20\u5f39\u51fa</li> <li>\u5f53\u6808\u4e3a\u7a7a\uff0c\u6216\u8005\u65b0\u5143\u7d20\u6bd4\u6808\u9876\u5143\u7d20\u66f4\u5927\u65f6\uff0c\u5c31\u5c06\u65b0\u5143\u7d20\u538b\u5165\u6808\u4e2d</li> </ul> <p>\u5176\u4f2a\u4ee3\u7801\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>while (!stack.empty() &amp;&amp; x &lt; stack.top()) {\n    stack.pop();\n}\nstack.push(x);\n</code></pre> <p>\u5b9e\u9645\u7684\u64cd\u4f5c\u548c\u9012\u589e\u6808\u7c7b\u4f3c\uff0c\u53ea\u662f\u6bd4\u8f83\u7684\u65b9\u5411\u76f8\u53cd\u3002</p>"},{"location":"ch04_stack/monotonic_stack/#32","title":"3.2 \u5982\u4f55\u9009\u62e9\u904d\u5386\u65b9\u5411\uff1f","text":"<p>\u4ece\u5de6\u5f80\u53f3\u7684\u6b63\u5411\u904d\u5386\u548c\u4ece\u53f3\u5f80\u5de6\u7684\u53cd\u5411\u904d\u5386\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5355\u8c03\u6808\u7684\u5355\u8c03\u6027\u9009\u62e9\u3002</p> <p>\u904d\u5386\u987a\u5e8f\u53ea\u5f71\u54cd\u5230\u4e86\u5143\u7d20\u7684\u987a\u5e8f\uff0c\u4f46\u5e76\u4e0d\u6539\u53d8\u95ee\u9898\u672c\u8eab\u7684\u8981\u6c42\u3002\u56e0\u6b64\uff0c\u65e0\u8bba\u904d\u5386\u65b9\u5411\u5982\u4f55\uff0c\u95ee\u9898\u8981\u6c42\u7684\u6027\u8d28\u4ecd\u7136\u76f8\u540c\u3002</p> <p>\u6bd4\u5982\uff0c\u6c42\u5143\u7d20\u7684\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\uff0c\u5206\u522b\u91c7\u7528\u6b63\u5411\u904d\u5386\u548c\u53cd\u5411\u904d\u5386\u7684\u65b9\u5f0f\u5b9e\u73b0\uff1a</p> <pre><code>// \u6b63\u5411\u904d\u5386\nfor (int i = 0; i &lt; n; i++) {\n    // \u6ce8\u610f\u8fd9\u91cc\u7684\u7b26\u53f7\u662f &gt;\n    while (!stack.empty() &amp;&amp; x &gt; stack.top()) {\n        y = stack.pop();\n        ans[y] = x;\n    }\n    stack.push(x);\n}\n</code></pre> <pre><code>// \u53cd\u5411\u904d\u5386\nfor (int i = n - 1; i &gt;= 0; i--) {\n    // \u6ce8\u610f\u8fd9\u91cc\u7684\u7b26\u53f7\u662f &gt;=\n    while (!stack.empty() &amp;&amp; x &gt;= stack.top()) {\n        stack.pop();\n    }\n    ans[x] = stack.empty() ? -1 : stack.top();\n    stack.push(x);\n}\n</code></pre> <p>\u4ece\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u6b63\u5411\u904d\u5386\u548c\u53cd\u5411\u904d\u5386\u5728\u5355\u8c03\u6027\u4e0a\u662f\u4e00\u81f4\u7684\uff0c\u90fd\u662f\u9012\u589e\u6808\uff0c\u800c\u533a\u522b\u5c31\u5728\u4e8e\uff1a</p> <ul> <li>\u6b63\u5411\u904d\u5386\u548c\u53cd\u5411\u904d\u5386\u7684\u9012\u589e\u6808\uff0c\u4e00\u4e2a\u662f\u4e25\u683c\u9012\u589e\uff0c\u4e00\u4e2a\u662f\u975e\u4e25\u683c\u9012\u589e</li> </ul> <p>\u540c\u7406\uff0c\u5bf9\u4e8e\u5176\u4ed6\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u6c42\u4e0b\u4e00\u4e2a\u66f4\u5c0f\u5143\u7d20\uff0c\u7ed3\u8bba\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u904d\u5386\u65b9\u5411\u4e0d\u4f1a\u5f71\u54cd\u5355\u8c03\u6027\u7684\u9009\u62e9\uff0c\u53ea\u4f1a\u5f71\u54cd\u5355\u8c03\u7684\u4e25\u683c\u6027\u3002</p> <p>\u6240\u4ee5\uff0c\u9996\u5148\u8981\u7406\u89e3\u95ee\u9898\u7684\u6027\u8d28\uff0c\u7136\u540e\u9009\u62e9\u9002\u5f53\u7684\u6808\u7c7b\u578b\uff0c\u800c\u4e0d\u5fc5\u8fc7\u4e8e\u62c5\u5fc3\u904d\u5386\u7684\u65b9\u5411\u3002</p>"},{"location":"ch04_stack/monotonic_stack/#_5","title":"\u5c0f\u7ed3","text":"<ul> <li>\u5355\u8c03\u6808\u7684\u5355\u8c03\u6027\uff08\u9012\u589e\u6216\u9012\u51cf\uff09\u53d6\u51b3\u4e8e\u95ee\u9898\u7684\u6027\u8d28\uff1a<ul> <li>\u9012\u589e\u6808\uff1a\u4e0a/\u4e0b\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\u95ee\u9898\u3002</li> <li>\u9012\u51cf\u6808\uff1a\u4e0a/\u4e0b\u4e00\u4e2a\u66f4\u5c0f\u5143\u7d20\u95ee\u9898\u3002</li> </ul> </li> <li>\u904d\u5386\u65b9\u5411\uff08\u6b63\u5411\u6216\u53cd\u5411\uff09\u4e0d\u4f1a\u5f71\u54cd\u5355\u8c03\u6808\u7684\u5355\u8c03\u6027\u9009\u62e9\uff0c\u53ea\u4f1a\u5f71\u54cd\u5355\u8c03\u7684\u4e25\u683c\u6027\uff1a<ul> <li>\u6b63\u5411\u904d\u5386\u548c\u53cd\u5411\u904d\u5386\u7684\u5355\u8c03\u6808\uff0c\u5176\u4e2d\u4e00\u4e2a\u662f\u4e25\u683c\u7684\uff0c\u4e00\u4e2a\u662f\u975e\u4e25\u683c\u7684</li> </ul> </li> </ul>"},{"location":"ch04_stack/monotonic_stack/#_6","title":"\u56db\u3001\u5355\u8c03\u6808\u7684\u5178\u578b\u5e94\u7528","text":"<ul> <li>\u8ba1\u7b97\u67f1\u72b6\u56fe\u4e2d\u7684\u6700\u5927\u77e9\u5f62\u9762\u79ef\u3002</li> <li>\u5bfb\u627e\u6bcf\u4e2a\u5143\u7d20\u7684\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\uff0c\u5982\u5728\u6e29\u5ea6\u9884\u6d4b\u95ee\u9898\u4e2d\u627e\u5230\u4e0b\u4e00\u4e2a\u66f4\u70ed\u7684\u65e5\u671f\u3002</li> <li>\u5bfb\u627e\u6bcf\u4e2a\u5143\u7d20\u7684\u5de6\u4fa7\u7b2c\u4e00\u4e2a\u66f4\u5c0f\u5143\u7d20\uff0c\u5982\u5728\u8ba1\u7b97\u6bcf\u4e2a\u5143\u7d20\u7684\u53f3\u4fa7\u6700\u5927\u77e9\u5f62\u95ee\u9898\u4e2d\u3002</li> <li>\u6ed1\u52a8\u7a97\u53e3\u6700\u5927\u503c\u95ee\u9898\u3002</li> <li>\u8bed\u6cd5\u5206\u6790\u5668\uff0c\u5355\u8c03\u6808\u53ef\u4ee5\u7528\u4e8e\u7f16\u5199\u8bed\u6cd5\u5206\u6790\u5668\uff0c\u89e3\u6790\u548c\u8bc4\u4f30\u6570\u5b66\u8868\u8fbe\u5f0f\u7b49\u3002</li> </ul>"},{"location":"ch04_stack/monotonic_stack/#_7","title":"\u9644\u5f55","text":""},{"location":"ch04_stack/monotonic_stack/#_8","title":"\u4e0b\u4e00\u4e2a\u66f4\u5927\u503c","text":"<pre><code>/**\n * \u5355\u8c03\u9012\u589e\u6808\uff1a\u4e0b\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\u7684\u7d22\u5f15\n *\n * @author weijiaduo\n * @since 2023/10/12\n */\npublic class NextGreater {\n\n    /**\n     * \u6b63\u5411\u904d\u5386\uff0c\u4e0d\u5b58\u5728\u66f4\u5927\u503c\u65f6\u8fd4\u56de -1\n     *\n     * @param arr \u6570\u7ec4\n     * @return \u4e0b\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\u7d22\u5f15\u6570\u7ec4\n     */\n    public int[] forward(int[] arr) {\n        int n = arr.length;\n        int[] ans = new int[n];\n        Arrays.fill(ans, -1);\n        Deque&lt;Integer&gt; incStack = new LinkedList&lt;&gt;();\n        for (int i = 0; i &lt; n; i++) {\n            // \u6ce8\u610f\u8fd9\u91cc\u662f &gt;\n            while (!incStack.isEmpty() &amp;&amp; arr[i] &gt; arr[incStack.peek()]) {\n                int idx = incStack.pop();\n                ans[idx] = i;\n            }\n            incStack.push(i);\n        }\n        return ans;\n    }\n\n    /**\n     * \u9006\u5411\u904d\u5386\uff0c\u4e0d\u5b58\u5728\u66f4\u5927\u503c\u65f6\u8fd4\u56de -1\n     *\n     * @param arr \u6570\u7ec4\n     * @return \u4e0b\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\u7d22\u5f15\u6570\u7ec4\n     */\n    public int[] backward(int[] arr) {\n        int n = arr.length;\n        int[] ans = new int[n];\n        Arrays.fill(ans, -1);\n        Deque&lt;Integer&gt; incStack = new LinkedList&lt;&gt;();\n        for (int i = n - 1; i &gt;= 0; i--) {\n            // \u6ce8\u610f\u8fd9\u91cc\u662f &gt;=\n            while (!incStack.isEmpty() &amp;&amp; arr[i] &gt;= arr[incStack.peek()]) {\n                incStack.pop();\n            }\n            ans[i] = incStack.isEmpty() ? -1 : incStack.peek();\n            incStack.push(i);\n        }\n        return ans;\n    }\n\n}\n</code></pre>"},{"location":"ch04_stack/monotonic_stack/#_9","title":"\u4e0a\u4e00\u4e2a\u66f4\u5927\u503c","text":"<pre><code>/**\n * \u5355\u8c03\u9012\u589e\u6808\uff1a\u4e0a\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\u7684\u7d22\u5f15\n *\n * @author weijiaduo\n * @since 2023/10/12\n */\npublic class PrevGreater {\n\n    /**\n     * \u6b63\u5411\u904d\u5386\uff0c\u4e0d\u5b58\u5728\u66f4\u5927\u503c\u65f6\u8fd4\u56de -1\n     *\n     * @param arr \u6570\u7ec4\n     * @return \u4e0a\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\u7d22\u5f15\u6570\u7ec4\n     */\n    public int[] forward(int[] arr) {\n        int n = arr.length;\n        int[] ans = new int[n];\n        Arrays.fill(ans, -1);\n        Deque&lt;Integer&gt; incStack = new LinkedList&lt;&gt;();\n        for (int i = 0; i &lt; n; i++) {\n            // \u6ce8\u610f\u8fd9\u91cc\u662f &gt;=\n            while (!incStack.isEmpty() &amp;&amp; arr[i] &gt;= arr[incStack.peek()]) {\n                incStack.pop();\n            }\n            ans[i] = incStack.isEmpty() ? -1 : incStack.peek();\n            incStack.push(i);\n        }\n        return ans;\n    }\n\n    /**\n     * \u9006\u5411\u904d\u5386\uff0c\u4e0d\u5b58\u5728\u66f4\u5927\u503c\u65f6\u8fd4\u56de -1\n     *\n     * @param arr \u6570\u7ec4\n     * @return \u4e0a\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\u7d22\u5f15\u6570\u7ec4\n     */\n    public int[] backward(int[] arr) {\n        int n = arr.length;\n        int[] ans = new int[n];\n        Arrays.fill(ans, -1);\n        Deque&lt;Integer&gt; incStack = new LinkedList&lt;&gt;();\n        for (int i = n - 1; i &gt;= 0; i--) {\n            // \u6ce8\u610f\u8fd9\u91cc\u662f &gt;\n            while (!incStack.isEmpty() &amp;&amp; arr[i] &gt; arr[incStack.peek()]) {\n                int idx = incStack.pop();\n                ans[idx] = i;\n            }\n            incStack.push(i);\n        }\n        return ans;\n    }\n\n}\n</code></pre>"},{"location":"ch04_stack/monotonic_stack/#_10","title":"\u4e0b\u4e00\u4e2a\u66f4\u5c0f\u503c","text":"<pre><code>/**\n * \u5355\u8c03\u9012\u51cf\u6808\uff1a\u4e0b\u4e00\u4e2a\u66f4\u5c0f\u5143\u7d20\u7684\u7d22\u5f15\n *\n * @author weijiaduo\n * @since 2023/10/12\n */\npublic class NextSmaller {\n\n    /**\n     * \u6b63\u5411\u904d\u5386\uff0c\u4e0d\u5b58\u5728\u66f4\u5c0f\u503c\u65f6\u8fd4\u56de -1\n     *\n     * @param arr \u6570\u7ec4\n     * @return \u4e0b\u4e00\u4e2a\u66f4\u5c0f\u5143\u7d20\u7d22\u5f15\u6570\u7ec4\n     */\n    public int[] forward(int[] arr) {\n        int n = arr.length;\n        int[] ans = new int[n];\n        Arrays.fill(ans, -1);\n        Deque&lt;Integer&gt; decStack = new LinkedList&lt;&gt;();\n        for (int i = 0; i &lt; n; i++) {\n            // \u6ce8\u610f\u8fd9\u91cc\u662f &lt;\n            while (!decStack.isEmpty() &amp;&amp; arr[i] &lt; arr[decStack.peek()]) {\n                int idx = decStack.pop();\n                ans[idx] = i;\n            }\n            decStack.push(i);\n        }\n        return ans;\n    }\n\n    /**\n     * \u9006\u5411\u904d\u5386\uff0c\u4e0d\u5b58\u5728\u66f4\u5c0f\u503c\u65f6\u8fd4\u56de -1\n     *\n     * @param arr \u6570\u7ec4\n     * @return \u4e0b\u4e00\u4e2a\u66f4\u5c0f\u5143\u7d20\u7d22\u5f15\u6570\u7ec4\n     */\n    public int[] backward(int[] arr) {\n        int n = arr.length;\n        int[] ans = new int[n];\n        Arrays.fill(ans, -1);\n        Deque&lt;Integer&gt; decStack = new LinkedList&lt;&gt;();\n        for (int i = n - 1; i &gt;= 0; i--) {\n            // \u6ce8\u610f\u8fd9\u91cc\u662f &lt;=\n            while (!decStack.isEmpty() &amp;&amp; arr[i] &lt;= arr[decStack.peek()]) {\n                decStack.pop();\n            }\n            ans[i] = decStack.isEmpty() ? -1 : decStack.peek();\n            decStack.push(i);\n        }\n        return ans;\n    }\n\n}\n</code></pre>"},{"location":"ch04_stack/monotonic_stack/#_11","title":"\u4e0a\u4e00\u4e2a\u66f4\u5c0f\u503c","text":"<pre><code>/**\n * \u5355\u8c03\u9012\u51cf\u6808\uff1a\u4e0a\u4e00\u4e2a\u66f4\u5c0f\u5143\u7d20\u7684\u7d22\u5f15\n * \n * @author weijiaduo\n * @since 2023/10/12\n */\npublic class PrevSmaller {\n\n    /**\n     * \u6b63\u5411\u904d\u5386\uff0c\u4e0d\u5b58\u5728\u66f4\u5c0f\u503c\u65f6\u8fd4\u56de -1\n     *\n     * @param arr \u6570\u7ec4\n     * @return \u4e0a\u4e00\u4e2a\u66f4\u5c0f\u5143\u7d20\u7d22\u5f15\u6570\u7ec4\n     */\n    public int[] forward(int[] arr) {\n        int n = arr.length;\n        int[] ans = new int[n];\n        Arrays.fill(ans, -1);\n        Deque&lt;Integer&gt; decStack = new LinkedList&lt;&gt;();\n        for (int i = 0; i &lt; n; i++) {\n            // \u6ce8\u610f\u8fd9\u91cc\u662f &lt;=\n            while (!decStack.isEmpty() &amp;&amp; arr[i] &lt;= arr[decStack.peek()]) {\n                decStack.pop();\n            }\n            ans[i] = decStack.isEmpty() ? -1 : decStack.peek();\n            decStack.push(i);\n        }\n        return ans;\n    }\n\n    /**\n     * \u9006\u5411\u904d\u5386\uff0c\u4e0d\u5b58\u5728\u66f4\u5c0f\u503c\u65f6\u8fd4\u56de -1\n     *\n     * @param arr \u6570\u7ec4\n     * @return \u4e0a\u4e00\u4e2a\u66f4\u5c0f\u5143\u7d20\u7d22\u5f15\u6570\u7ec4\n     */\n    public int[] backward(int[] arr) {\n        int n = arr.length;\n        int[] ans = new int[n];\n        Arrays.fill(ans, -1);\n        Deque&lt;Integer&gt; decStack = new LinkedList&lt;&gt;();\n        for (int i = n - 1; i &gt;= 0; i--) {\n            // \u6ce8\u610f\u8fd9\u91cc\u662f &lt;\n            while (!decStack.isEmpty() &amp;&amp; arr[i] &lt; arr[decStack.peek()]) {\n                int idx = decStack.pop();\n                ans[idx] = i;\n            }\n            decStack.push(i);\n        }\n        return ans;\n    }\n\n}\n</code></pre>"},{"location":"ch04_stack/stack/","title":"\u6808","text":""},{"location":"ch04_stack/stack/#_2","title":"\u4e00\u3001\u7ed3\u6784\u7279\u6027","text":"<p>\u57fa\u672c\u5b9a\u4e49\uff1a</p> <ul> <li>\u6808\u662f\u4e00\u79cd\u9075\u5faa\u5148\u5165\u540e\u51fa\u7684\u903b\u8f91\u7684\u7ebf\u6027\u6570\u636e\u7ed3\u6784</li> </ul> <p>\u4e3b\u8981\u7279\u70b9\uff1a</p> <ul> <li>\u6570\u636e\u662f\u5148\u5165\u540e\u51fa\uff0c\u540e\u5165\u5148\u51fa</li> <li>\u53ea\u5141\u8bb8\u5728\u6808\u7684\u4e00\u7aef\u64cd\u4f5c\u6570\u636e</li> </ul> <p>\u6808\u7684\u4e24\u7aef\u5206\u522b\u79f0\u4e3a\u201c\u6808\u9876\u201d\u548c\u201c\u6808\u5e95\u201d\uff1a</p> <ul> <li>\u6808\u9876\uff1a\u6700\u540e\u5165\u6808\u7684\u5143\u7d20</li> <li>\u6808\u5e95\uff1a\u6700\u5148\u5165\u6808\u7684\u5143\u7d20</li> </ul> <pre><code>|     |\n|     |\n|  3  |    &lt;-- \u6808\u9876\n|  2  |\n|__1__|    &lt;-- \u6808\u5e95\n</code></pre> <p>\u201c\u6808\u9876\u201d\u4f4d\u7f6e\u968f\u5143\u7d20\u6570\u91cf\u53d8\u5316\uff0c\u201c\u6808\u5e95\u201d\u4f4d\u7f6e\u4e00\u76f4\u4fdd\u6301\u4e0d\u53d8\u3002</p> <p>\u6808\u53ea\u5141\u8bb8\u64cd\u4f5c\u201c\u6808\u9876\u201d\uff0c\u5165\u6808\u548c\u51fa\u6808\u90fd\u662f\u5728\u6808\u9876\u64cd\u4f5c\u3002</p>"},{"location":"ch04_stack/stack/#_3","title":"\u4e8c\u3001\u5e38\u7528\u64cd\u4f5c","text":"<p>\u6808\u7684\u5e38\u7528\u64cd\u4f5c\u6709 3 \u79cd\uff1a</p> <ul> <li>\u8bbf\u95ee\uff1a\u8bbf\u95ee\u6808\u9876\u7684\u6570\u636e</li> <li>\u5165\u6808\uff1a\u6dfb\u52a0\u6570\u636e\u5230\u6808\u9876</li> <li>\u51fa\u6808\uff1a\u4ece\u6808\u9876\u79fb\u9664\u6570\u636e</li> </ul> <p>\u6ce8\u610f\u6808\u53ea\u80fd\u64cd\u4f5c\u6808\u5e95\uff0c\u8fd9\u662f\u552f\u4e00\u7684\u5f00\u53e3\u3002</p>"},{"location":"ch04_stack/stack/#21","title":"2.1 \u8bbf\u95ee\u64cd\u4f5c","text":"<p>\u6808\u53ea\u80fd\u8bbf\u95ee\u6808\u5e95\u7684\u5143\u7d20\uff1a</p> <pre><code>\u8bbf\u95ee\u6808\u98763\n\n|     |\n|     |\n|  3  |    &lt;-- \u6808\u9876\n|  2  |\n|__1__|    &lt;-- \u6808\u5e95\n</code></pre> <p>\u8bbf\u95ee\u6808\u9876\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(1)\u3002</p>"},{"location":"ch04_stack/stack/#22","title":"2.2 \u5165\u6808\u64cd\u4f5c","text":"<p>\u5165\u6808\u7c7b\u4f3c\u4e8e\u5806\u53e0\u76d8\u5b50\uff0c\u4ece\u6808\u5e95\u5f00\u59cb\u653e\uff0c\u4ece\u4e0b\u5f80\u4e0a\uff1a</p> <pre><code> \u5148\u653e1         \u518d\u653e2          \u518d\u653e3\n\n   1             2             3\n   |             |             |\n   v             v             v\n\n|     |       |     |       |     |\n|     |       |     |       |     |\n|     |  ==&gt;  |     |  ==&gt;  |  3  |\n|     |       |  2  |       |  2  |\n|__1__|       |__1__|       |__1__|\n</code></pre> <p>\u5165\u6808\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(1)\u3002</p>"},{"location":"ch04_stack/stack/#23","title":"2.3 \u51fa\u6808\u64cd\u4f5c","text":"<p>\u51fa\u6808\u7c7b\u4f3c\u4e8e\u53d6\u76d8\u5b50\uff0c\u4ece\u6808\u9876\u5f00\u59cb\u53d6\uff0c\u4ece\u4e0a\u5f80\u4e0b\uff1a</p> <pre><code> \u5148\u51fa3         \u518d\u51fa2          \u518d\u51fa1\n\n   3             2             1\n   ^             ^             ^\n   |             |             |\n\n|     |       |     |       |     |\n|     |       |     |       |     |\n|  3  |  ==&gt;  |     |  ==&gt;  |     |\n|  2  |       |  2  |       |     |\n|__1__|       |__1__|       |__1__|\n</code></pre> <p>\u51fa\u6808\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(1)\u3002</p>"},{"location":"ch04_stack/stack/#_4","title":"\u4e09\u3001\u5b9e\u73b0\u65b9\u5f0f","text":"<p>\u6839\u636e\u6808\u7684\u5e95\u5c42\u5b58\u50a8\u5f62\u5f0f\uff0c\u5b9e\u73b0\u65b9\u5f0f\u53ef\u4ee5\u5206\u4e3a 2 \u79cd\uff1a</p> <ul> <li>\u987a\u5e8f\u6808\uff1a\u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0</li> <li>\u94fe\u5f0f\u6808\uff1a\u57fa\u4e8e\u94fe\u8868\u5b9e\u73b0</li> </ul>"},{"location":"ch04_stack/stack/#31","title":"3.1 \u987a\u5e8f\u6808","text":"<p>\u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0\u6808\u65f6\uff0c\u4e00\u822c\u5c06\u6570\u7ec4\u7684\u5c3e\u90e8\u4f5c\u4e3a\u6808\u9876\uff1a</p> <pre><code> \u6808\u5e95        \u6808\u9876\n  |           |\n  v           v\n ___ ___ ___ ___ ___ ___ ___\n| 1 | 2 | 3 | 4 |   |   |   |   &lt;-- \u5269\u4f59\u7a7a\u95f4\n</code></pre> <p>\u5165\u6808\u548c\u51fa\u6808\u90fd\u662f\u5728\u6570\u7ec4\u5c3e\u90e8\u8fdb\u884c\u64cd\u4f5c\uff0c\u6bd4\u5982\u5165\u6808\uff1a</p> <pre><code> \u6808\u5e95            \u6808\u9876\n  |               |\n  v               v\n ___ ___ ___ ___ ___ ___ ___\n| 1 | 2 | 3 | 4 | 5 |   |   |   &lt;-- \u5269\u4f59\u7a7a\u95f4\n\n                  ^\n                  |\n                 \u5165\u6808\n</code></pre> <p>\u5b58\u5728\u7684\u7f3a\u70b9\uff1a</p> <ul> <li>\u6570\u7ec4\u5c3e\u90e8\u4f1a\u6709\u7a7a\u95f4\u6d6a\u8d39</li> <li>\u6570\u7ec4\u5927\u5c0f\u56fa\u5b9a\uff0c\u6808\u7a7a\u95f4\u4f1a\u53d7\u5230\u9650\u5236</li> </ul> <p>\u597d\u5904\u5c31\u5728\u4e8e\uff1a</p> <ul> <li>\u6548\u7387\u9ad8\uff0c\u53ea\u9700\u8981\u6539\u53d8\u6570\u7ec4\u7d22\u5f15</li> <li>\u6709\u5f88\u597d\u7684\u5c40\u90e8\u7f13\u5b58\u6027</li> </ul> <p>\u53e6\u5916\uff0c\u987a\u5e8f\u6808\u8fd8\u6709\u4e00\u79cd\u5b9e\u73b0\uff0c\u90a3\u5c31\u662f\u52a8\u6001\u6269\u5bb9\u987a\u5e8f\u6808\uff0c\u5b83\u5c31\u4e0d\u4f1a\u9650\u5236\u5927\u5c0f\u4e86\u3002</p>"},{"location":"ch04_stack/stack/#32","title":"3.2 \u94fe\u5f0f\u6808","text":"<p>\u57fa\u4e8e\u94fe\u8868\u5b9e\u73b0\u6808\u65f6\uff0c\u4e00\u822c\u662f\u5c06\u8868\u5934\u4f5c\u4e3a\u6808\u9876\uff1a</p> <pre><code>   \u6808\u9876                            \u6808\u5e95\n    |                               |\n    v                               v\n ___ ______      ___ ______      ___ ______\n| 3 | next | -&gt; | 2 | next | -&gt; | 1 | next | -&gt; NULL\n</code></pre> <p>\u5165\u6808\u548c\u51fa\u6808\u90fd\u662f\u5728\u94fe\u8868\u5934\u90e8\u8fdb\u884c\u64cd\u4f5c\uff0c\u6bd4\u5982\u5165\u6808\uff1a</p> <pre><code>   \u6808\u9876                                            \u6808\u5e95\n    |                                               |\n    v                                               v\n ___ ______      ___ ______      ___ ______      ___ ______\n| 4 | next | -&gt; | 3 | next | -&gt; | 2 | next | -&gt; | 1 | next | -&gt; NULL\n\n    ^\n    |\n   \u5165\u6808\n</code></pre> <p>\u8fd9\u79cd\u5728\u8868\u5934\u64cd\u4f5c\u8282\u70b9\u7684\u65b9\u5f0f\u79f0\u4e3a\u201c\u5934\u63d2\u6cd5\u201d\u3002</p> <p>\u5b58\u5728\u7684\u7f3a\u70b9\uff1a</p> <ul> <li>\u9700\u8981\u989d\u5916\u7684\u7a7a\u95f4\u5b58\u50a8\u6307\u9488</li> <li>\u64cd\u4f5c\u6548\u7387\u4f4e\uff0c\u9700\u4fee\u6539\u6307\u9488</li> <li>\u7f13\u5b58\u5c40\u90e8\u6027\u4e0d\u597d</li> </ul> <p>\u597d\u5904\u5c31\u5728\u4e8e\uff1a</p> <ul> <li>\u5927\u5c0f\u4e0d\u53d7\u9650\u5236\uff0c\u53ef\u4ee5\u65e0\u9650\u6269\u5bb9</li> </ul> <p>\u5176\u5b9e\u987a\u5e8f\u6808\u548c\u94fe\u5f0f\u6808\u5404\u6709\u4f18\u7f3a\u70b9\uff0c\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u9009\u62e9\u5373\u53ef\u3002</p>"},{"location":"ch04_stack/stack/#_5","title":"\u56db\u3001\u590d\u6742\u5ea6","text":"<ul> <li>\u5165\u6808\uff1a\u65f6\u95f4\u590d\u6742\u5ea6 O(1)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 O(1)</li> <li>\u51fa\u6808\uff1a\u65f6\u95f4\u590d\u6742\u5ea6 O(1)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 O(1)</li> </ul>"},{"location":"ch04_stack/stack/#_6","title":"\u4e94\u3001\u5178\u578b\u5e94\u7528","text":"<ul> <li>\u51fd\u6570\u8c03\u7528\u6808</li> <li>\u6d4f\u89c8\u5668\u7684\u524d\u8fdb\u540e\u9000</li> <li>\u8f6f\u4ef6\u4e2d\u7684\u64a4\u9500\u548c\u53cd\u64a4\u9500</li> <li>\u8868\u8fbe\u5f0f\u6c42\u503c\uff08\u53cc\u6808\uff1a\u64cd\u4f5c\u6570\u6808\u548c\u64cd\u4f5c\u7b26\u6808\uff09</li> <li>\u62ec\u53f7\u5339\u914d</li> </ul>"},{"location":"ch04_stack/stack/#_7","title":"\u53c2\u8003","text":"<p>https://www.hello-algo.com/chapter_stack_and_queue/stack/</p> <p>https://time.geekbang.org/column/article/41222</p>"},{"location":"ch05_tree/","title":"\u6811","text":""},{"location":"ch05_tree/b_tree/","title":"B-\u6811","text":""},{"location":"ch05_tree/b_tree/#b-_1","title":"\u4e00\u3001B-\u6811\u662f\u4ec0\u4e48\uff1f","text":"<p>B-\u6811\u662f\u4e00\u68f5\u6240\u6709\u53f6\u5b50\u8282\u70b9\u9ad8\u5ea6\u90fd\u76f8\u540c\u7684\u5e73\u8861\u591a\u53c9\u6811\u3002</p> <p>\u5176\u7ed3\u6784\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>                                    ____ ___ ___\n                                   | 24 |   |   |  \n                                          |\n                         ---------------------------------------------\n                         |                                           |\n                   ____ ____ ___                               ____ ___ ___\n                  | 15 | 20 |   |                             | 33 |   |   | \n                         |                                           |\n        -----------------------------------                 -------------------\n        |                |                |                 |                 |\n ____ ____ ___     ____ ___ ___     ____ ____ ___     ____ ____ ___     ____ ___ ___\n| 10 | 12 |   |   | 18 |   |   |   | 21 | 23 |   |   | 30 | 31 |   |   | 38 |   |   |\n</code></pre> <p>B-\u6811\u7684\u4e00\u4e9b\u6027\u8d28\uff1a</p> <ul> <li>\u6811\u8282\u70b9\u4e2d\uff0c\u5b50\u8282\u70b9\u6570\u91cf\u7684\u6700\u5927\u503c\u79f0\u4e3aB-\u6811\u7684\u9636</li> <li>m \u9636B-\u6811\u7684\u8282\u70b9\uff0c\u6700\u591a\u62e5\u6709 m - 1 \u4e2a\u5143\u7d20</li> <li>B-\u6811\u7684\u6240\u6709\u53f6\u5b50\u8282\u70b9\u90fd\u5728\u540c\u4e00\u5c42\uff0c\u662f\u9ad8\u5ea6\u5e73\u8861\u7684</li> <li>\u9664\u6839\u8282\u70b9\u5916\uff0c\u6240\u6709\u8282\u70b9\u7684\u5143\u7d20\u4e2a\u6570\u4e0d\u5c11\u4e8e Math.ceil(m/2) - 1\uff0c\u4e5f\u5373\u5b50\u8282\u70b9\u6570\u91cf\u4e0d\u5c11\u4e8e Math.ceil(m/2\uff09</li> <li>\u8282\u70b9\u7684\u5927\u5c0f\uff0c\u59cb\u7ec8\u6ee1\u8db3 <code>\u5de6\u5b50\u8282\u70b9 &lt; \u7236\u8282\u70b9 &lt; \u53f3\u5b50\u8282\u70b9</code>\uff0c\u5373\u548c\u4e8c\u53c9\u67e5\u627e\u6811\u7c7b\u4f3c</li> </ul> <p>\u7b80\u5355\u6765\u8bf4\uff0cB-\u6811\u7684\u7ed3\u6784\u662f\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6570\u91cf\u8981\u534a\u6ee1\uff0c\u53f6\u5b50\u8282\u70b9\u7684\u9ad8\u5ea6\u8981\u59cb\u7ec8\u4e00\u6837\u3002</p>"},{"location":"ch05_tree/b_tree/#b-_2","title":"\u4e8c\u3001\u4e3a\u4ec0\u4e48\u8981\u7528B-\u6811\uff1f","text":"<ul> <li>B-\u6811\u6216B-\u6811\u53d8\u4f53\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u9700\u8981\u8fdb\u884c\u63d2\u5165\u3001\u5220\u9664\u3001\u8303\u56f4\u68c0\u7d22\u7b49\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u6bd4\u5982 MySQL \u6570\u636e\u5e93\u7d22\u5f15</li> <li>\u66f4\u65b0\u548c\u68c0\u7d22\u64cd\u4f5c\u53ea\u5f71\u54cd\u90e8\u5206\u8282\u70b9\uff0c\u5bf9\u4e8e\u57fa\u4e8e\u78c1\u76d8\u7684\u68c0\u7d22\uff0c\u53ef\u4ee5\u51cf\u5c11 I/O \u8bf7\u6c42\uff0c\u63d0\u5347\u6027\u80fd</li> <li>B-\u6811\u4fdd\u8bc1\u81f3\u5c11\u6709\u4e00\u5b9a\u6bd4\u4f8b\u7684\u8282\u70b9\u662f\u6ee1\u7684\uff0c\u80fd\u6539\u8fdb\u7a7a\u95f4\u5229\u7528\u7387</li> </ul>"},{"location":"ch05_tree/b_tree/#b-_3","title":"\u4e09\u3001\u600e\u4e48\u5b9e\u73b0\u4e00\u68f5B-\u6811\uff1f","text":"<p>B-\u6811\u4e3b\u8981\u5305\u542b\u51e0\u79cd\u64cd\u4f5c\uff1a</p> <ul> <li>\u68c0\u7d22\u5143\u7d20\uff1a\u5728\u6811\u4e2d\u641c\u7d22\u6307\u5b9a\u7684\u5143\u7d20</li> <li>\u63d2\u5165\u5143\u7d20\uff1a\u5f80\u6811\u4e2d\u63d2\u5165\u65b0\u7684\u5143\u7d20</li> <li>\u5220\u9664\u5143\u7d20\uff1a\u4ece\u6811\u4e2d\u5220\u9664\u6307\u5b9a\u7684\u5143\u7d20</li> </ul> <p>\u5176\u4e2d\u63d2\u5165\u548c\u5220\u9664\u4f1a\u5bf9B-\u6811\u7684\u7ed3\u6784\u4ea7\u751f\u5f71\u54cd\uff0c\u7a0d\u5fae\u9ebb\u70e6\u4ebf\u70b9\u3002</p>"},{"location":"ch05_tree/b_tree/#31","title":"3.1 \u68c0\u7d22\u5143\u7d20","text":"<p>B-\u6811\u548c\u4e8c\u53c9\u641c\u7d22\u6811\u7c7b\u4f3c\uff0c\u4e8c\u53c9\u641c\u7d22\u6811\u4f7f\u7528\u7684\u662f\u4e8c\u5206\u67e5\u627e\uff0c\u800cB-\u6811\u4e5f\u662f\u7c7b\u4f3c\u7684\uff1a</p> <ul> <li>B-\u6811\u68c0\u7d22\u5143\u7d20\u91c7\u7528\u7684\u662f\u4e8c\u5206\u67e5\u627e\u7684\u5347\u7ea7\u7248\u672c \u2014\u2014 \u591a\u8def\u67e5\u627e</li> </ul> <p>\u6bd4\u5982\u8bf4\uff0c\u4e0a\u9762\u7684B-\u6811\u4e2d\uff0c\u8981\u5bfb\u627e\u5143\u7d20 <code>23</code>\uff0c\u90a3\u4e48\u5b83\u7684\u641c\u7d22\u8def\u7ebf\u5c31\u662f\uff1a</p> <ul> <li><code>24 -&gt; 20 -&gt; 23</code></li> </ul> <p>\u5728B-\u6811\u4e2d\u67e5\u627e\u7684\u8bdd\uff0c\u5c31\u662f\u8fd9\u6837\u5b50\uff1a</p> <pre><code>                                    ____ ___ ___\n                                   | 24 |   |   |\n                                          |\n                         ---------------------------------------------\n                         |                                           |\n                   ____ ____ ___                               ____ ___ ___\n                  |    | 20 |   |                             |    |   |   |\n                         |                                           |\n        -----------------------------------                 -------------------\n        |                |                |                 |                 |\n ____ ____ ___     ____ ___ ___     ____ ____ ___     ____ ____ ___     ____ ___ ___\n|    |    |   |   |    |   |   |   |    | 23 |   |   |    |    |   |   |    |   |   |\n</code></pre> <p>\u5bf9\u5e94\u5230\u4f2a\u4ee3\u7801\u7684\u8bdd\uff0c\u5dee\u4e0d\u591a\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>private V get(BTNode&lt;K, V&gt; root, K key) {\n    int index = root.findIndex(key);\n    if (key.equals(root.getKey(index))) {\n        // \u627e\u5230 key \u5bf9\u5e94\u7684\u8282\u70b9\n        return root.getValue(index);\n    } else {\n        // \u5f80\u5b50\u6811\u7ee7\u7eed\u627e key \u5bf9\u5e94\u7684\u8282\u70b9\n        return get(root.getChild(index), key);\n    }\n}\n</code></pre> <p>\u5b9e\u9645\u5c31\u662f\u4ece\u4e0a\u5f80\u4e0b\u591a\u8def\u9012\u5f52\u67e5\u627e\u5143\u7d20\u3002</p>"},{"location":"ch05_tree/b_tree/#32","title":"3.2 \u63d2\u5165\u5143\u7d20","text":"<p>B-\u6811\u548c\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u63d2\u5165\u7c7b\u4f3c\uff1a</p> <ul> <li>B-\u6811\u63d2\u5165\u65b0\u5143\u7d20\uff0c\u59cb\u7ec8\u662f\u5728\u53f6\u5b50\u8282\u70b9\u63d2\u5165</li> </ul> <p>\u63d2\u5165\u5143\u7d20\uff0c\u53ef\u4ee5\u5206\u4e3a 2 \u79cd\u60c5\u51b5\u5904\u7406\uff1a</p> <ol> <li>\u8282\u70b9\u7a7a\u95f4\u8db3\u591f\uff0c\u76f4\u63a5\u63d2\u5165\u5143\u7d20</li> <li>\u8282\u70b9\u7a7a\u95f4\u4e0d\u8db3\uff0c1 \u4e2a\u8282\u70b9\u5206\u88c2\u6210 3 \u4e2a\u8282\u70b9\uff0c\u6267\u884c\u4e0a\u6ea2\u64cd\u4f5c</li> </ol> <p>\u8fd9 2 \u79cd\u60c5\u51b5\u7684\u6548\u679c\u5982\u4e0b\u3002</p>"},{"location":"ch05_tree/b_tree/#321-","title":"3.2.1 \u53f6\u5b50\u8282\u70b9-\u76f4\u63a5\u63d2\u5165","text":"<p>\u5f53\u53f6\u5b50\u8282\u70b9\u7a7a\u95f4\u8db3\u591f\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u63d2\u5165\u65b0\u5143\u7d20\uff0c\u800c\u4e14\u4e0d\u4f1a\u5f71\u54cd\u5230B-\u6811\u7684\u9ad8\u5ea6\u5e73\u8861\uff1a</p> <pre><code> ____ ____ ___ \n| 12 |    |   | \n\n       | \u63d2\u5165 20\n       v\n\n ____ ____ ___ \n| 12 | 20 |   | \n\n       | \u63d2\u5165 9\n       v\n\n ____ ____ ____ \n| 9  | 12 | 20 | \n</code></pre> <p>\u7a7a\u95f4\u8db3\u591f\u65f6\uff0c\u76f4\u63a5\u63d2\u5165\u5143\u7d20\u5c31\u884c\u4e86\u3002</p>"},{"location":"ch05_tree/b_tree/#322-","title":"3.2.2 \u53f6\u5b50\u8282\u70b9-\u4e0a\u6ea2\u5206\u88c2","text":"<p>\u5f53\u53f6\u5b50\u8282\u70b9\u7a7a\u95f4\u4e0d\u8db3\u65f6\uff0c\u6b64\u65f6\u518d\u63d2\u5165\u65b0\u5143\u7d20\uff0c\u4f1a\u5bfc\u81f4\u8282\u70b9\u7a7a\u95f4\u4e0a\u6ea2\uff0c\u7136\u540e\u5206\u88c2\uff1a</p> <pre><code>             ___ ____ ____ \n            | 9 | 12 | 20 | \n\n                  | \u63d2\u5165 25\n                  v\n\n            ____ ___ ___ \n           | 20 |   |   | \n                  |\n        ---------------------\n        |                   |\n   ___ ____ ___       ____ ____ ____ \n  | 9 | 12 |   |     | 25 |    |    | \n</code></pre> <p>\u8282\u70b9\u5143\u7d20\u4e0a\u6ea2\u540e\uff0c1 \u4e2a\u8282\u70b9\u4f1a\u5206\u88c2\u6210 3 \u4e2a\u8282\u70b9\u3002</p>"},{"location":"ch05_tree/b_tree/#323-","title":"3.2.3 \u5185\u90e8\u8282\u70b9-\u76f4\u63a5\u63d2\u5165","text":"<p>\u4e3a\u4e86\u4fdd\u6301B-\u6811\u7684\u9ad8\u5ea6\u5e73\u8861\uff0c\u53f6\u5b50\u8282\u70b9\u4f1a\u5c06\u5206\u88c2\u540e\u7684\u7236\u8282\u70b9\uff0c\u5f80\u4e0a\u63d2\u5165\u4e4b\u524d\u7684\u7236\u8282\u70b9\uff1a</p> <pre><code>                       ____ ___ ___ \n                      | 20 |   |   |\n                             |\n                  ----------------------\n                  |                    |\n             ___ ____ ____       ____ ____ ____ \n            | 9 | 12 | 18 |     | 25 |    |    |\n\n\n                             |  \u63d2\u5165 10\n                             v \n\n                       ____ ____ ___ \n                      | 12 | 20 |   |\n                             |\n        --------------------------------------------\n        |                    |                     |\n   ___ ____ ____       ____ ____ ____        ____ ____ ____ \n  | 9 | 10 |    |     | 18 |    |    |      | 25 |    |    |\n</code></pre> <p>\u5de6\u5b50\u8282\u70b9 <code>[9, 12, 18]</code> \u63d2\u5165\u65b0\u8282\u70b9 <code>10</code> \u4f1a\u4ea7\u751f\u4e0a\u6ea2\uff0c\u8282\u70b9 <code>12</code> \u4f1a\u4e0a\u6ea2\u7236\u8282\u70b9\u4e2d\u3002</p> <p>\u56e0\u4e3a\u5185\u90e8\u8282\u70b9 <code>[20]</code> \u7a7a\u95f4\u8db3\u591f\uff0c\u6240\u4ee5 <code>12</code> \u76f4\u63a5\u63d2\u5165\u5373\u53ef\u3002</p>"},{"location":"ch05_tree/b_tree/#324-","title":"3.2.4 \u5185\u90e8\u8282\u70b9-\u5206\u88c2\u4e0a\u6ea2","text":"<p>\u5b50\u8282\u70b9\u4e0a\u6ea2\u540e\uff0c\u5982\u679c\u7236\u8282\u70b9\u7a7a\u95f4\u4e5f\u6ee1\u4e86\uff0c\u90a3\u4e48\u7236\u8282\u70b9\u4e5f\u4f1a\u51fa\u73b0\u5206\u88c2\u4e0a\u6ea2\uff1a</p> <pre><code>                                             ____ ____ ____ \n                                            | 20 | 30 | 45 | \n                                                   |\n                  -------------------------------------------------------------------\n                  |                    |                     |                      |\n             ___ ____ ____       ____ ____ ____        ____ ____ ____         ____ ____ ____ \n            | 9 | 12 | 18 |     | 25 |    |    |      | 37 | 39 |    |       | 62 | 85 |    | \n\n\n                                                   |  \u63d2\u5165 10\n                                                   v \n\n                                             ____ ____ ____ \n                                            | 30 |    |    | \n                                                   |\n                             ----------------------------------------------------------\n                             |                                                        |\n                       ____ ____ ___                                            ____ ___ ___ \n                      | 12 | 20 |   |                                          | 45 |   |   | \n                             |                                                        |\n        --------------------------------------------                      ------------------------\n        |                    |                     |                      |                      |\n   ___ ____ ____       ____ ____ ____        ____ ____ ____         ____ ____ ____         ____ ____ ____\n  | 9 | 10 |    |     | 18 |    |    |      | 25 |    |    |       | 37 | 39 |    |       | 62 | 85 |    | \n</code></pre> <p>\u63d2\u5165\u5143\u7d20 <code>10</code> \u4e4b\u540e\uff0c\u4f1a\u4f20\u9012\u6027\u5730\u5bfc\u81f4\u8282\u70b9 <code>[9, 12, 18]</code> \u548c\u8282\u70b9 <code>[20, 30, 45]</code> \u90fd\u4ea7\u751f\u5206\u88c2\u4e0a\u6ea2\u3002</p> <p>\u8fd9\u79cd\u5206\u88c2\u4e0a\u6ea2\u53ef\u4ee5\u4e00\u76f4\u6301\u7eed\u5230\u6839\u8282\u70b9\uff0c\u6700\u540e\u53ef\u80fd\u4f1a\u5bfc\u81f4B-\u6811\u63d0\u5347\u4e00\u5c42\uff08\u5982\u4e0a\uff09\u3002</p> <p>\u4e0a\u8ff0\u7684 4 \u79cd\u60c5\u51b5\uff0c\u5b9e\u9645\u5c31 2 \u79cd\uff1a</p> <ol> <li>\u7a7a\u95f4\u8db3\u591f\u65f6\uff0c\u76f4\u63a5\u63d2\u5165</li> <li>\u7a7a\u95f4\u4e0d\u8db3\u65f6\uff0c\u5206\u88c2\u4e0a\u6ea2</li> </ol> <p>\u5bf9\u5e94\u7684\u4f2a\u4ee3\u7801\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>/**- \u63d2\u5165\u65b0\u5143\u7d20 -*/\nprivate BTNode&lt;K, V&gt; put(BTNode&lt;K, V&gt; root, K key, V value) {\n    int index = root.findIndex(key);\n\n    // \u53f6\u5b50\u8282\u70b9\n    if (root.isLeaf()) {\n        // \u53f6\u5b50\u8282\u70b9\u6dfb\u52a0\u5143\u7d20\u540e\uff0c\u53ef\u80fd\u53d1\u751f\u4e86\u5206\u88c2\n        return root.add(key, value);\n    }\n\n    // \u5185\u90e8\u8282\u70b9\n    BTNode&lt;K, V&gt; child = root.getChild(index);\n    child = put(child, key, value);\n    // \u5b50\u6811\u6dfb\u52a0\u5143\u7d20\u540e\uff0c\u53ef\u80fd\u53d1\u751f\u4e86\u5206\u88c2\n    return root.overflow(index, child);\n}\n</code></pre> <pre><code>/**- \u76f4\u63a5\u63d2\u5165\u548c\u5206\u88c2\u4e0a\u6ea2\uff08\u53f6\u5b50\u8282\u70b9\u548c\u5185\u90e8\u8282\u70b9\u7684\u63d2\u5165\u903b\u8f91\u4e00\u6837\uff09 -*/\npublic BTNode&lt;K, V&gt; overflow(int index, BTNode&lt;K, V&gt; node) {\n    // \u5b50\u8282\u70b9\u6ca1\u4e0a\u6ea2\n    if (getChild(index) == node) {\n        return this;\n    }\n\n    // \u5b50\u8282\u70b9\u4e0a\u6ea2\u4e86\n    // 1. \u7a7a\u95f4\u8db3\u591f\uff0c\u76f4\u63a5\u63d2\u5165\n    if (size + node.size() &lt; m) {\n        return insertNode(index, node);\n    }\n\n    // 2. \u7a7a\u95f4\u4e0d\u8db3\uff0c\u5206\u88c2\u8282\u70b9\n    return splitNodes(index, node);\n}\n</code></pre>"},{"location":"ch05_tree/b_tree/#33","title":"3.3 \u5220\u9664\u5143\u7d20","text":"<p>\u5220\u9664\u5143\u7d20\uff0c\u53ef\u4ee5\u5206\u4e3a 3 \u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u5220\u9664\u540e\u5143\u7d20\u6570\u91cf\u4ecd\u7136\u6ee1\u8db3\u8981\u6c42\uff0c\u76f4\u63a5\u5220\u9664</li> <li>\u5220\u9664\u540e\u5143\u7d20\u6570\u91cf\u4e0d\u6ee1\u8db3\u8981\u6c42\uff0c\u770b\u5144\u5f1f\u8282\u70b9\u662f\u5426\u53ef\u4ee5\u501f\u4e00\u4e2a\u8fc7\u6765</li> <li>\u5144\u5f1f\u8282\u70b9\u4e0d\u80fd\u501f\uff0c\u90a3\u5c31\u5c06\u7236\u5b50\u8282\u70b9\u5408\u5e76\u6210 1 \u4e2a\u8282\u70b9\uff0c\u4ea7\u751f\u4e0b\u6ea2</li> </ol> <p>\u8fd9\u51e0\u79cd\u60c5\u51b5\u5982\u4e0b\u3002</p>"},{"location":"ch05_tree/b_tree/#331","title":"3.3.1 \u76f4\u63a5\u5220\u9664","text":"<p>\u5982\u679c\u8282\u70b9\u5220\u9664\u5143\u7d20\u540e\uff0c\u5143\u7d20\u6570\u91cf\u4ecd\u7136\u5904\u4e8e\u534a\u6ee1\u72b6\u6001\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u5373\u53ef\uff1a</p> <pre><code>                       ____ ___ ___ \n                      | 20 |   |   | \n                             |\n                  ----------------------\n                  |                    |\n             ___ ____ ____       ____ ____ ____ \n            | 9 | 12 | 18 |     | 25 |    |    | \n\n\n                             |  \u5220\u9664 12\n                             v \n\n                       ____ ___ ___ \n                      | 20 |   |   | \n                             |\n                  ----------------------\n                  |                    |\n             ___ ____ ____       ____ ____ ____ \n            | 9 | 18 |    |     | 25 |    |    | \n</code></pre> <p>\u53f6\u5b50\u8282\u70b9 <code>[9, 12, 18]</code> \u5220\u9664 <code>12</code> \u4ee5\u540e\uff0c\u5143\u7d20\u6570\u91cf\u4f9d\u65e7\u6ee1\u8db3\u534a\u6ee1\u72b6\u6001\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\u5e76\u8fd4\u56de\u3002</p>"},{"location":"ch05_tree/b_tree/#332","title":"3.3.2 \u4ece\u5144\u5f1f\u501f","text":"<p>\u5982\u679c\u5220\u9664\u5143\u7d20\u540e\uff0c\u5143\u7d20\u6570\u91cf\u5c11\u4e8e\u4e00\u534a\uff0c\u4e0d\u6ee1\u8db3\u8981\u6c42\uff0c\u5219\u770b\u4e00\u4e0b\u5144\u5f1f\u8282\u70b9\u80fd\u4e0d\u80fd\u501f\u4e00\u4e0b\uff1a</p> <pre><code>                       ____ ___ ___ \n                      | 20 |   |   | \n                             |\n                  ----------------------\n                  |                    |\n             ___ ____ ____       ____ ____ ____ \n            | 9 | 12 | 18 |     | 25 |    |    | \n\n\n                             |  \u5220\u9664 25\n                             v \n\n                       ____ ___ ___ \n                      | 18 |   |   | \n                             |\n                  ----------------------\n                  |                    |\n             ___ ____ ____       ____ ____ ____ \n            | 9 | 12 |    |     | 20 |    |    | \n</code></pre> <p>\u53f3\u5b50\u8282\u70b9 <code>[25]</code> \u5220\u9664 <code>25</code> \u4ee5\u540e\uff0c\u5143\u7d20\u6570\u91cf\u4e0d\u6ee1\u8db3\u8981\u6c42\u4e86\uff0c\u627e\u5144\u5f1f\u8282\u70b9 <code>[9, 12, 18]</code> \u501f\u4e00\u4e2a\u3002</p> <p>\u4f46\u662f\u4e0d\u80fd\u76f4\u63a5\u628a\u5de6\u5b50\u8282\u70b9\u7684\u5143\u7d20\u79fb\u5230\u53f3\u5b50\u8282\u70b9\u4e2d\uff0c\u56e0\u4e3aB-\u6811\u662f\u8981\u6c42\u6ee1\u8db3 <code>\u5de6\u5b50\u8282\u70b9 &lt; \u7236\u8282\u70b9 &lt; \u53f3\u5b50\u8282\u70b9</code>\u3002</p> <p>\u6240\u4ee5\u201c\u501f\u7528\u201d\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u65cb\u8f6c\u64cd\u4f5c\uff0c\u7236\u8282\u70b9\u8f6c\u5230\u9700\u8981\u501f\u7528\u5143\u7d20\u7684\u8282\u70b9\uff0c\u800c\u5144\u5f1f\u8282\u70b9\u5143\u7d20\u5219\u8f6c\u5230\u7236\u8282\u70b9\u4e2d\u3002</p>"},{"location":"ch05_tree/b_tree/#333","title":"3.3.3 \u7236\u5b50\u5408\u5e76","text":"<p>\u5982\u679c\u5144\u5f1f\u8282\u70b9\u501f\u4e0d\u4e86\u5143\u7d20\uff0c\u90a3\u5c31\u5c06<code>\u7236\u8282\u70b9 + \u5de6\u5b50\u8282\u70b9 + \u53f3\u5b50\u8282\u70b9</code>\u5408\u5e76\u5728\u4e00\u8d77\uff1a</p> <pre><code>                       ____ ___ ___ \n                      | 20 |   |   | \n                             |\n                  ----------------------\n                  |                    |\n             ___ ____ ____       ____ ____ ____ \n            | 9 |    |    |     | 25 |    |    | \n\n\n                             |  \u5220\u9664 25\n                             v \n\n                        ___ ____ ___ \n                       | 9 | 20 |   | \n</code></pre> <p>\u5220\u9664\u5143\u7d20 <code>25</code> \u540e\uff0c\u7531\u4e8e\u5144\u5f1f\u8282\u70b9\u6ca1\u529e\u6cd5\u501f\u7528\uff0c\u6240\u4ee5\u5c06\u7236\u5b50\u8282\u70b9\u90fd\u5408\u5e76\u6210 1 \u4e2a\u8282\u70b9\uff0c\u8fd9\u4e2a\u5408\u5e76\u79f0\u4e3a\u4e0b\u6ea2\u3002</p> <p>\u4e0b\u6ea2\u548c\u4e0a\u6ea2\u4e00\u6837\uff0c\u4e5f\u53ef\u80fd\u4f1a\u6301\u7eed\u4e0b\u6ea2\uff0c\u4e00\u76f4\u6301\u7eed\u5230\u6839\u8282\u70b9\uff0c\u6700\u7ec8\u5bfc\u81f4\u6811\u7684\u5c42\u7ea7\u4e0b\u964d\u3002</p> <p>\u4e0a\u8ff0\u60c5\u51b5\u7684\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/**- \u5220\u9664\u5143\u7d20 -*/\nprivate BTNode&lt;K, V&gt; remove(BTNode&lt;K, V&gt; root, K key) {\n    int index = root.findIndex(key);\n\n    // \u627e\u5230\u5bf9\u5e94\u8282\u70b9\u540e\u79fb\u9664\u5143\u7d20\n    if (key.equals(root.getKey(index))) {\n        // \u76f4\u63a5\u5220\u9664\u5143\u7d20\u540e\uff0c\u53ef\u80fd\u5bfc\u81f4\u7236\u8282\u70b9\u4e0b\u6ea2\n        return root.delete(index);\n    }\n\n    // \u5728\u5b50\u6811\u5185\u9012\u5f52\u79fb\u9664\u5143\u7d20\n    remove(root.getChild(index), key);\n    // \u5b50\u6811\u5220\u9664\u5143\u7d20\u540e\uff0c\u53ef\u80fd\u5bfc\u81f4\u7236\u8282\u70b9\u4e0b\u6ea2\n    return root.underflow(index);\n}\n</code></pre> <pre><code>/** \u4ece\u5144\u5f1f\u501f\u548c\u7236\u5b50\u5408\u5e76\uff08\u53f6\u5b50\u8282\u70b9\u548c\u5185\u90e8\u8282\u70b9\u7684\u4e0b\u6ea2\u903b\u8f91\u662f\u4e00\u6837\u7684\uff09 */\npublic BTNode&lt;K, V&gt; underflow(int index) {\n    // \u5b50\u8282\u70b9\u5408\u6cd5\uff0c\u65e0\u9700\u4e0b\u6ea2\n    if (isLegal(getChild(index))) {\n        return this;\n    }\n\n    // \u5b50\u8282\u70b9\u4e0d\u5408\u6cd5\uff0c\u9700\u4fee\u6b63\n    // 1. \u4ece\u5144\u5f1f\u8282\u70b9\u501f\u4e00\u4e2a\u5143\u7d20\n    if (borrowLeft(index) || borrowRight(index)) {\n        return this;\n    }\n\n    // 2. \u5408\u5e76\u7236\u5143\u7d20 + \u5de6\u53f3\u5b50\u8282\u70b9\n    return mergeNodes(index);\n}\n</code></pre>"},{"location":"ch05_tree/b_tree/#_1","title":"\u603b\u7ed3","text":"<ul> <li>\u6027\u8d28<ul> <li>m \u9636B-\u6811\u7684\u8282\u70b9\uff0c\u6700\u591a\u62e5\u6709 m - 1 \u4e2a\u5143\u7d20</li> <li>B-\u6811\u7684\u6240\u6709\u53f6\u5b50\u8282\u70b9\u90fd\u5728\u540c\u4e00\u5c42\uff0c\u662f\u9ad8\u5ea6\u5e73\u8861\u7684</li> <li>\u9664\u6839\u8282\u70b9\u5916\uff0c\u6240\u6709\u8282\u70b9\u7684\u5143\u7d20\u4e2a\u6570\u4e0d\u5c11\u4e8e Math.ceil(m/2) - 1\uff0c\u4e5f\u5373\u5b50\u8282\u70b9\u6570\u91cf\u4e0d\u5c11\u4e8e Math.ceil(m/2\uff09</li> <li>\u8282\u70b9\u7684\u5927\u5c0f\uff0c\u59cb\u7ec8\u6ee1\u8db3 <code>\u5de6\u5b50\u8282\u70b9 &lt; \u7236\u8282\u70b9 &lt; \u53f3\u5b50\u8282\u70b9</code></li> </ul> </li> <li>\u68c0\u7d22<ul> <li>\u591a\u8def\u67e5\u627e\uff1a\u4e8c\u5206\u67e5\u627e\u7684\u5347\u7ea7\u7248\u672c</li> </ul> </li> <li>\u63d2\u5165<ol> <li>\u7a7a\u95f4\u8db3\u591f\uff0c\u76f4\u63a5\u63d2\u5165</li> <li>\u7a7a\u95f4\u4e0d\u8db3\uff0c\u5206\u88c2\u4e0a\u6ea2</li> </ol> </li> <li>\u5220\u9664<ol> <li>\u5143\u7d20\u591f\u591a\uff0c\u76f4\u63a5\u5220\u9664</li> <li>\u5143\u7d20\u4e0d\u591f\uff0c\u4ece\u5144\u5f1f\u501f</li> <li>\u5144\u5f1f\u8282\u70b9\u65e0\u6cd5\u501f\u7528\uff0c\u5408\u5e76\u7236\u5b50\u8282\u70b9\uff0c\u6267\u884c\u4e0b\u6ea2</li> </ol> </li> </ul>"},{"location":"ch05_tree/b_tree/#_2","title":"\u53c2\u8003","text":"<p>\u300a\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790\uff08\u7b2c\u4e09\u7248\uff09\u300b</p> <p>https://www.cnblogs.com/nullzx/p/8729425.html</p> <p>https://github.com/LiuXianghai-coder/Test-Repo/blob/master/DataStructure/BTree.java</p> <p>https://blog.csdn.net/u011711997/article/details/80420392</p> <p>https://blog.csdn.net/c630843901/article/details/121423196</p> <p>https://blog.csdn.net/oooooorz/article/details/112297554</p> <p>https://blog.csdn.net/cdnight/article/details/11772621 </p>"},{"location":"ch05_tree/b_tree/#_3","title":"\u9644\u5f55","text":""},{"location":"ch05_tree/b_tree/#b-_4","title":"B-\u6811\u63a5\u53e3","text":"<pre><code>/**\n * B-\u6811\n *\n * @author weijiaduo\n * @since 2023/1/2\n */\npublic interface BTree&lt;K extends Comparable&lt;K&gt;, V&gt; {\n\n    /**\n     * \u67e5\u627e\u6307\u5b9a key \u7684\u503c\n     *\n     * @param key key\n     * @return value\n     */\n    V get(K key);\n\n    /**\n     * \u6dfb\u52a0\u6307\u5b9a key-value \u7684\u8282\u70b9\n     *\n     * @param key   key\n     * @param value value\n     */\n    void put(K key, V value);\n\n    /**\n     * \u5220\u9664\u6307\u5b9a key \u7684\u8282\u70b9\n     *\n     * @param key key\n     */\n    void remove(K key);\n\n}\n</code></pre>"},{"location":"ch05_tree/b_tree/#b-_5","title":"B-\u6811\u5b9e\u73b0","text":"<pre><code>/**\n * B-\u6811\u5b9e\u73b0\u7c7b\n *\n * @author weijiaduo\n * @since 2023/1/2\n */\npublic class BTreeImpl&lt;K extends Comparable&lt;K&gt;, V&gt; implements BTree&lt;K, V&gt; {\n\n    /**\n     * \u6839\u8282\u70b9\n     */\n    private BTNode&lt;K, V&gt; root;\n    /**\n     * m \u9636 B \u6811\n     */\n    private final int m;\n\n    public BTreeImpl(int m) {\n       this.m = m;\n    }\n\n    @Override\n    public V get(K key) {\n        return get(root, key);\n    }\n\n    /**\n     * \u4ece\u5f53\u524d\u8282\u70b9\u5f00\u59cb\u627e\u6307\u5b9a key \u7684\u503c\n     *\n     * @param root \u5f53\u524d\u6839\u8282\u70b9\n     * @param key  key\n     * @return value\n     */\n    private V get(BTNode&lt;K, V&gt; root, K key) {\n        if (root == null) {\n            return null;\n        }\n\n        // \u67e5\u627e\u5f53\u524d key \u6240\u5728\u7684\u4f4d\u7f6e\n        int index = root.findIndex(key);\n        if (key.equals(root.getKey(index))) {\n            // \u627e\u5230 key \u5bf9\u5e94\u7684\u8282\u70b9\n            return root.getValue(index);\n        } else {\n            // \u5f80\u5b50\u6811\u7ee7\u7eed\u627e key \u5bf9\u5e94\u7684\u8282\u70b9\n            return get(root.getChild(index), key);\n        }\n    }\n\n    @Override\n    public void put(K key, V value) {\n        root = put(root, key, value);\n    }\n\n    /**\n     * \u5728\u5f53\u524d\u6811\u5185\u6dfb\u52a0\u6307\u5b9a\u7684 key-value\n     *\n     * @param root  \u5f53\u524d\u6839\u8282\u70b9\n     * @param key   key\n     * @param value value\n     * @return \u65b0\u7684\u6839\u8282\u70b9\n     */\n    private BTNode&lt;K, V&gt; put(BTNode&lt;K, V&gt; root, K key, V value) {\n        // 1. \u6574\u68f5\u6811\u4e3a\u7a7a\u65f6\uff0c\u63d2\u5165\u65b0\u8282\u70b9\n        if (root == null) {\n            BTNode&lt;K, V&gt; node = new BTNode&lt;&gt;(m);\n            return node.add(key, value);\n        }\n\n        // \u9a8c\u8bc1\u662f\u5426\u5df2\u5b58\u5728\uff0c\u5b58\u5728\u5219\u53ea\u9700\u66f4\u65b0\n        int index = root.findIndex(key);\n        if (key.equals(root.getKey(index))) {\n            // \u66f4\u65b0\u8282\u70b9\n            root.setValue(index, value);\n            return root;\n        }\n\n        // 2. \u53f6\u5b50\u8282\u70b9\uff0c\u76f4\u63a5\u6dfb\u52a0\n        if (root.isLeaf()) {\n            // \u6dfb\u52a0\u5230\u53f6\u5b50\u8282\u70b9\u4e2d\uff0c\u6709\u53ef\u80fd\u53d1\u751f\u5206\u88c2\n            return root.add(key, value);\n        }\n\n        // 3. \u5185\u90e8\u8282\u70b9\uff0c\u6dfb\u52a0\u5230\u5b50\u6811\u7684\u53f6\u5b50\u8282\u70b9\u4e2d\n        BTNode&lt;K, V&gt; child = root.getChild(index);\n        child = put(child, key, value);\n\n        // \u6dfb\u52a0\u5143\u7d20\u540e\u5b50\u6811\u53ef\u80fd\u53d1\u751f\u4e86\u5206\u88c2\n        return root.overflow(index, child);\n    }\n\n    @Override\n    public void remove(K key) {\n        root = remove(root, key);\n        if (root != null &amp;&amp; root.isEmpty()) {\n            // \u6811\u7684\u9ad8\u5ea6\u4e0b\u964d\n            root = root.firstChild();\n        }\n    }\n\n    /**\n     * \u5728\u5f53\u524d\u6811\u5185\u5220\u9664\u6307\u5b9a key \u7684\u8282\u70b9\n     *\n     * @param root \u5f53\u524d\u6839\u8282\u70b9\n     * @param key  key\n     * @return \u65b0\u7684\u6839\u8282\u70b9\n     */\n    private BTNode&lt;K, V&gt; remove(BTNode&lt;K, V&gt; root, K key) {\n        if (root == null) {\n            return null;\n        }\n\n        // \u627e\u5230\u5bf9\u5e94\u8282\u70b9\u540e\u79fb\u9664\u5143\u7d20\n        int index = root.findIndex(key);\n        if (key.equals(root.getKey(index))) {\n            return root.delete(index);\n        }\n\n        // \u5728\u5b50\u6811\u5185\u9012\u5f52\u79fb\u9664\u5143\u7d20\n        remove(root.getChild(index), key);\n\n        // \u79fb\u9664\u540e\u53ef\u80fd\u9700\u8981\u7236\u8282\u70b9\u4e0b\u6ea2\n        return root.underflow(index);\n    }\n\n}\n</code></pre>"},{"location":"ch05_tree/b_tree/#b-_6","title":"B-\u6811\u8282\u70b9","text":"<pre><code>/**\n * B-\u6811\u8282\u70b9\n *\n * @author weijiaduo\n * @since 2023/1/2\n */\npublic class BTNode&lt;K extends Comparable&lt;K&gt;, V&gt; {\n\n    /**\n     * m \u9636 B \u6811\n     */\n    private final int m;\n    /**\n     * \u8282\u70b9\u5143\u7d20\u9608\u503c\n     */\n    private final int threshold;\n    /**\n     * \u8282\u70b9\u5143\u7d20\u6570\u7ec4\n     * &lt;p&gt;\n     * \u5143\u7d20\u7684\u7b2c 0 \u4f4d\u59cb\u7ec8\u662f\u4e00\u4e2a\u5360\u4f4d\u5143\u7d20\uff0c\u4e13\u95e8\u7528\u4e8e\u5b58\u653e\u6700\u5de6\u5b50\u8282\u70b9\n     * &lt;p&gt;\n     * \u6240\u4ee5\u4e00\u4e2a\u8282\u70b9\u80fd\u62e5\u6709\u7684\u5143\u7d20\u4e2a\u6570\u6700\u591a\u662f m - 1\n     */\n    private final Object[] elements;\n    /**\n     * \u5b9e\u9645\u5143\u7d20\u6570\u91cf\n     * &lt;p&gt;\n     * \u53d6\u503c\u8303\u56f4\u662f [0, m - 1]\n     */\n    private int size;\n\n    public BTNode(int m) {\n        this.m = m;\n        this.threshold = half(m);\n        elements = new Object[m];\n        // \u6700\u5de6\u5143\u7d20\u5360\u4f4d\uff0c\u7528\u4e8e\u5b58\u653e\u6700\u5de6\u5b50\u8282\u70b9\u6307\u9488\n        elements[0] = new Entry&lt;K, V&gt;(null, null);\n        size = 0;\n    }\n\n    /**\n     * @return \u5143\u7d20\u6570\u91cf\n     */\n    public int size() {\n        return size;\n    }\n\n    /**\n     * \u534a\u6570\u9608\u503c ceil(m / 2) - 1\n     *\n     * @param m \u5f53\u524d\u503c\n     * @return \u534a\u6570\u9608\u503c\n     */\n    private int half(int m) {\n        return (m + 1) / 2 - 1;\n    }\n\n    /**\n     * \u662f\u5426\u5df2\u6ee1\n     *\n     * @return true\u5df2\u6ee1/false\u672a\u6ee1\n     */\n    public boolean isFull() {\n        return size == m - 1;\n    }\n\n    /**\n     * \u662f\u5426\u4e3a\u7a7a\n     *\n     * @return true\u4e3a\u7a7a/false\u975e\u7a7a\n     */\n    public boolean isEmpty() {\n        return size == 0;\n    }\n\n    /**\n     * \u8282\u70b9\u662f\u5426\u5408\u6cd5\n     * &lt;p&gt;\n     * \u8282\u70b9\u7684\u5143\u7d20\u6570\u91cf\u8981\u6c42\u5927\u4e8e\u7b49\u4e8e\u9608\u503c\n     *\n     * @return true\u5408\u6cd5/false\u975e\u6cd5\n     */\n    public boolean isLegal() {\n        return size &gt;= threshold;\n    }\n\n    /**\n     * \u662f\u5426\u53ef\u501f\u7528\u5143\u7d20\u7ed9\u522b\u7684\u8282\u70b9\n     * &lt;p&gt;\n     * \u5f53\u8282\u70b9\u7684\u5143\u7d20\u6570\u91cf\u5927\u4e8e\u9608\u503c\u65f6\uff0c\u624d\u53ef\u4ee5\u5916\u501f\u5143\u7d20\n     *\n     * @return true\u53ef\u501f\u7528/false\u4e0d\u53ef\u501f\u7528\n     */\n    private boolean canBorrow() {\n        return size &gt; threshold;\n    }\n\n    /**\n     * \u662f\u5426\u662f\u53f6\u5b50\u8282\u70b9\n     * &lt;p&gt;\n     * \u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u975e\u7a7a\u5b50\u8282\u70b9\u65f6\u624d\u662f\u53f6\u5b50\u8282\u70b9\n     *\n     * @return true\u53f6\u5b50\u8282\u70b9/false\u5185\u90e8\u8282\u70b9\n     */\n    public boolean isLeaf() {\n        for (int i = 0; i &lt;= size; i++) {\n            if (getChild(i) != null) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * \u83b7\u53d6\u6240\u6709\u7684\u5143\u7d20\n     *\n     * @return \u5143\u7d20\u96c6\u5408\n     */\n    public List&lt;Entry&lt;K, V&gt;&gt; entries() {\n        List&lt;Entry&lt;K, V&gt;&gt; entries = new ArrayList&lt;&gt;(size);\n        // \u5143\u7d20\u4ece\u7d22\u5f15 1 \u5f00\u59cb\n        for (int i = 1; i &lt;= size; i++) {\n            entries.add(getEntry(i));\n        }\n        return entries;\n    }\n\n    /**\n     * \u83b7\u53d6\u6240\u6709\u7684 key\n     *\n     * @return key \u96c6\u5408\n     */\n    public List&lt;K&gt; keys() {\n        List&lt;K&gt; keys = new ArrayList&lt;&gt;(size);\n        // \u5143\u7d20\u4ece\u7d22\u5f15 1 \u5f00\u59cb\n        for (int i = 1; i &lt;= size; i++) {\n            keys.add(getKey(i));\n        }\n        return keys;\n    }\n\n    /**\n     * \u83b7\u53d6\u6240\u6709\u7684 value\n     *\n     * @return value \u96c6\u5408\n     */\n    public List&lt;V&gt; values() {\n        List&lt;V&gt; values = new ArrayList&lt;&gt;(size);\n        // \u5143\u7d20\u4ece\u7d22\u5f15 1 \u5f00\u59cb\n        for (int i = 1; i &lt;= size; i++) {\n            values.add(getValue(i));\n        }\n        return values;\n    }\n\n    /**\n     * \u83b7\u53d6\u6307\u5b9a\u4f4d\u7f6e\u7684 key\n     *\n     * @param index \u7d22\u5f15\n     * @return key\n     */\n    public K getKey(int index) {\n        return getEntry(index).key;\n    }\n\n    /**\n     * \u83b7\u53d6\u6307\u5b9a\u4f4d\u7f6e\u7684 value\n     *\n     * @param index \u7d22\u5f15\n     * @return value\n     */\n    public V getValue(int index) {\n        return getEntry(index).value;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6307\u5b9a\u4f4d\u7f6e\u7684 value\n     *\n     * @param index \u7d22\u5f15\n     * @param value \u503c\n     */\n    public void setValue(int index, V value) {\n        getEntry(index).value = value;\n    }\n\n    /**\n     * \u83b7\u53d6\u6240\u6709\u7684\u5b50\u8282\u70b9\n     * &lt;p&gt;\n     * \u6ce8\u610f\uff1a\u662f\u6240\u6709\u53ef\u80fd\u7684\u5b50\u8282\u70b9\uff0c\u4e5f\u5305\u62ec\u4e86 null \u5b50\u8282\u70b9\n     *\n     * @return \u5b50\u8282\u70b9\u96c6\u5408\n     */\n    public List&lt;BTNode&lt;K, V&gt;&gt; children() {\n        List&lt;BTNode&lt;K, V&gt;&gt; children = new ArrayList&lt;&gt;(size + 1);\n        // \u5b50\u8282\u70b9\u4ece\u7d22\u5f15 0 \u5f00\u59cb\n        for (int i = 0; i &lt;= size; i++) {\n            children.add(getChild(i));\n        }\n        return children;\n    }\n\n    /**\n     * \u8fd4\u56de\u7b2c\u4e00\u4e2a\u5b50\u8282\u70b9\n     * &lt;p&gt;\n     * \u6ce8\u610f\uff1a\u4e0d\u662f\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b50\u8282\u70b9\uff0c\u800c\u662f\u7b2c 1 \u4e2a\u5143\u7d20\u7684\u5de6\u5b50\u8282\u70b9\n     *\n     * @return \u7b2c\u4e00\u4e2a\u5b50\u8282\u70b9\n     */\n    public BTNode&lt;K, V&gt; firstChild() {\n        return getChild(0);\n    }\n\n    /**\n     * \u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5b50\u8282\u70b9\n     * &lt;p&gt;\n     * \u6ce8\u610f\uff1a\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u975e\u7a7a\u5b50\u8282\u70b9\uff0c\u800c\u662f\u6700\u540e 1 \u4e2a\u5143\u7d20\u7684\u53f3\u5b50\u8282\u70b9\n     *\n     * @return \u6700\u540e\u4e00\u4e2a\u5b50\u8282\u70b9\n     */\n    public BTNode&lt;K, V&gt; lastChild() {\n        return getChild(size);\n    }\n\n    /**\n     * \u83b7\u53d6\u6307\u5b9a\u4f4d\u7f6e\u7684\u4e0b\u4e00\u5c42\u5b50\u8282\u70b9\n     *\n     * @param index \u6307\u5b9a\u4f4d\u7f6e\n     * @return \u4e0b\u4e00\u5c42\u5b50\u6811\u6839\u8282\u70b9\n     */\n    public BTNode&lt;K, V&gt; getChild(int index) {\n        return getEntry(index).pointer;\n    }\n\n    /**\n     * \u66f4\u65b0\u6307\u5b9a\u4f4d\u7f6e\u7684\u5b50\u8282\u70b9\n     *\n     * @param index \u7d22\u5f15\n     * @param node  \u5b50\u8282\u70b9\n     */\n    public void setChild(int index, BTNode&lt;K, V&gt; node) {\n        getEntry(index).pointer = node;\n    }\n\n    /**\n     * \u67e5\u627e\u6307\u5b9a key \u7684\u4f4d\u7f6e\n     * &lt;p&gt;\n     * \u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e key \u7684\u4f4d\u7f6e\n     *\n     * @param key key\n     * @return key \u7684\u4f4d\u7f6e\n     */\n    public int findIndex(K key) {\n        // \u7b2c 0 \u4f4d\u662f\u5360\u4f4d\u5143\u7d20\uff0c\u8fd8\u6ca1\u7b97\u5728\u5185\n        return 1 + binaryle(keys(), key);\n    }\n\n    /**\n     * \u4e8c\u5206\u67e5\u627e\uff0c\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e key \u7684\u4f4d\u7f6e\n     *\n     * @param keys key \u96c6\u5408\n     * @param key  \u6307\u5b9a key\n     * @return \u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e key \u7684\u4f4d\u7f6e/-1\n     */\n    private int binaryle(List&lt;K&gt; keys, K key) {\n        int size = keys.size();\n        int l = 0, r = size - 1;\n        while (l &lt;= r) {\n            int m = l + (r - l) / 2;\n            K k = keys.get(m);\n            if (k.compareTo(key) &lt;= 0) {\n                if (m == size - 1 || keys.get(m + 1).compareTo(key) &gt; 0) {\n                    return m;\n                }\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * \u6dfb\u52a0\u65b0\u5143\u7d20\n     *\n     * @param key   key\n     * @param value value\n     */\n    public BTNode&lt;K, V&gt; add(K key, V value) {\n        BTNode&lt;K, V&gt; node = new BTNode&lt;&gt;(m);\n        node.addEntry(new Entry&lt;&gt;(key, value));\n        int index = findIndex(key);\n        return overflow(index, node);\n    }\n\n    /**\n     * \u8282\u70b9\u4e0a\u6ea2\u5904\u7406\n     * &lt;p&gt;\n     * \u5b50\u6811\u6dfb\u52a0\u65b0\u5143\u7d20\u540e\uff0c\u53ef\u80fd\u4f1a\u5206\u88c2\u6210\u65b0\u8282\u70b9\uff0c\u66ff\u4ee3\u539f\u6709\u7684\u5b50\u8282\u70b9\n     *\n     * @param index \u7d22\u5f15\n     * @param node  \u65b0\u8282\u70b9\n     * @return \u6dfb\u52a0\u540e\u7684\u5f53\u524d\u8282\u70b9\n     */\n    public BTNode&lt;K, V&gt; overflow(int index, BTNode&lt;K, V&gt; node) {\n        if (node == null || node.isEmpty()) {\n            return this;\n        }\n\n        // \u8fd8\u662f\u65e7\u8282\u70b9\uff0c\u8bf4\u660e\u5b50\u8282\u70b9\u6ca1\u6709\u4e0a\u6ea2\uff0c\u65e0\u9700\u5904\u7406\n        BTNode&lt;K, V&gt; cur = getChild(index);\n        if (cur == node) {\n            return this;\n        }\n\n        // 1. \u5f53\u524d\u7a7a\u95f4\u8db3\u591f\u63d2\u5165\n        if (size + node.size() &lt; m) {\n            // \u65b0\u5b50\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u66ff\u4ee3\u65e7\u5b50\u8282\u70b9\u7684\u4f4d\u7f6e\n            setChild(index, node.firstChild());\n            for (Entry&lt;K, V&gt; entry : node.entries()) {\n                insertEntry(++index, entry);\n            }\n            return this;\n        }\n\n        // 2. \u5f53\u524d\u7a7a\u95f4\u4e0d\u591f\uff0c\u9700\u8981\u5206\u88c2\u6210 3 \u4e2a\u8282\u70b9\n        return splitNodes(index, node);\n    }\n\n    /**\n     * \u5b50\u8282\u70b9\u4e0a\u6ea2\u540e\uff0c\u7236\u8282\u70b9\u5df2\u6ee1\uff0c\u5219\u9700\u8981\u5206\u88c2\u8282\u70b9\uff0c\u5c06 1 \u4e2a\u8282\u70b9\u62c6\u5206\u6210 3 \u4e2a\u8282\u70b9\n     *\n     * @param index   \u4e0a\u6ea2\u5b50\u8282\u70b9\u7684\u7236\u5143\u7d20\u7d22\u5f15\n     * @param newNode \u4e0a\u6ea2\u7684\u5b50\u8282\u70b9\n     * @return \u5206\u88c2\u540e\u65b0\u7684\u7236\u8282\u70b9\n     */\n    private BTNode&lt;K, V&gt; splitNodes(int index, BTNode&lt;K, V&gt; newNode) {\n        // \u65b0\u5b50\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u66ff\u4ee3\u65e7\u5b50\u8282\u70b9\u7684\u4f4d\u7f6e\n        setChild(index, newNode.firstChild());\n\n        int newSize = size + newNode.size();\n        List&lt;Entry&lt;K, V&gt;&gt; allEntries = new ArrayList&lt;&gt;(newSize);\n        List&lt;Entry&lt;K, V&gt;&gt; curEntries = entries();\n        for (int i = 0; i &lt; index &amp;&amp; i &lt; size; i++) {\n            allEntries.add(curEntries.get(i));\n        }\n        allEntries.addAll(newNode.entries());\n        for (int i = index; i &lt; size; i++) {\n            allEntries.add(curEntries.get(i));\n        }\n\n        // \u6839\u8282\u70b9\n        int mid = newSize / 2;\n        BTNode&lt;K, V&gt; root = new BTNode&lt;&gt;(m);\n        for (int i = mid; i &lt;= mid; i++) {\n            root.addEntry(allEntries.get(i));\n        }\n        // \u5de6\u5b50\u8282\u70b9\n        BTNode&lt;K, V&gt; left = new BTNode&lt;&gt;(m);\n        for (int i = 0; i &lt; mid; i++) {\n            left.addEntry(allEntries.get(i));\n        }\n        // \u53f3\u5b50\u8282\u70b9\n        BTNode&lt;K, V&gt; right = new BTNode&lt;&gt;(m);\n        for (int i = mid + 1; i &lt; newSize; i++) {\n            right.addEntry(allEntries.get(i));\n        }\n\n        // \u8fb9\u754c\u6307\u9488\n        left.setChild(0, firstChild());\n        right.setChild(0, root.lastChild());\n        root.setChild(0, left);\n        root.setChild(root.size, right);\n        return root;\n    }\n\n    /**\n     * \u5220\u9664\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\n     * &lt;p&gt;\n     * \u5220\u9664\u5143\u7d20\u540e\uff0c\u8282\u70b9\u53ef\u80fd\u4f1a\u4ea7\u751f\u4e0b\u6ea2\uff0c\u4ece\u800c\u8fd4\u56de\u4e86\u4e00\u4e2a\u7a7a\u5143\u7d20\u8282\u70b9\n     *\n     * @param index \u7d22\u5f15\n     * @return \u5220\u9664\u540e\u7684\u6839\u8282\u70b9\n     */\n    public BTNode&lt;K, V&gt; delete(int index) {\n        if (isEmpty() || index == 0) {\n            throw new IllegalStateException(String.format(\"index: %d, size: %d\", index, size));\n        }\n\n        if (isLeaf()) {\n            // \u53f6\u5b50\u8282\u70b9\n            // \u76f4\u63a5\u5220\u9664\uff0c\u5220\u9664\u540e\u53ef\u80fd\u4f1a\u53d8\u6210\u5143\u7d20\u4e3a\u7a7a\u7684\u7a7a\u8282\u70b9\n            // \u7a7a\u8282\u70b9\u5c06\u7531\u7236\u8282\u70b9\u7684 underflow \u5904\u7406\u6389\uff0c\u6216\u8005\u7531\u6839\u8282\u70b9\u5904\u7406\u6389\n            removeEntry(index);\n            return this;\n        }\n\n        // \u5185\u90e8\u8282\u70b9\n        // \u4f7f\u7528\u524d\u9a71\u6216\u540e\u9a71\u8fdb\u884c\u66ff\u6362\n        int rpIndex = getReplacer(this, index);\n        BTNode&lt;K, V&gt; child = getChild(rpIndex);\n        BTNode&lt;K, V&gt; newChild;\n        if (rpIndex &lt; index) {\n            // \u524d\u9a71\u5143\u7d20\u66ff\u6362\n            Entry&lt;K, V&gt; max = max(child);\n            newChild = removeMax(child);\n            setChild(rpIndex, newChild);\n            setEntry(index, max);\n        } else {\n            // \u540e\u9a71\u5143\u7d20\u66ff\u6362\n            Entry&lt;K, V&gt; min = min(child);\n            newChild = removeMin(child);\n            setChild(rpIndex, newChild);\n            setEntry(index, min);\n        }\n\n        // \u79fb\u9664\u540e\u53ef\u80fd\u9700\u8981\u7236\u8282\u70b9\u4e0b\u6ea2\n        return underflow(rpIndex);\n    }\n\n    /**\n     * \u8282\u70b9\u4e0b\u6ea2\u5904\u7406\n     * &lt;p&gt;\n     * \u5b58\u5728\u975e\u6cd5\u5b50\u8282\u70b9\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u5bf9\u7236\u8282\u70b9\u8fdb\u884c\u4e0b\u6ea2\u64cd\u4f5c\n     *\n     * @param index \u7236\u8282\u70b9\u7d22\u5f15\n     * @return \u6839\u8282\u70b9\n     */\n    public BTNode&lt;K, V&gt; underflow(int index) {\n        // \u9a8c\u8bc1\u5b50\u8282\u70b9\u662f\u5426\u5408\u6cd5\n        BTNode&lt;K, V&gt; cur = getChild(index);\n        if (cur == null || cur.isLegal()) {\n            return this;\n        }\n\n        // 1. \u4ece\u5144\u5f1f\u8282\u70b9\u501f\u4e00\u4e2a\u5143\u7d20\n        BTNode&lt;K, V&gt; left = null;\n        if (index &gt; 0) {\n            left = getChild(index - 1);\n            if (left != null &amp;&amp; left.canBorrow()) {\n                return borrowLeft(index);\n            }\n        }\n        BTNode&lt;K, V&gt; right = null;\n        if (index &lt; size) {\n            right = getChild(index + 1);\n            if (right != null &amp;&amp; right.canBorrow()) {\n                return borrowRight(index);\n            }\n        }\n        if (left == null &amp;&amp; right == null) {\n            return this;\n        }\n\n        // 2. \u5408\u5e76\u7236\u5143\u7d20 + \u5de6\u53f3\u5b50\u8282\u70b9\n        // \u59cb\u7ec8\u628a\u5f53\u524d\u8282\u70b9\u4f5c\u4e3a\u5408\u5e76\u65f6\u7684\u53f3\u5b50\u8282\u70b9\n        return mergeNodes(left != null ? index : index + 1);\n    }\n\n    /**\n     * \u501f\u7528\u5de6\u5b50\u8282\u70b9\u7684\u503c\n     * &lt;p&gt;\n     * \u5b9e\u9645\u5c31\u662f\u53f3\u65cb\uff0c\u5c06\u7236\u8282\u70b9\u8f6c\u5230\u53f3\u5b50\u8282\u70b9\uff0c\u5de6\u5b50\u8282\u70b9\u7684\u5143\u7d20\u8f6c\u5230\u7236\u8282\u70b9\n     *\n     * @param index \u7236\u8282\u70b9\u7d22\u5f15\n     */\n    private BTNode&lt;K, V&gt; borrowLeft(int index) {\n        BTNode&lt;K, V&gt; left = getChild(index - 1);\n        BTNode&lt;K, V&gt; right = getChild(index);\n\n        Entry&lt;K, V&gt; parentEntry = getEntry(index);\n        Entry&lt;K, V&gt; leftEntry = left.getEntry(left.size);\n        BTNode&lt;K, V&gt; leftRight = left.lastChild();\n\n        // \u7236\u8282\u70b9\u8f6c\u5230\u53f3\u5b50\u8282\u70b9\n        right.insertEntry(1, parentEntry);\n        right.setChild(1, right.firstChild());\n        // \u5de6\u5b50\u8282\u70b9\u8f6c\u5230\u7236\u8282\u70b9\n        left.removeEntry(left.size);\n        setEntry(index, leftEntry);\n        setChild(index, right);\n        right.setChild(0, leftRight);\n        return this;\n    }\n\n    /**\n     * \u501f\u7528\u53f3\u5b50\u8282\u70b9\u7684\u503c\n     * &lt;p&gt;\n     * \u5b9e\u9645\u5c31\u662f\u5de6\u65cb\uff0c\u5c06\u7236\u5143\u7d20\u8f6c\u5230\u5de6\u5b50\u8282\u70b9\uff0c\u53f3\u5b50\u8282\u70b9\u7684\u5143\u7d20\u8f6c\u5230\u7236\u8282\u70b9\n     *\n     * @param index \u7236\u8282\u70b9\u7d22\u5f15\n     */\n    private BTNode&lt;K, V&gt; borrowRight(int index) {\n        BTNode&lt;K, V&gt; right = getChild(index + 1);\n        BTNode&lt;K, V&gt; left = getChild(index);\n\n        Entry&lt;K, V&gt; parentEntry = getEntry(index + 1);\n        Entry&lt;K, V&gt; rightEntry = right.getEntry(1);\n        BTNode&lt;K, V&gt; rightLeft = right.firstChild();\n\n        // \u7236\u8282\u70b9\u8f6c\u5230\u5de6\u5b50\u8282\u70b9\n        left.addEntry(parentEntry);\n        // \u53f3\u5b50\u8282\u70b9\u8f6c\u5230\u7236\u8282\u70b9\n        right.setChild(0, right.getChild(1));\n        right.removeEntry(1);\n        setEntry(index + 1, rightEntry);\n        setChild(index + 1, right);\n        left.setChild(left.size, rightLeft);\n        return this;\n    }\n\n    /**\n     * \u7236\u8282\u70b9\u5143\u7d20 + \u53f3\u5b50\u8282\u70b9\uff0c\u5168\u90fd\u5408\u5e76\u5230\u5de6\u5b50\u8282\u70b9\n     * &lt;p&gt;\n     * \u56e0\u4e3a\u7236\u8282\u70b9\u5143\u7d20\u548c\u53f3\u5b50\u8282\u70b9\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u6240\u4ee5\u90fd\u662f\u6309\u7167\u201c\u7236 + \u53f3 --&gt; \u5de6\u201d\u8fdb\u884c\u5408\u5e76\n     * &lt;p&gt;\n     * \u65b9\u4fbf\u540c\u65f6\u5220\u9664\u7236\u8282\u70b9\u5143\u7d20\u548c\u53f3\u5b50\u8282\u70b9\n     *\n     * @param index \u7236\u5143\u7d20\u7d22\u5f15\n     */\n    private BTNode&lt;K, V&gt; mergeNodes(int index) {\n        BTNode&lt;K, V&gt; left = getChild(index - 1);\n        BTNode&lt;K, V&gt; right = getChild(index);\n\n        // \u7236\u8282\u70b9\u5143\u7d20\u5408\u5e76\u5230\u5de6\u5b50\u8282\u70b9\n        Entry&lt;K, V&gt; parentEntry = getEntry(index);\n        left.addEntry(parentEntry);\n\n        // \u53f3\u5b50\u8282\u70b9\u5408\u5e76\u5230\u5de6\u5b50\u8282\u70b9\n        left.setChild(left.size, right.firstChild());\n        for (Entry&lt;K, V&gt; entry : right.entries()) {\n            left.addEntry(entry);\n        }\n\n        // \u79fb\u9664\u7236\u8282\u70b9\u5143\u7d20\n        removeEntry(index);\n        return this;\n    }\n\n    /**\n     * \u83b7\u53d6\u53ef\u66ff\u6362\u5b50\u8282\u70b9\u7d22\u5f15\uff08\u524d\u9a71/\u540e\u9a71\uff09\n     *\n     * @param root  \u5f53\u524d\u6839\u8282\u70b9\n     * @param index \u5f53\u524d\u7d22\u5f15\n     * @return \u53ef\u66ff\u6362\u5b50\u8282\u70b9\u7d22\u5f15\n     */\n    private int getReplacer(BTNode&lt;K, V&gt; root, int index) {\n        BTNode&lt;K, V&gt; right = null;\n        if (index &lt;= root.size) {\n            right = root.getChild(index);\n        }\n        if (right == null) {\n            return index - 1;\n        }\n        BTNode&lt;K, V&gt; left = null;\n        if (index &gt; 0) {\n            left = root.getChild(index - 1);\n        }\n        if (left == null) {\n            return index;\n        }\n\n        if (left.canBorrow()) {\n            return index - 1;\n        } else {\n            return index;\n        }\n    }\n\n    /**\n     * \u83b7\u53d6\u6700\u5927\u503c\n     *\n     * @param root \u5f53\u524d\u6839\u8282\u70b9\n     * @return \u6700\u5927\u503c\n     */\n    private Entry&lt;K, V&gt; max(BTNode&lt;K, V&gt; root) {\n        if (root == null) {\n            return null;\n        }\n\n        if (root.isLeaf()) {\n            return root.getEntry(root.size);\n        }\n        return max(root.lastChild());\n    }\n\n    /**\n     * \u79fb\u9664\u6700\u5927\u503c\n     *\n     * @param root \u5f53\u524d\u6839\u8282\u70b9\n     * @return \u79fb\u9664\u540e\u7684\u6839\u8282\u70b9\n     */\n    private BTNode&lt;K, V&gt; removeMax(BTNode&lt;K, V&gt; root) {\n        if (root == null) {\n            return null;\n        }\n\n        if (root.isLeaf()) {\n            root.removeEntry(root.size);\n            return root;\n        }\n\n        int index = root.size;\n        removeMax(root.getChild(index));\n        return root.underflow(index);\n    }\n\n    /**\n     * \u83b7\u53d6\u6700\u5c0f\u503c\n     *\n     * @param root \u5f53\u524d\u6839\u8282\u70b9\n     * @return \u6700\u5c0f\u503c\n     */\n    private Entry&lt;K, V&gt; min(BTNode&lt;K, V&gt; root) {\n        if (root == null) {\n            return null;\n        }\n\n        if (root.isLeaf()) {\n            return root.getEntry(1);\n        }\n        return min(root.firstChild());\n    }\n\n    /**\n     * \u79fb\u9664\u6700\u5c0f\u503c\n     *\n     * @param root \u5f53\u524d\u6839\u8282\u70b9\n     * @return \u79fb\u9664\u503c\u540e\u7684\u6839\u8282\u70b9\n     */\n    private BTNode&lt;K, V&gt; removeMin(BTNode&lt;K, V&gt; root) {\n        if (root == null) {\n            return null;\n        }\n\n        if (root.isLeaf()) {\n            root.removeEntry(1);\n            return root;\n        }\n\n        int index = 0;\n        removeMin(root.getChild(index));\n        return root.underflow(index);\n    }\n\n    /**\n     * \u83b7\u53d6\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\n     *\n     * @param index \u7d22\u5f15\n     * @return \u5143\u7d20\n     */\n    private Entry&lt;K, V&gt; getEntry(int index) {\n        return (Entry&lt;K, V&gt;) elements[index];\n    }\n\n    /**\n     * \u66f4\u65b0\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\n     * &lt;p&gt;\n     * \u8981\u6c42\u539f\u59cb\u5143\u7d20\u5fc5\u987b\u5b58\u5728\uff0c\u5426\u5219\u5e94\u8be5\u4f7f\u7528 {@code insertEntry()}\n     *\n     * @param index \u7d22\u5f15\n     * @param entry \u5143\u7d20\n     */\n    private void setEntry(int index, Entry&lt;K, V&gt; entry) {\n        Entry&lt;K, V&gt; oldEntry = getEntry(index);\n        if (oldEntry == null || index == 0) {\n            throw new IllegalStateException(String.format(\"index: %d, size: %d\", index, size));\n        }\n\n        // \u4fdd\u7559\u5b50\u8282\u70b9\uff0c\u53ea\u66ff\u6362\u5143\u7d20\u7684 key-value\n        elements[index] = entry;\n        entry.pointer = oldEntry.pointer;\n    }\n\n    /**\n     * \u8ffd\u52a0\u65b0\u5143\u7d20\n     * &lt;p&gt;\n     * \u6b64\u65b9\u6cd5\u4e0d\u4f1a\u4ea7\u751f\u8282\u70b9\u5206\u88c2\uff0c\u9700\u8981\u5206\u88c2\u65f6\u5e94\u8c03\u7528 {@code overflow()} \u65b9\u6cd5\n     *\n     * @param entry \u5143\u7d20\n     */\n    private void addEntry(Entry&lt;K, V&gt; entry) {\n        if (isFull()) {\n            throw new IllegalStateException(String.format(\"size: %d\", size));\n        }\n\n        elements[++size] = entry;\n    }\n\n    /**\n     * \u63d2\u5165\u65b0\u5143\u7d20\n     * &lt;p&gt;\n     * \u6b64\u65b9\u6cd5\u4e0d\u4f1a\u4ea7\u751f\u8282\u70b9\u5206\u88c2\uff0c\u9700\u8981\u5206\u88c2\u65f6\u5e94\u8c03\u7528 {@code overflow()} \u65b9\u6cd5\n     *\n     * @param index \u63d2\u5165\u7d22\u5f15\n     * @param entry \u5143\u7d20\n     */\n    private void insertEntry(int index, Entry&lt;K, V&gt; entry) {\n        if (isFull() || index == 0) {\n            throw new IllegalStateException(String.format(\"index: %d, size: %d\", index, size));\n        }\n\n        if (size &gt;= index) {\n            System.arraycopy(elements, index, elements, index + 1, size - index + 1);\n            elements[index] = entry;\n            size++;\n        } else {\n            elements[index] = entry;\n            size = index;\n        }\n    }\n\n    /**\n     * \u79fb\u9664\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\n     *\n     * @param index \u7d22\u5f15\n     */\n    private void removeEntry(int index) {\n        if (isEmpty() || index == 0) {\n            throw new IllegalStateException(String.format(\"index: %d, size: %d\", index, size));\n        }\n\n        if (size &gt; index) {\n            System.arraycopy(elements, index + 1, elements, index, size - index);\n        }\n        elements[size] = null;\n        size--;\n    }\n\n    @Override\n    public String toString() {\n        String[] s = new String[size];\n        for (int i = 1; i &lt;= size; i++) {\n            s[i - 1] = elements[i].toString();\n        }\n        return \"[\" + String.join(\", \", s) + \"]\";\n    }\n\n    /**\n     * \u5355\u4e2a\u5143\u7d20\n     */\n    static class Entry&lt;K extends Comparable&lt;K&gt;, V&gt; {\n        /**\n         * key\n         */\n        K key;\n        /**\n         * value\n         */\n        V value;\n        /**\n         * \u53f3\u5b50\u8282\u70b9\u6307\u9488\uff0c\u5373\u5927\u4e8e key \u7684\u5b50\u6811\n         */\n        BTNode&lt;K, V&gt; pointer;\n\n        public Entry(K key, V value) {\n            this.key = key;\n            this.value = value;\n            pointer = null;\n        }\n\n        @Override\n        public String toString() {\n            return \"{\" + key + \" : \" + value + \"}\";\n        }\n    }\n\n}\n</code></pre>"},{"location":"ch05_tree/binary_index_tree/","title":"\u6811\u72b6\u6570\u7ec4","text":""},{"location":"ch05_tree/binary_index_tree/#_2","title":"\u4e00\u3001\u4ec0\u4e48\u662f\u6811\u72b6\u6570\u7ec4","text":"<p>\u6811\u72b6\u6570\u7ec4\uff0c\u5176\u82f1\u6587\u662f <code>Binary Indexed Tree</code>\uff08\u7b80\u79f0 <code>BIT</code>\uff09\uff0c\u4e5f\u79f0\u4e3a \u4e8c\u53c9\u7d22\u5f15\u6811/\u4e8c\u53c9\u4e0b\u6807\u6811\u3002</p> <ul> <li>\u6811\u72b6\u6570\u7ec4\u867d\u7136\u540d\u79f0\u540e\u7f00\u662f\u6570\u7ec4\uff0c\u4f46\u5b9e\u9645\u4e0a\u662f\u4e00\u68f5\u7531\u6570\u7ec4\u5b9e\u73b0\u7684\u6811</li> </ul> <p>\u6700\u57fa\u672c\u7684\u6811\u72b6\u6570\u7ec4\u652f\u6301 2 \u79cd\u64cd\u4f5c\uff1a</p> <ul> <li>\u5355\u70b9\u4fee\u6539\uff1a\u66f4\u65b0\u6570\u7ec4 <code>nums</code> \u4e2d\u4efb\u610f\u5355\u4e2a\u5143\u7d20\u503c</li> <li>\u533a\u95f4\u67e5\u8be2\uff1a\u6c42\u6570\u7ec4 <code>nums</code> \u4e2d\u4efb\u610f\u533a\u95f4\u7684\u5143\u7d20\u548c</li> </ul> <p>\u5e76\u4e14\u5728\u590d\u6742\u5ea6\u4e0a\u80fd\u591f\u6ee1\u8db3\uff1a</p> <ul> <li>\u6811\u72b6\u6570\u7ec4\u5bf9\u4e8e\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f <code>O(logn)</code></li> </ul> <p>\u6bd4\u5982\u8bf4\uff0c\u6570\u7ec4 <code>[3, 2, 1, 3]</code>\uff0c\u5b83\u5bf9\u5e94\u7684\u6811\u72b6\u6570\u7ec4\u7ed3\u6784\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>  ___        ___        ___        ___\n | 3 |      | 5 |      | 1 |      | 9 |            -- \u6811\u72b6\u6570\u7ec4\n\n                                   ___\n                                  | 9 |\n                                /   |\n                            /      /|\n                        /         / |\n                    /            /  |\n                /               /   |\n             ___               /    |\n            | 5 |             /     |\n             /|              /      |\n          /   |             /       |\n       /      |            /        |\n    /         |           /         |\n  ___        ___        ___        ___\n | 3 |      | 2 |      | 1 |      | 3 |            -- \u6811\u72b6\u7ed3\u6784\n</code></pre> <p>\u6811\u72b6\u6570\u7ec4\u662f\u4e00\u79cd\u4e13\u95e8\u7528\u4e8e\u9ad8\u6548\u8ba1\u7b97\u524d\u7f00\u548c\u3001\u533a\u95f4\u548c\u6570\u636e\u7ed3\u6784\u3002</p>"},{"location":"ch05_tree/binary_index_tree/#_3","title":"\u4e8c\u3001\u4e3a\u4ec0\u4e48\u7528\u6811\u72b6\u6570\u7ec4\uff1f","text":""},{"location":"ch05_tree/binary_index_tree/#21","title":"2.1 \u80cc\u666f\u5f15\u5165","text":"<p>\u4e8b\u9879\u8bf4\u660e\uff1a\u4e0b\u9762\u7684\u6240\u6709\u6570\u7ec4\u533a\u95f4\u8bbe\u5b9a\u4e0d\u662f [0, n - 1]\uff0c\u800c\u662f [1, n]</p> <p>\u4e00\u5f00\u59cb\u7684\u95ee\u9898\u662f\u9700\u8981\u5b9e\u73b0 2 \u79cd\u64cd\u4f5c\uff1a</p> <ul> <li>\u5355\u70b9\u4fee\u6539\uff1a\u66f4\u65b0\u6570\u7ec4 <code>nums</code> \u4e2d\u4efb\u610f\u5355\u4e2a\u5143\u7d20\u503c</li> <li>\u533a\u95f4\u67e5\u8be2\uff1a\u6c42\u6570\u7ec4 <code>nums</code> \u4e2d\u4efb\u610f\u533a\u95f4\u7684\u5143\u7d20\u548c</li> </ul> <p>\u8981\u540c\u65f6\u5b9e\u73b0\u8fd9 2 \u79cd\u64cd\u4f5c\uff0c\u6709 2 \u79cd\u529e\u6cd5\uff1a</p> <ul> <li>\u666e\u901a\u6570\u7ec4\uff1a<code>nums[i]</code> \u5355\u70b9\u4fee\u6539\uff1b<code>sum(nums[i])</code> \u533a\u95f4\u67e5\u8be2</li> <li>\u524d\u7f00\u548c\u6570\u7ec4\uff1a<code>sum(ps[i])</code> \u5355\u70b9\u4fee\u6539\uff1b<code>ps[i]</code> \u533a\u95f4\u67e5\u8be2</li> </ul> <p>\u6bd4\u5982\u8bf4\uff0c\u666e\u901a\u6570\u7ec4\u548c\u524d\u7f00\u548c\u6570\u7ec4\u7684\u5b9e\u73b0\u5206\u522b\u662f\uff1a</p> <p>(1) \u666e\u901a\u6570\u7ec4\u5b9e\u73b0</p> <pre><code>// \u5355\u70b9\u4fee\u6539\nvoid update(int index, int val) {\n    nums[index] += val;\n}\n// \u533a\u95f4\u67e5\u8be2\nint query(int l, int r) {\n    int sum = 0;\n    for (int i = l; i &lt;= r; i++) {\n        sum += nums[i];\n    }\n    return sum;\n}\n</code></pre> <p>(2) \u524d\u7f00\u548c\u6570\u7ec4\u5b9e\u73b0</p> <pre><code>// \u5355\u70b9\u4fee\u6539\nvoid update(int index, int val) {\n    for (int i = index; i &lt; n; i++) {\n        ps[i] += val;\n    }\n}\n// \u533a\u95f4\u67e5\u8be2\nint query(int l, int r) {\n    if (l == 0) {\n        return ps[r];\n    }\n    return ps[r] - ps[l - 1];\n}\n</code></pre> <p>\u4e24\u79cd\u65b9\u5f0f\u90fd\u80fd\u5b9e\u73b0\uff0c\u7136\u540e\u5b83\u4eec\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u522b\u662f\uff1a</p> \u65f6\u95f4\u590d\u6742\u5ea6 \u5355\u70b9\u4fee\u6539 \u533a\u95f4\u67e5\u8be2 \u666e\u901a\u6570\u7ec4 <code>O(1)</code> <code>O(n)</code> \u524d\u7f00\u548c\u6570\u7ec4 <code>O(n)</code> <code>O(1)</code> <p>\u4e0d\u7ba1\u54ea\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u603b\u6709\u4e00\u79cd\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a <code>O(n)</code>\u3002</p> <p><code>O(n)</code> \u8fd8\u662f\u6bd4\u8f83\u6162\u7684\uff0c\u8fd8\u6709\u5176\u4ed6\u529e\u6cd5\u53ef\u4ee5\u4f18\u5316\u5417\uff1f</p>"},{"location":"ch05_tree/binary_index_tree/#22","title":"2.2 \u95ee\u9898\u5206\u6790","text":"<p>\u5206\u6790\u524d\uff0c\u5148\u770b\u4e00\u4e0b\u666e\u901a\u6570\u7ec4\u548c\u524d\u7f00\u548c\u6570\u7ec4\u7684\u533a\u95f4\u60c5\u51b5\u3002</p> <p>\u666e\u901a\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u533a\u95f4\uff1a</p> <pre><code>  ___        ___        ___        ___\n |1,1|      |2,2|      |3,3|      |4,4|    -- \u533a\u95f4\n------------------------------------------------------------------\n  ___        ___        ___        ___\n | 3 |      | 2 |      | 1 |      | 3 |    -- \u539f\u59cb\u6570\u7ec4\n\n   1          2          3          4      -- \u533a\u95f4\u7d22\u5f15\n</code></pre> <p>\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6267\u884c\u533a\u95f4\u67e5\u8be2\uff0c\u9700\u8981\u5c06\u591a\u4e2a\u533a\u95f4\u5408\u5e76\u8d77\u6765\u3002</p> <p>\u6240\u4ee5\u666e\u901a\u6570\u7ec4\u533a\u95f4\u67e5\u8be2\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a <code>O(n)</code> \u7684\u539f\u56e0\u662f\uff1a</p> <ul> <li>\u533a\u95f4\u8303\u56f4\u592a\u5c0f\uff0c\u533a\u95f4\u8f83\u591a\uff0c\u5408\u5e76\u533a\u95f4\u6bd4\u8f83\u6162</li> </ul> <p>\u524d\u7f00\u548c\u6570\u7ec4\u7684\u533a\u95f4\u662f\u8fde\u7eed\u5143\u7d20\u533a\u95f4\uff1a</p> <pre><code>  ____________________________________\n |1,                                 4|    -- \u533a\u95f4\n  _________________________\n |1,                      3|               -- \u533a\u95f4\n  ______________\n |1,           2|                          -- \u533a\u95f4\n  ___\n |1,1|                                     -- \u533a\u95f4\n------------------------------------------------------------------\n  ___        ___        ___        ___\n | 3 |      | 5 |      | 6 |      | 9 |    -- \u524d\u7f00\u548c\u6570\u7ec4\n  ___        ___        ___        ___\n | 3 |      | 2 |      | 1 |      | 3 |    -- \u539f\u59cb\u6570\u7ec4\n\n   1          2          3          4      -- \u533a\u95f4\u7d22\u5f15\n</code></pre> <p>\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6267\u884c\u5355\u70b9\u4fee\u6539\uff0c\u591a\u4e2a\u533a\u95f4\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u9700\u8981\u540c\u65f6\u4fee\u6539\u3002</p> <p>\u6240\u4ee5\uff0c\u524d\u7f00\u548c\u6570\u7ec4\u5355\u70b9\u4fee\u6539\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a <code>O(n)</code> \u7684\u539f\u56e0\u662f\uff1a</p> <ul> <li>\u5355\u4e2a\u5143\u7d20\u5f71\u54cd\u4e86\u592a\u591a\u533a\u95f4\uff0c\u5bfc\u81f4\u533a\u95f4\u90fd\u8981\u4fee\u6539</li> </ul> <p>\u8981\u662f\u80fd\u80fd\u89e3\u51b3\u8fd9 2 \u4e2a\u95ee\u9898\uff0c\u7406\u8bba\u4e0a\u5c31\u80fd\u4f18\u5316\u6389 <code>O(n)</code> \u7684\u590d\u6742\u5ea6\u3002</p>"},{"location":"ch05_tree/binary_index_tree/#23","title":"2.3 \u533a\u95f4\u5212\u5206","text":"<p>\u533a\u95f4\u592a\u79bb\u6563\uff0c\u6216\u8005\u533a\u95f4\u592a\u8fde\u7eed\uff0c\u90fd\u4f1a\u51fa\u73b0 <code>O(n)</code> \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p> <p>\u90a3\u4e48\u662f\u5426\u53ef\u4ee5\u5c40\u90e8\u5efa\u7acb\u533a\u95f4\uff1f\u4e0d\u81f3\u4e8e\u592a\u6563\uff0c\u4e5f\u4e0d\u4f1a\u5f88\u8fde\u7eed\u3002</p> <p>\u6bd4\u5982\u8bf4\u76f8\u90bb\u533a\u95f4\u4e24\u4e24\u5408\u5e76\uff0c\u5c42\u5c42\u53e0\u52a0\u8d77\u6765\uff0c\u6700\u7ec8\u5f62\u6210\u4e00\u68f5\u4e8c\u53c9\u6811\uff1a</p> <pre><code>  _______________________________________\n |                   9                   |    -- \u533a\u95f4(0,4]\n  _______________         _______________        \n |       5       |       |       4       |    -- \u533a\u95f4(0,2]\u548c(2,4]\n  ___         ___         ___         ___\n | 3 |       | 2 |       | 1 |       | 3 |    -- \u533a\u95f4(i-1,i]\n------------------------------------------------------------------\n  ___         ___         ___         ___\n | 3 |       | 2 |       | 1 |       | 3 |    -- \u539f\u59cb\u6570\u7ec4\n\n   1           2           3           4      -- \u533a\u95f4\u7d22\u5f15\n</code></pre> <p>\u8fd9\u6837\u7684\u8bdd\uff0c\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5982\u4f55\u4e86\uff1f</p> <p>(1) \u5355\u70b9\u4fee\u6539</p> <p>\u6bd4\u5982\u4fee\u6539\u5143\u7d20 <code>2</code>\uff0c\u6539\u6210 <code>1</code>\uff0c\u90a3\u4e48\u66f4\u65b0\u7684\u533a\u95f4\uff08\u4e8c\u53c9\u6811\u4ece\u4e0b\u5f80\u4e0a\uff09\u5305\u62ec\uff1a</p> <ol> <li><code>(1,2]</code>\uff1a<code>2 -&gt; 1</code></li> <li><code>(0,2]</code>\uff1a<code>5 -&gt; 4</code></li> <li><code>(0,4]</code>\uff1a<code>9 -&gt; 8</code></li> </ol> <p>\u66f4\u65b0\u7684\u533a\u95f4\u6570\u91cf\u5c31\u662f\u6811\u7684\u9ad8\u5ea6 h\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f <code>O(logn)</code>\u3002</p> <p>(2) \u533a\u95f4\u67e5\u8be2</p> <p>\u6bd4\u5982\u67e5\u8be2\u533a\u95f4 <code>[2,3]</code>\uff0c\u90a3\u4e48\u5b83\u67e5\u8be2\u8fc7\u7a0b\uff08\u4e8c\u53c9\u6811\u4ece\u4e0a\u5f80\u4e0b\uff09\u5305\u62ec\uff1a</p> <ol> <li><code>(0,4]</code></li> <li><code>(0,2]</code> \u548c <code>(2,4]</code></li> <li><code>(1,2]</code> \u548c <code>(2,3]</code></li> </ol> <p>\u67e5\u8be2\u7684\u533a\u95f4\u6570\u91cf\u4e5f\u662f\u6811\u7684\u9ad8\u5ea6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f <code>O(logn)</code>\u3002</p> <p>\u5229\u7528\u8fd9\u79cd\u4e8c\u53c9\u6811\u7684\u533a\u95f4\u5212\u5206\u7ed3\u6784\uff0c\u786e\u5b9e\u53ef\u4ee5\u505a\u5230\uff1a</p> <ul> <li>\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f <code>O(logn)</code></li> </ul> <p>\u4e0d\u8fc7\u8fd9\u5b9e\u9645\u4e0a\u662f\u5229\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u5f97\u5230\u7684\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u53d8\u6210\u4e86 <code>O(n)</code>\u3002</p>"},{"location":"ch05_tree/binary_index_tree/#24","title":"2.4 \u7ed3\u6784\u4f18\u5316","text":"<p>\u4e3a\u4e86\u8fbe\u5230 <code>O(logn)</code> \u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u9700\u8981\u8017\u8d39 <code>O(n)</code> \u7a7a\u95f4\u5efa\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u6709\u70b9\u9ebb\u70e6\u3002</p> <p>\u8fd8\u6709\u6ca1\u6709\u5176\u4ed6\u529e\u6cd5\u53ef\u4ee5\u4f18\u5316\uff1f\u5c1d\u8bd5\u4e00\u4e0b\u4e8c\u53c9\u6811\u526a\u679d\uff1f</p> <ul> <li>\u53ef\u4ee5\u91c7\u7528\u524d\u7f00\u548c\u5dee\u7684\u601d\u8def\uff0c\u6765\u526a\u6389\u4e8c\u53c9\u6811\u4e2d\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u8282\u70b9</li> </ul> <p>\u6bd4\u5982\uff0c\u533a\u95f4 <code>[2,3]</code> \u5b9e\u9645\u4e0a\u662f\u533a\u95f4 <code>(0,3] - (0,1]</code> \u5f97\u5230\u7684\u3002</p> <p>\u518d\u770b\u4e0a\u9762\u7684\u4e8c\u53c9\u6811\u7ed3\u6784\uff1a</p> <pre><code>  _______________________________________\n |                   9                   |    -- \u533a\u95f4(0,4]\n  _______________         _______________        \n |       5       |       |       4       |    -- \u533a\u95f4(0,2]\u548c(2,4]\n  ___         ___         ___         ___\n | 3 |       | 2 |       | 1 |       | 3 |    -- \u533a\u95f4(i-1,i]\n------------------------------------------------------------------\n  ___         ___         ___         ___\n | 3 |       | 2 |       | 1 |       | 3 |    -- \u539f\u59cb\u6570\u7ec4\n\n   1           2           3           4      -- \u533a\u95f4\u7d22\u5f15\n</code></pre> <p>\u8003\u8651\u5229\u7528\u524d\u7f00\u548c\u5dee\u7684\u63a8\u65ad\u65b9\u5f0f\uff0c\u53ef\u4ee5\u6709\uff1a</p> <ul> <li>\u533a\u95f4 <code>(1,2]</code> \u53ef\u4ee5\u7531\u533a\u95f4 <code>(0,2] - (0,1]</code> \u5f97\u5230</li> <li>\u533a\u95f4 <code>(3,4]</code> \u53ef\u4ee5\u7531\u533a\u95f4 <code>(2,4] - (2,3]</code> \u5f97\u5230</li> </ul> <p>\u90a3\u4e48\u533a\u95f4 <code>(1,2]</code> \u548c \u533a\u95f4 <code>(3,4]</code> \u8fd9 2 \u4e2a\u8282\u70b9\u5176\u5b9e\u53ef\u4ee5\u53bb\u6389\uff1a</p> <pre><code>  _______________________________________\n |                   9                   |    -- \u533a\u95f4(0,4]\n  _______________         _______________        \n |       5       |       |       4       |    -- \u533a\u95f4(0,2]\u548c(2,4]\n  ___                     ___\n | 3 |                   | 1 |                -- \u533a\u95f4(i-1,i]\n------------------------------------------------------------------\n  ___         ___         ___         ___\n | 3 |       | 2 |       | 1 |       | 3 |    -- \u539f\u59cb\u6570\u7ec4\n\n   1           2           3           4      -- \u533a\u95f4\u7d22\u5f15       \n</code></pre> <p>\u540c\u7406\uff0c<code>(2,4]</code> \u53ef\u4ee5\u7531\u533a\u95f4 <code>(0,4] - (0,2]</code> \u5f97\u5230\uff1a</p> <pre><code>  _______________________________________\n |                   9                   |    -- \u533a\u95f4(0,4]\n  _______________      \n |       5       |                            -- \u533a\u95f4(0,2]\n  ___                     ___\n | 3 |                   | 1 |                -- \u533a\u95f4(i-1,i]\n------------------------------------------------------------------\n  ___         ___         ___         ___\n | 3 |       | 2 |       | 1 |       | 3 |    -- \u539f\u59cb\u6570\u7ec4\n\n   1           2           3           4      -- \u533a\u95f4\u7d22\u5f15       \n</code></pre> <p>\u5220\u9664\u6389\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u533a\u95f4\u8282\u70b9\u540e\uff0c\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6570\u91cf\u5c31\u5c11\u4e86\u5f88\u591a\u3002</p> <p>\u6b64\u65f6\u518d\u8c03\u6574\u4e00\u4e0b\u56fe\u5f62\uff0c\u6539\u6210\u8fd9\u6837\u5b50\uff085 \u548c 9 \u7684\u4f4d\u7f6e\u79fb\u52a8\u4e86\u4e00\u4e0b\uff09\uff1a</p> <pre><code>  _______________________________________\n |                                     9 |    -- \u533a\u95f4(0,4]\n  _______________      \n |             5 |                            -- \u533a\u95f4(0,2]\n  ___                     ___\n | 3 |                   | 1 |                -- \u533a\u95f4(i-1,i]\n------------------------------------------------------------------\n  ___         ___         ___         ___\n | 3 |       | 2 |       | 1 |       | 3 |    -- \u539f\u59cb\u6570\u7ec4\n\n   1           2           3           4      -- \u533a\u95f4\u7d22\u5f15       \n</code></pre> <p>\u518d\u628a\u533a\u95f4\u8282\u70b9\u503c\u90fd\u6536\u96c6\u8d77\u6765\uff0c\u53d1\u73b0\u5269\u4f59\u8282\u70b9\uff0c\u521a\u597d\u80fd\u51d1\u6210\u4e00\u4e2a\u5927\u5c0f\u4e3a n \u7684\u6570\u7ec4\uff1a</p> <pre><code>  _______________________________________\n |                                     9 |    -- \u533a\u95f4(0,4]\n  _______________      \n |             5 |                            -- \u533a\u95f4(0,2]\n  ___                     ___\n | 3 |                   | 1 |                -- \u533a\u95f4(i-1,i]\n------------------------------------------------------------------\n  ___         ___         ___         ___\n | 3 |       | 5 |       | 1 |       | 9 |    -- \u6811\u72b6\u6570\u7ec4\n  ___         ___         ___         ___\n | 3 |       | 2 |       | 1 |       | 3 |    -- \u539f\u59cb\u6570\u7ec4\n\n   1           2           3           4      -- \u533a\u95f4\u7d22\u5f15       \n</code></pre> <p>\u8fd9\u4e2a\u5f97\u5230\u7684\u6570\u7ec4 <code>[3, 5, 1, 9]</code> \u5c31\u662f\u6811\u72b6\u6570\u7ec4\u3002</p> <ul> <li>\u6811\u72b6\u6570\u7ec4\u867d\u7136\u662f\u4e00\u4e2a\u6570\u7ec4\u5f62\u5f0f\uff0c\u4f46\u5b9e\u9645\u4e0a\u8868\u793a\u7684\u662f\u4e00\u68f5\u7ecf\u8fc7\u526a\u679d\u7684\u4e8c\u53c9\u6811</li> </ul> <p>\u901a\u8fc7\u524d\u7f00\u548c\u5dee\u526a\u679d\u7684\u65b9\u5f0f\uff0c\u5c06\u4e8c\u53c9\u6811\u7ed3\u6784\u53d8\u6210\u4e86\u6570\u7ec4\uff0c\u7ed3\u6784\u7b80\u5355\u591a\u4e86\u3002</p>"},{"location":"ch05_tree/binary_index_tree/#_4","title":"\u4e09\u3001\u5982\u4f55\u5b9e\u73b0\u6811\u72b6\u6570\u7ec4\uff1f","text":""},{"location":"ch05_tree/binary_index_tree/#31","title":"3.1 \u4e0d\u4f9d\u8d56\u4e8e\u6570\u503c","text":"<p>\u5728\u4e0a\u9762\u7684\u6784\u5efa\u4e8c\u53c9\u6811\u4e2d\uff0c\u5e76\u6ca1\u6709\u7528\u5230\u6570\u7ec4\u6570\u636e\uff0c\u56e0\u6b64\uff1a</p> <ul> <li>\u6811\u72b6\u7ed3\u6784\u4e0d\u4f9d\u8d56\u4e8e\u5177\u4f53\u7684\u6570\u636e\uff0c\u53ea\u548c\u6570\u636e\u91cf\u6709\u5173</li> </ul> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u7ba1\u6570\u7ec4\u5185\u7684\u6570\u636e\u5982\u4f55\uff0c\u5927\u5c0f\u4e00\u6837\u7684\u6570\u7ec4\u5efa\u7acb\u8d77\u6765\u7684\u6811\u72b6\u7ed3\u6784\u4e00\u5b9a\u662f\u4e00\u6837\u7684\u3002</p> <p>\u6bd4\u5982\u8bf4\uff0c\u6570\u7ec4\u5927\u5c0f\u4e3a 9 \u7684\u6811\u72b6\u7ed3\u6784\u80af\u5b9a\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>  _______________________________\n |                             8 |\n  _______________\n |             4 |\n  _______         _______ \n |     2 |       |     6 |\n  ___     ___     ___     ___     ___\n | 1 |   | 3 |   | 5 |   | 7 |   | 9 |  -- \u6811\u72b6\u7ed3\u6784\n\n  ___ ___ ___ ___ ___ ___ ___ ___ ___\n |   |   |   |   |   |   |   |   |   |  -- \u539f\u59cb\u6570\u7ec4\n\n   1   2   3   4   5   6   7   8   9    -- \u7d22\u5f15\u4e0b\u6807\n</code></pre> <p>\u6ce8\u610f\uff0c\u8fd9\u91cc\u9762\u6811\u72b6\u7ed3\u6784\u4e2d\u7684\u6570\u5b57\u5206\u522b\u662f\u6811\u72b6\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\uff0c\u5e76\u4e0d\u662f\u503c\u3002</p> <p>\u6240\u4ee5\uff0c\u73b0\u5728\u53ea\u8981\u77e5\u9053\u6811\u72b6\u6570\u7ec4\u4e2d\uff0c\u6bcf\u4e2a\u4e0b\u6807\u7684\u5bf9\u5e94\u7684\u662f\u4e8c\u53c9\u6811\u4e2d\u7684\u4ec0\u4e48\u8282\u70b9\u5373\u53ef\u3002</p>"},{"location":"ch05_tree/binary_index_tree/#32","title":"3.2 \u4ece\u5de6\u5f80\u53f3\u4e24\u4e24\u5411\u4e0a\u5408\u5e76","text":"<p>\u4ed4\u7ec6\u770b\u6811\u72b6\u7ed3\u6784\uff0c\u5c31\u4f1a\u53d1\u73b0\uff1a</p> <ul> <li>\u6811\u72b6\u7ed3\u6784\u7684\u8282\u70b9\u662f\u4ece\u5de6\u5f80\u53f3\uff0c\u76f8\u90bb\u8282\u70b9\u4e24\u4e24\u5411\u4e0a\u5408\u5e76</li> </ul> <p>\u6bd4\u5982\u6570\u7ec4\u5927\u5c0f\u4e3a 9\uff0c\u8282\u70b9\u4ece\u5de6\u5230\u53f3\u4e24\u4e24\u5411\u4e0a\u5408\u5e76\u7684\u6548\u679c\u5c31\u662f\uff1a</p> <pre><code>              8       -- 3\u5c42\n      4       8       -- 2\u5c42\n  2   4   6   8       -- 1\u5c42\n1 2 3 4 5 6 7 8 9     -- 0\u5c42\n</code></pre> <p>\u5176\u4e2d\uff0c</p> <ul> <li>\u8282\u70b9 1 \u548c 2 \u5411\u4e0a\u5408\u5e76\uff0c\u5f97\u5230\u7236\u8282\u70b9 2</li> <li>\u8282\u70b9 3 \u548c 4 \u5411\u4e0a\u5408\u5e76\uff0c\u5f97\u5230\u7236\u8282\u70b9 4</li> <li>...</li> <li>\u8282\u70b9 2 \u548c 4 \u5411\u4e0a\u5408\u5e76\uff0c\u5f97\u5230\u7236\u8282\u70b9 4</li> </ul> <p>\u6811\u72b6\u7ed3\u6784\u5c31\u662f\u8fd9\u6837\u4ece\u5de6\u5f80\u53f3\uff0c\u8282\u70b9\u4e24\u4e24\u5411\u4e0a\u5408\u5e76\u5efa\u8d77\u6765\u7684\u3002</p>"},{"location":"ch05_tree/binary_index_tree/#33","title":"3.3 \u5355\u70b9\u4fee\u6539","text":"<p>\u6811\u72b6\u7ed3\u6784\u7684\u5355\u70b9\u4fee\u6539\uff0c\u9700\u8981\u4ece\u4e0b\u5f80\u4e0a\u66f4\u65b0\u6811\u8282\u70b9\uff0c\u6240\u4ee5\u8981\u77e5\u9053\u5b50\u8282\u70b9\u5bf9\u5e94\u7684\u7236\u8282\u70b9\u3002</p> <p>\u4e3a\u4e86\u65b9\u4fbf\u5206\u6790\u7236\u8282\u70b9\u7684\u4f4d\u7f6e\uff0c\u9996\u5148\u7ed9\u51fa\u4e00\u4e2a\u5927\u5c0f\u4e3a 18 \u7684\u6811\u72b6\u6570\u7ec4\uff1a</p> <pre><code>                                    16           -- 4\u5c42\n              8                     16           -- 3\u5c42\n      4       8         12          16           -- 2\u5c42\n  2   4   6   8   10    12    14    16    18     -- 1\u5c42\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18     -- 0\u5c42\n</code></pre> <p>\u5176\u4e2d\uff0c\u91cc\u9762\u7684\u6570\u5b57\u8868\u793a\u7684\u662f\u4e0b\u6807\uff08\u6ce8\u610f\u4e0d\u662f\u503c\uff09\uff1a</p> <ul> <li>2 \u662f 1 \u7236\u8282\u70b9</li> <li>4 \u662f 2\u30013 \u7684\u7236\u8282\u70b9</li> <li>8 \u662f 4\u30016\u30017 \u7684\u7236\u8282\u70b9</li> <li>16 \u662f 8\u300112\u300114\u300115 \u7684\u7236\u8282\u70b9</li> </ul> <p>\u89c2\u5bdf\u6bcf\u4e00\u5c42\u7684\u8282\u70b9\uff0c\u53ef\u4ee5\u770b\u5230\uff1a</p> <ul> <li>\u4e0a\u4e00\u5c42\u90fd\u662f\u4ece\u4e0b\u4e00\u5c42\u8282\u70b9\u4e2d\uff0c\u6309 2 \u53d6 1 \u7684\u65b9\u5f0f\u83b7\u53d6</li> </ul> <p>\u56e0\u6b64\uff0c\u53ef\u4ee5\u77e5\u9053\u6bcf\u5c42\u7684\u8282\u70b9\u89c4\u5f8b\uff1a</p> <ul> <li>0\u5c42\uff1a\u8d77\u59cb\u4e0b\u6807 <code>2^0</code>\uff0c\u95f4\u9694 <code>2^0</code></li> <li>1\u5c42\uff1a\u8d77\u59cb\u4e0b\u6807 <code>2^1</code>\uff0c\u95f4\u9694 <code>2^1</code></li> <li>2\u5c42\uff1a\u8d77\u59cb\u4e0b\u6807 <code>2^2</code>\uff0c\u95f4\u9694 <code>2^2</code></li> <li>3\u5c42\uff1a\u8d77\u59cb\u4e0b\u6807 <code>2^3</code>\uff0c\u95f4\u9694 <code>2^3</code></li> <li>...</li> <li>k\u5c42\uff1a\u8d77\u59cb\u4e0b\u6807 <code>2^k</code>\uff0c\u95f4\u9694 <code>2^k</code></li> </ul> <p>\u56e0\u4e3a\u662f\u6bcf\u9694 1 \u4e2a\u8282\u70b9\u4f5c\u4e3a\u4e0a\u4e00\u5c42\u8282\u70b9\uff0c\u6240\u4ee5\u53ef\u4ee5\u603b\u7ed3\u51fa\uff1a</p> <ul> <li>\u7236\u8282\u70b9\u4e0b\u6807 = \u7b49\u4e8e\u5f53\u524d\u8282\u70b9\u4e0b\u6807 + \u8282\u70b9\u6240\u5728\u5c42\u7ea7\u7684\u95f4\u9694</li> </ul> <p>\u6240\u4ee5\u627e\u7236\u8282\u70b9\u7684\u4e0b\u6807\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a</p> <ul> <li>\u627e\u5230\u5f53\u524d\u8282\u70b9\u6240\u5728\u5c42\u7ea7 k</li> <li>\u7236\u8282\u70b9\u4e0b\u6807 = \u5f53\u524d\u8282\u70b9\u7684\u4e0b\u6807 + <code>2^k</code></li> </ul> <p>\u6bd4\u5982\u8bf4\uff1a</p> <ul> <li>5 \u6240\u5728\u5c42\u7ea7\u662f 0\uff0c\u7236\u8282\u70b9\u4e0b\u6807 = <code>5 + 2^0</code> = 6</li> <li>12 \u6240\u5728\u5c42\u7ea7\u662f 2\uff0c\u7236\u8282\u70b9\u4e0b\u6807 = <code>12 + 2^2</code> = 16</li> </ul> <p>\u4e0d\u8fc7\u8fd9\u91cc\u9762\u7684\u5f53\u524d\u8282\u70b9\u6240\u5728\u5c42\u7ea7\u5982\u4f55\u8ba1\u7b97\uff1f</p> <ul> <li>\u8282\u70b9\u5c42\u7ea7\uff0c\u7b49\u4e8e\u5f53\u524d\u7d22\u5f15\u503c\u7684\u56e0\u6570\u4e2d 2 \u7684\u6570\u91cf</li> </ul> <p>\u6bd4\u5982\u8bf4\uff1a</p> <ul> <li><code>5 = 5</code>\uff0c2 \u7684\u6570\u91cf\u6709 0 \u4e2a\uff0c\u6240\u4ee5\u5c42\u7ea7\u662f 0</li> <li><code>12 = 2*2*3</code>\uff0c2 \u7684\u6570\u91cf\u6709 2 \u4e2a\uff0c\u6240\u4ee5\u662f\u5c42\u7ea7 2</li> </ul> <p>\u8fd9\u6837\u5c31\u80fd\u7b97\u51fa\u7236\u8282\u70b9\u7684\u4e0b\u6807\u4e86\uff0c\u5c31\u53ef\u4ee5\u4e0d\u65ad\u5f80\u4e0a\u66f4\u65b0\u7236\u8282\u70b9\u4e86\u3002</p> <p>\u6240\u4ee5\u5355\u70b9\u4fee\u6539\u7684\u4ee3\u7801\u6700\u7ec8\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>// \u5355\u70b9\u4fee\u6539\nvoid update(int index, int val) {\n    if (index &lt; 0 || index &gt;= n) {\n        return;\n    }\n\n    // \u66f4\u65b0\u5f53\u524d\u8282\u70b9\n    tree[index] += val;\n    // \u7236\u8282\u70b9\u4e0b\u6807\n    int p = nextP(index);\n    // \u5f80\u4e0a\u66f4\u65b0\u7236\u8282\u70b9\n    update(p, val);\n}\n\n// \u8ba1\u7b97\u7236\u8282\u70b9\u7684\u4e0b\u6807\nint nextP(int index) {\n    // \u5f53\u524d\u5c42\u7ea7\n    int k = level(index);\n    // \u5c42\u7ea7\u95f4\u9694 2^k\n    int g = gap(k);\n    // \u7236\u8282\u70b9\u4e0b\u6807\n    int p = index + g;\n    return p;\n}\n\n// \u8ba1\u7b97\u5f53\u524d\u5c42\u7ea7\nint level(int index) {\n    int k = 0;\n    while (index % 2 == 0) {\n        index &gt;&gt;= 1;\n        k++;\n    }\n    return l;\n}\n\n// \u8ba1\u7b97\u5c42\u7ea7\u95f4\u9694\nint gap(int k) {\n    int g = 1;\n    while (k &gt; 0) {\n        gap &lt;&lt;= 1;\n        k--;\n    }\n    return g;\n}\n</code></pre> <p>\u6811\u72b6\u7ed3\u6784\u7684\u8282\u70b9\u53d6\u7684\u5f88\u6709\u89c4\u5f8b\uff0c\u6240\u4ee5\u5f88\u5bb9\u6613\u7b97\u51fa\u7236\u8282\u70b9\u7684\u4f4d\u7f6e\u3002</p>"},{"location":"ch05_tree/binary_index_tree/#34","title":"3.4 \u533a\u95f4\u67e5\u8be2","text":"<p>\u9996\u5148\u8bf4\u660e\uff0c\u533a\u95f4 <code>[l, r]</code> \u5b9e\u9645\u4e0a\u53ef\u4ee5\u901a\u8fc7\u524d\u7f00\u548c\u5dee\u6765\u8ba1\u7b97\uff1a</p> <ul> <li><code>[l, r] = (0, r] - (0, l - 1]</code></li> </ul> <p>\u6240\u4ee5\u53ea\u8981\u8ba1\u7b97\u51fa <code>(0, r]</code> \u548c <code>(0, l - 1]</code> \u7684\u503c\uff0c\u5c31\u80fd\u77e5\u9053\u4efb\u610f\u533a\u95f4\u548c\u4e86\u3002</p> <p>\u8fd8\u662f\u5927\u5c0f 18 \u7684\u6811\u72b6\u6570\u7ec4\u4e3a\u4f8b\uff1a</p> <pre><code>                                    16           -- 4\u5c42\n              8                     16           -- 3\u5c42\n      4       8         12          16           -- 2\u5c42\n  2   4   6   8   10    12    14    16    18     -- 1\u5c42\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18     -- 0\u5c42\n</code></pre> <p>\u5728\u6811\u72b6\u7ed3\u6784\u5b9a\u4e49\u4e2d\uff0c\u53ef\u4ee5\u77e5\u9053\uff1a</p> <ul> <li>\u9ad8\u5c42\u7ea7\u8282\u70b9 = \u5b83\u4e4b\u524d\u7684\u6240\u6709\u4f4e\u5c42\u7ea7\u8282\u70b9\u4e4b\u548c</li> </ul> <p>\u6bd4\u5982\u8bf4\uff1a</p> <ul> <li>8 \u8868\u793a\u7684\u662f (0, 8] \u7684\u533a\u95f4\u548c</li> <li>12 \u8868\u793a\u7684\u662f (8, 12] \u7684\u533a\u95f4\u548c\uff0c\u56e0\u4e3a 8 \u5c42\u7ea7\u6bd4 12 \u5927</li> </ul> <p>\u60f3\u8981\u8ba1\u7b97\u67d0\u4e2a\u8282\u70b9\u7684\u533a\u95f4\u548c\uff0c\u53ef\u4ee5\u901a\u8fc7\u524d\u9762\u7684\u9ad8\u5c42\u8282\u70b9\u5feb\u901f\u5f97\u5230\u7ed3\u679c\u3002</p> <p>\u6bd4\u5982\u8bf4\uff0c\u8981\u5bfb\u627e (0, 14] \u7684\u533a\u95f4\u548c\uff0c\u6309\u7167\u5c42\u7ea7\u53ef\u4ee5\u5206\u4e3a\u51e0\u90e8\u5206\uff1a</p> <ul> <li>(0, 8]</li> <li>(8, 12]</li> <li>(12, 14]</li> </ul> <p>\u8fd9\u51e0\u4e2a\u533a\u95f4\u52a0\u8d77\u6765\uff0c\u5b9e\u9645\u4e0a\u5c31\u7b49\u4e8e (0,14] \u7684\u533a\u95f4\u548c\u4e86\u3002</p> <ul> <li>\u53ea\u8981\u4e0d\u65ad\u5f80\u524d\u627e\u9ad8\u5c42\u7ea7\u8282\u70b9\uff0c\u7d2f\u52a0\u8d77\u6765\uff0c\u5c31\u80fd\u5f97\u5230\u533a\u95f4\u548c</li> </ul> <p>\u600e\u4e48\u5f80\u524d\u627e\u9ad8\u5c42\u7ea7\u8282\u70b9\u5462\uff1f\u501f\u9274\u5355\u70b9\u4fee\u6539\u7684\u8fc7\u7a0b\uff1a</p> <ul> <li>\u627e\u5230\u5f53\u524d\u8282\u70b9\u6240\u5728\u5c42\u7ea7 k</li> <li>\u524d\u9762\u7684\u9ad8\u5c42\u8282\u70b9\u4e0b\u6807 = \u5f53\u524d\u8282\u70b9\u7684\u4e0b\u6807 - <code>2^k</code></li> </ul> <p>\u6240\u4ee5\u533a\u95f4\u67e5\u8be2\u7684\u4ee3\u7801\u6700\u7ec8\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>// \u533a\u95f4\u67e5\u8be2\nint query(int l, int r) {\n    return query(r) - query(l - 1);\n}\n\n// \u533a\u95f4\u548c (0, index]\nvoid query(int index) {\n    if (index &lt; 0 || index &gt;= n) {\n        return 0;\n    }\n\n    int sum = 0;\n    // \u5f53\u524d\u8282\u70b9\u503c\n    sum += tree[index];\n    tree[index] += val;\n    // \u524d\u4e00\u4e2a\u9ad8\u5c42\u8282\u70b9\n    int p = prevP(index);\n    sum += query(p);\n    return sum;\n}\n\n// \u8ba1\u7b97\u524d\u4e00\u4e2a\u9ad8\u5c42\u8282\u70b9\u7684\u4e0b\u6807\nint prevP(int index) {\n    // \u5f53\u524d\u5c42\u7ea7\n    int k = level(index);\n    // \u5c42\u7ea7\u95f4\u9694 2^k\n    int g = gap(k);\n    // \u524d\u4e00\u4e2a\u9ad8\u5c42\u8282\u70b9\u4e0b\u6807\n    int p = index - g;\n    return p;\n}\n</code></pre>"},{"location":"ch05_tree/binary_index_tree/#35-lowbit","title":"3.5 lowbit \u7684\u5999\u7528","text":"<p>\u5728\u524d\u9762\u7684\u5904\u7406\u4e2d\uff0c\u5355\u70b9\u66f4\u65b0\u548c\u67e5\u8be2\u533a\u95f4\u7684\u8fc7\u7a0b\u5dee\u4e0d\u591a\uff1a</p> <ul> <li>\u5355\u70b9\u66f4\u65b0\uff0c\u4ece\u4e0b\u5f80\u4e0a\uff0c\u4ece\u5de6\u81f3\u53f3\uff0c\u5bfb\u627e\u9ad8\u5c42\u7ea7\u8282\u70b9</li> <li>\u533a\u95f4\u67e5\u8be2\uff0c\u4ece\u4e0b\u5f80\u4e0a\uff0c\u4ece\u53f3\u81f3\u5de6\uff0c\u5bfb\u627e\u9ad8\u5c42\u7ea7\u8282\u70b9</li> </ul> <p>\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\u90fd\u662f\u901a\u8fc7\u5f53\u524d\u5c42\u7ea7\u548c\u5c42\u7ea7\u95f4\u9694\u6765\u627e\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002</p> <p>\u7136\u800c\u5c42\u7ea7\u548c\u76f8\u90bb\u7684\u9ad8\u5c42\u8282\u70b9\u8ba1\u7b97\u6709\u70b9\u9ebb\u70e6\uff0c\u6709\u6ca1\u6709\u529e\u6cd5\u4f18\u5316\uff1f</p> <p>(1) \u5c42\u7ea7\u8ba1\u7b97</p> <pre><code>// \u8ba1\u7b97\u5f53\u524d\u5c42\u7ea7\nint level(int index) {\n    int k = 0;\n    while (index % 2 == 0) {\n        index &gt;&gt;= 1;\n        k++;\n    }\n    return l;\n}\n</code></pre> <p>\u8ba1\u7b97\u8fc7\u7a0b\u5c31\u662f\u4e0d\u65ad\u53bb\u5224\u65ad\u662f\u5426\u80fd\u5bf9 2 \u6574\u9664\uff0c\u5b9e\u9645\u4e0a\uff1a</p> <ul> <li>\u8ba1\u7b97\u5c42\u7ea7\u7684\u8fc7\u7a0b\uff0c\u7b49\u4e8e\u5728\u627e index \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u672b\u5c3e\u7684 0 \u7684\u6570\u91cf</li> </ul> <p>\u6bd4\u5982\u8bf4\uff0c12 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u662f <code>1100</code>\uff0c\u5bf9\u5b83\u4e0d\u65ad\u6574\u9664 2\uff1a</p> <pre><code>1100\n110\n11\n</code></pre> <p>\u6240\u4ee5\uff0c\u4e0d\u9700\u8981\u6574\u9664 2\uff0c\u800c\u662f\uff1a</p> <ul> <li>\u53ea\u8981\u77e5\u9053\u4e8c\u8fdb\u5236\u503c\u672b\u5c3e\u7684 0 \u6570\u91cf\uff0c\u5c31\u80fd\u76f4\u63a5\u77e5\u9053\u5c42\u7ea7\u4e86</li> </ul> <p>\u600e\u4e48\u8ba1\u7b97\u4e8c\u8fdb\u5236\u503c\u672b\u5c3e\u7684 0 \u6570\u91cf\uff1f</p> <p>\u53ef\u4ee5\u901a\u8fc7\u4f4d\u8fd0\u7b97\u6765\u5904\u7406\uff1a</p> <pre><code>// \u8ba1\u7b97\u5f53\u524d\u5c42\u7ea7\nint level(int index) {\n    int l = 0;\n    int m = index &amp; (-index);\n    while (m &gt; 1) {\n        m &gt;&gt;= 1;\n        l++;\n    }\n    return l;\n}\n</code></pre> <p>\u5176\u4e2d\uff0c<code>index &amp; (-index)</code> \u53ef\u4ee5\u4fdd\u7559\u4e8c\u8fdb\u5236\u503c\u5f97\u6700\u4f4e\u4f4d 1\u3002</p> <p>\u6bd4\u5982 12 \u7684\u5c31\u662f <code>1100 &amp; 0100 = 0100</code>\u3002</p> <p>(2) \u5c42\u7ea7\u95f4\u9694</p> <pre><code>// \u8ba1\u7b97\u5c42\u7ea7\u95f4\u9694\nint gap(int k) {\n    int g = 1;\n    while (k &gt; 0) {\n        gap &lt;&lt;= 1;\n        k--;\n    }\n    return g;\n}\n</code></pre> <p>\u5b9e\u9645\u4e0a\uff0c\u8ba1\u7b97\u5c42\u7ea7\u95f4\u9694\u7684\u8fc7\u7a0b\u5c31\u662f\u8ba1\u7b97\u5c42\u7ea7\u7684\u53cd\u8fc7\u7a0b\uff1a</p> <ul> <li>\u8ba1\u7b97\u5c42\u7ea7\uff0c\u4e00\u76f4\u6574\u9664 2</li> <li>\u8ba1\u7b97\u95f4\u9694\uff0c\u4e00\u76f4\u4e58\u4ee5 2</li> </ul> <p>\u5982\u679c\u628a <code>level(index)</code> \u548c <code>gap(k)</code> \u5408\u5e76\u8d77\u6765 <code>gap(index)</code>\u3002</p> <p>\u5c31\u4f1a\u53d1\u73b0\uff0c\u4e24\u8005\u7684\u4f4d\u79fb\u52a8\u4f1a\u4e92\u76f8\u62b5\u6d88\u6389\uff0c\u6700\u7ec8\uff1a</p> <pre><code>// \u8ba1\u7b97\u5c42\u7ea7\u95f4\u9694\nint gap(int index) {\n    return index &amp; (-index);\n}\n</code></pre> <p>\u5c42\u7ea7\u95f4\u9694\uff0c\u5c31\u7b49\u4e8e\u4e0b\u6807\u7684 <code>index &amp; (-index)</code> \u4f4d\u8fd0\u7b97\u7ed3\u679c\u3002</p> <p>\u6240\u4ee5\u6700\u7ec8\u83b7\u53d6\u76f8\u90bb\u9ad8\u5c42\u7ea7\u8282\u70b9\u7684\u4ee3\u7801\u5c31\u53d8\u6210\u8fd9\u6837\u4e86\uff1a</p> <pre><code>// \u8ba1\u7b97\u540e\u4e00\u4e2a\u9ad8\u5c42\u8282\u70b9\u7684\u4e0b\u6807\nint nextP(int index) {\n    // \u5c42\u7ea7\u95f4\u9694 2^k \n    int g = gap(index);\n    // \u7236\u8282\u70b9\u4e0b\u6807\n    return index + g;\n}\n\n\n// \u8ba1\u7b97\u524d\u4e00\u4e2a\u9ad8\u5c42\u8282\u70b9\u7684\u4e0b\u6807\nint prevP(int index) {\n    // \u5c42\u7ea7\u95f4\u9694 2^k\n    int g = gap(index);\n    // \u524d\u4e00\u4e2a\u9ad8\u5c42\u8282\u70b9\u4e0b\u6807\n    return index - g;\n}\n\n// \u8ba1\u7b97\u5c42\u7ea7\u95f4\u9694\nint gap(int index) {\n    return index &amp; (-index);\n}\n</code></pre> <p>\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\uff0c<code>gap(index)</code> \u65b9\u6cd5\u4e00\u822c\u7528 <code>lowBit(index)</code> \u8868\u793a\u3002</p> <p>\u56e0\u4e3a <code>lowBit(index)</code> \u521a\u597d\u53d6\u7684\u662f <code>index</code> \u7684\u6700\u4f4e\u4f4d 1 \u7684\u7ed3\u679c\u3002</p>"},{"location":"ch05_tree/binary_index_tree/#_5","title":"\u603b\u7ed3","text":"<ul> <li>\u6811\u72b6\u6570\u7ec4\u7684\u5b58\u50a8\u5f62\u5f0f\u662f\u6570\u7ec4\uff0c\u4f46\u662f\u5b9e\u9645\u8868\u793a\u7684\u7ed3\u6784\u662f\u4e00\u68f5\u6811</li> <li>\u6811\u72b6\u6570\u7ec4\u662f\u4e3a\u4e86\u4f18\u5316 <code>O(n)</code> \u590d\u6742\u5ea6\uff0c\u63d0\u51fa\u7684\u4e00\u79cd\u5229\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u6811\u7ed3\u6784</li> <li>\u6811\u72b6\u6570\u7ec4\u4e3b\u8981\u7528\u4e8e 2 \u65b9\u9762\u64cd\u4f5c\uff1a<ul> <li>\u5355\u70b9\u4fee\u6539\uff1a\u65f6\u95f4\u590d\u6742\u5ea6 <code>O(logn)</code></li> <li>\u533a\u95f4\u67e5\u8be2\uff1a\u65f6\u95f4\u590d\u6742\u5ea6 <code>O(logn)</code></li> </ul> </li> <li>\u6811\u72b6\u6570\u7ec4\u662f\u5229\u7528\u524d\u7f00\u548c\u5dee\u7684\u601d\u60f3\u6765\u5bf9\u6811\u8fdb\u884c\u526a\u679d\uff0c\u526a\u679d\u540e\u624d\u80fd\u4fdd\u5b58\u5230\u6570\u7ec4\u4e2d</li> <li>\u67e5\u627e\u524d\u540e\u9ad8\u5c42\u8282\u70b9\u65f6\uff0c\u91c7\u7528\u7684\u662f\u4e00\u79cd <code>lowBit</code> \u65b9\u6cd5</li> </ul>"},{"location":"ch05_tree/binary_index_tree/#_6","title":"\u53c2\u8003","text":"<p>https://zhuanlan.zhihu.com/p/93795692</p> <p>https://blog.csdn.net/qq_40941722/article/details/104406126</p> <p>https://www.jianshu.com/p/7cd5ad2f449a</p> <p>https://leetcode.cn/circle/discuss/qGREiN/</p> <p>https://oi-wiki.org/ds/fenwick/</p>"},{"location":"ch05_tree/binary_index_tree/#_7","title":"\u9644\u5f55","text":""},{"location":"ch05_tree/binary_index_tree/#_8","title":"\u5b8c\u6574\u4ee3\u7801","text":"<pre><code>/**\n * \u6811\u72b6\u6570\u7ec4\uff08\u4e8c\u53c9\u7d22\u5f15\u6811\uff09\n *\n * @author weijiaduo\n * @since 2022/10/1\n */\npublic class BinaryIndexTree {\n\n    /**\n     * \u6811\u72b6\u6570\u7ec4\n     */\n    int[] tree;\n    /**\n     * \u6570\u7ec4\u5927\u5c0f\n     */\n    int n;\n\n    public BinaryIndexTree(int n) {\n        this.n = n;\n        tree = new int[this.n];\n    }\n\n    /**\n     * \u5355\u70b9\u4fee\u6539\n     *\n     * @param index \u6307\u5b9a\u4e0b\u6807\n     * @param val   \u589e\u91cf\u4fee\u6539\u503c\n     */\n    public void update(int index, int val) {\n        while (index &lt; n) {\n            tree[index] += val;\n            index = nextP(index);\n        }\n    }\n\n    /**\n     * \u533a\u95f4\u67e5\u8be2\n     *\n     * @param l [l, r]\n     * @param r [l, r]\n     * @return [l, r] \u7684\u533a\u95f4\u548c\n     */\n    public int query(int l, int r) {\n        return query(r) - query(l - 1);\n    }\n\n    /**\n     * \u533a\u95f4\u67e5\u8be2\n     *\n     * @param index (0, index]\n     * @return (0, 1] \u7684\u533a\u95f4\u548c\n     */\n    private int query(int index) {\n        int sum = 0;\n        while (index &gt; 0) {\n            sum += tree[index];\n            index = prevP(index);\n        }\n        return sum;\n    }\n\n    /**\n     * \u8ba1\u7b97\u540e\u4e00\u4e2a\u9ad8\u5c42\u8282\u70b9\u7684\u4e0b\u6807\n     *\n     * @param index \u5f53\u524d\u4e0b\u6807\n     * @return \u540e\u4e00\u4e2a\u9ad8\u5c42\u8282\u70b9\u7684\u4e0b\u6807\n     */\n    int nextP(int index) {\n        // \u5c42\u7ea7\u95f4\u9694 2^k\n        int g = lowBit(index);\n        // \u7236\u8282\u70b9\u4e0b\u6807\n        return index + g;\n    }\n\n    /**\n     * \u8ba1\u7b97\u524d\u4e00\u4e2a\u9ad8\u5c42\u8282\u70b9\u7684\u4e0b\u6807\n     *\n     * @param index \u5f53\u524d\u4e0b\u6807\n     * @return \u524d\u4e00\u4e2a\u9ad8\u5c42\u8282\u70b9\u7684\u4e0b\u6807\n     */\n    int prevP(int index) {\n        // \u5c42\u7ea7\u95f4\u9694 2^k\n        int g = lowBit(index);\n        // \u524d\u4e00\u4e2a\u9ad8\u5c42\u8282\u70b9\u4e0b\u6807\n        return index - g;\n    }\n\n    /**\n     * index \u53ea\u5269\u4f59\u6700\u4f4e\u4f4d 1 \u7684\u503c\n     *\n     * @param index \u503c\n     * @return \u53ea\u5269\u4f59\u6700\u4f4e\u4f4d 1 \u7684\u503c\n     */\n    private int lowBit(int index) {\n        return index &amp; (-index);\n    }\n\n}\n</code></pre>"},{"location":"ch05_tree/binary_search_tree/","title":"\u4e8c\u53c9\u641c\u7d22\u6811","text":""},{"location":"ch05_tree/binary_search_tree/#_2","title":"\u4e00\u3001\u7ed3\u6784\u5b9a\u4e49","text":"<p>\u4e8c\u53c9\u641c\u7d22\u6811\uff08binary search tree\uff09\uff0c\u4e5f\u79f0\u4e3a\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u662f\u4e00\u79cd\u4e8c\u53c9\u6811\uff0c\u540c\u65f6\u8fd8\u6ee1\u8db3\u4e86\u4ee5\u4e0b\u7684\u6761\u4ef6\uff1a</p> <ol> <li>\u5bf9\u4e8e\u6839\u8282\u70b9\uff0c\u5de6\u5b50\u6811\u4e2d\u6240\u6709\u8282\u70b9\u7684\u503c &lt; \u6839\u8282\u70b9\u7684\u503c &lt; \u53f3\u5b50\u6811\u4e2d\u6240\u6709\u8282\u70b9\u7684\u503c</li> <li>\u4efb\u610f\u8282\u70b9\u7684\u5de6\u3001\u53f3\u5b50\u6811\u4e5f\u662f\u4e8c\u53c9\u641c\u7d22\u6811</li> </ol> <p>\u76f8\u6bd4\u4e8e\u666e\u901a\u4e8c\u53c9\u6811\uff0c\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u8282\u70b9\u4e4b\u95f4\u5e26\u6709\u5927\u5c0f\u5173\u7cfb\uff0c\u8fd9\u4f7f\u5f97\u4e8c\u53c9\u641c\u7d22\u6811\u53ef\u4ee5\u652f\u6301\u5feb\u901f\u7684\u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664\u64cd\u4f5c\u3002</p> <p>\u6bd4\u5982\u8bf4\uff0c\u8fd9\u5c31\u662f\u4e00\u68f5\u4e8c\u53c9\u641c\u7d22\u6811\uff1a</p> <pre><code>    5\n   / \\\n  3   6\n / \\   \\\n2   4   7\n</code></pre>"},{"location":"ch05_tree/binary_search_tree/#_3","title":"\u4e8c\u3001\u57fa\u672c\u64cd\u4f5c","text":""},{"location":"ch05_tree/binary_search_tree/#21","title":"2.1 \u904d\u5386","text":"<p>\u4e8c\u53c9\u641c\u7d22\u6811\u6ee1\u8db3\u300c\u5de6\u5b50\u8282\u70b9 &lt; \u6839\u8282\u70b9 &lt; \u53f3\u5b50\u8282\u70b9\u300d\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u800c\u4e2d\u5e8f\u904d\u5386\u6070\u597d\u662f\u6309\u7167\u300c\u5de6 -&gt; \u6839 -&gt; \u53f3\u300d\u7684\u987a\u5e8f\u904d\u5386\uff1a</p> <pre><code>    5\n   / \\\n  3   6        \u4e2d\u5e8f\u904d\u5386\uff1a2 3 4 5 6 7\n / \\   \\\n2   4   7\n</code></pre> <p>\u56e0\u6b64\uff0c\u5bf9\u4e8c\u53c9\u641c\u7d22\u6811\u8fdb\u884c\u4e2d\u5e8f\u904d\u5386\u7684\u8bdd\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u9012\u589e\u7684\u6709\u5e8f\u5e8f\u5217\u3002</p> <p>\u5229\u7528\u4e2d\u5e8f\u904d\u5386\u5347\u5e8f\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u7528\u4e8c\u53c9\u641c\u7d22\u6811\u6765\u5b9e\u73b0\u6392\u5e8f\uff1a\u5148\u5c06\u6570\u636e\u63d2\u5165\u5230\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\uff0c\u518d\u8fdb\u884c\u4e2d\u5e8f\u904d\u5386\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6709\u5e8f\u7684\u6570\u636e\u5e8f\u5217\u3002</p>"},{"location":"ch05_tree/binary_search_tree/#22","title":"2.2 \u67e5\u627e","text":"<p>\u4e8c\u53c9\u641c\u7d22\u6811\u6ee1\u8db3\u300c\u5de6\u5b50\u8282\u70b9 &lt; \u6839\u8282\u70b9 &lt; \u53f3\u5b50\u8282\u70b9\u300d\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u56e0\u6b64\u67e5\u627e\u64cd\u4f5c\u4e0e\u4e8c\u5206\u67e5\u627e\u7c7b\u4f3c\uff0c\u6bcf\u6b21\u53ef\u4ee5\u5c06\u67e5\u627e\u533a\u95f4\u7f29\u5c0f\u4e00\u534a\u3002</p> <p>\u6bd4\u5982\u8bf4\uff0c\u8981\u67e5\u627e\u503c\u4e3a 4 \u7684\u8282\u70b9\uff1a</p> <pre><code>\u4e8c\u53c9\u641c\u7d22\u6811                 \u67e5\u627e 4\n\n    5                       5         -- \u7b2c\u4e00\u8f6e\n   / \\                     /\n  3   6         --&gt;       3           -- \u7b2c\u4e8c\u8f6e\n / \\   \\                   \\\n2   4   7                   4         -- \u7b2c\u4e09\u8f6e\n</code></pre> <p>\u67e5\u627e\u8fc7\u7a0b\u5c31\u662f\uff0c\u6bd4\u8f83\u5f53\u524d\u8282\u70b9\u7684\u503c\u4e0e\u76ee\u6807\u503c\uff0c\u6839\u636e\u5224\u65ad\u7ed3\u679c\u51b3\u5b9a\u5411\u5de6\u5b50\u6811\u8fd8\u662f\u53f3\u5b50\u6811\u67e5\u627e\u3002</p> <p>\u67e5\u8be2\u8fc7\u7a0b\u7684\u4f2a\u4ee3\u7801\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>TreeNode search(TreeNode root, int val) {\n    if (root == null || root.val == val) {\n        return root;\n    }\n    if (root.val &lt; val) {\n        return search(root.right, val);\n    } else {\n        return search(root.left, val);\n    }\n}\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790\uff1a</p> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(logn)\uff0c\u67e5\u627e\u6b21\u6570\u6700\u591a\u662f\u6811\u7684\u9ad8\u5ea6\uff0c\u5e73\u8861\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u9ad8\u5ea6\u662f logn\u3002</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\u3002</li> </ul>"},{"location":"ch05_tree/binary_search_tree/#23","title":"2.3 \u63d2\u5165","text":"<p>\u63d2\u5165\u64cd\u4f5c\u9700\u8981\u6ee1\u8db3\u51e0\u4e2a\u6761\u4ef6\uff1a</p> <ol> <li>\u63d2\u5165\u540e\u5fc5\u987b\u80fd\u4fdd\u6301\u4e8c\u53c9\u641c\u7d22\u6811\u300c\u5de6\u5b50\u6811 &lt; \u6839\u8282\u70b9 &lt; \u53f3\u5b50\u6811\u300d\u7684\u6027\u8d28</li> <li>\u65b0\u63d2\u5165\u8282\u70b9\u5fc5\u987b\u662f\u53f6\u5b50\u8282\u70b9</li> </ol> <p>\u6bd4\u5982\u8bf4\uff0c\u8981\u63d2\u5165\u503c\u4e3a 1 \u7684\u8282\u70b9\uff1a</p> <pre><code>\u4e8c\u53c9\u641c\u7d22\u6811                 \u63d2\u5165 1\n\n    5                       5\n   / \\                     / \\\n  3   6         --&gt;       3   6\n / \\   \\                 / \\   \\\n2   4   7               2   4   7\n                       /\n                      1\n</code></pre> <p>\u63d2\u5165\u7684\u65b0\u8282\u70b9\u5fc5\u987b\u662f\u653e\u5728\u53f6\u5b50\u8282\u70b9\uff0c\u56e0\u6b64\u9996\u5148\u8981\u627e\u5230\u63d2\u5165\u4f4d\u7f6e\uff0c\u627e\u7684\u8fc7\u7a0b\u548c\u67e5\u627e\u64cd\u4f5c\u7c7b\u4f3c\u3002</p> <p>\u63d2\u5165\u8fc7\u7a0b\u7684\u4f2a\u4ee3\u7801\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>TreeNode insert(TreeNode root, int val) {\n    if (root == null) {\n        return new TreeNode(val);\n    }\n    if (root.val &lt; val) {\n        root.right = insert(root.right, val);\n    } else {\n        root.left = insert(root.left, val);\n    }\n    return root;\n}\n</code></pre> <p>\u590d\u6742\u5ea6\u5206\u6790\uff1a</p> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(logn)\uff0c\u63d2\u5165\u9700\u8981\u67e5\u627e\uff0c\u4e0e\u67e5\u627e\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u76f8\u540c\u3002</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\u3002</li> </ul>"},{"location":"ch05_tree/binary_search_tree/#24","title":"2.4 \u5220\u9664","text":"<p>\u5220\u9664\u64cd\u4f5c\u4e5f\u9700\u8981\u6ee1\u8db3\uff1a\u5220\u9664\u540e\u5fc5\u987b\u80fd\u4fdd\u6301\u4e8c\u53c9\u641c\u7d22\u6811\u300c\u5de6\u5b50\u6811 &lt; \u6839\u8282\u70b9 &lt; \u53f3\u5b50\u6811\u300d\u7684\u6027\u8d28\u3002</p> <p>\u56e0\u6b64\uff0c\u5220\u9664\u9700\u8981\u5206\u4e3a 3 \u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u8981\u5220\u9664\u7684\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u53ef\u4ee5\u76f4\u63a5\u5220\u9664</li> <li>\u8981\u5220\u9664\u7684\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u5c06\u5b50\u8282\u70b9\u63d0\u5347\u5230\u8981\u5220\u9664\u7684\u8282\u70b9\u7684\u4f4d\u7f6e\u5373\u53ef</li> <li>\u8981\u5220\u9664\u7684\u8282\u70b9\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u9700\u8981\u627e\u5230\u5de6\u5b50\u6811\u4e2d\u6700\u5927\u7684\u8282\u70b9\uff0c\u6216\u8005\u53f3\u5b50\u6811\u4e2d\u6700\u5c0f\u7684\u8282\u70b9\u6765\u63a5\u66ff\u8981\u5220\u9664\u7684\u8282\u70b9</li> </ol>"},{"location":"ch05_tree/binary_search_tree/#1","title":"(1) \u5220\u9664\u53f6\u5b50\u8282\u70b9","text":"<p>\u6bd4\u5982\u8bf4\uff0c\u8981\u5220\u9664\u503c\u4e3a 4 \u7684\u8282\u70b9\uff1a</p> <pre><code>\u4e8c\u53c9\u641c\u7d22\u6811                 \u5220\u9664 4\n\n    5                       5\n   / \\                     / \\\n  3   6         --&gt;       3   6\n / \\   \\                 /     \\\n2   4   7               2       7\n</code></pre> <p>\u5220\u9664\u53f6\u5b50\u8282\u70b9\u7684\u8fc7\u7a0b\u5c31\u662f\uff1a</p> <ol> <li>\u627e\u5230\u8981\u5220\u9664\u7684\u8282\u70b9\uff084\uff09\u3002</li> <li>\u7136\u540e\u5c06\u7236\u8282\u70b9\uff083\uff09\u6307\u5411\u5b83\uff084\uff09\u7684\u6307\u9488\u7f6e\u4e3a null\u3002</li> </ol>"},{"location":"ch05_tree/binary_search_tree/#2","title":"(2) \u5220\u9664\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u8282\u70b9","text":"<p>\u6bd4\u5982\u8bf4\uff0c\u8981\u5220\u9664\u503c\u4e3a 6 \u7684\u8282\u70b9\uff1a</p> <pre><code>\u4e8c\u53c9\u641c\u7d22\u6811                 \u5220\u9664 6\n\n    5                       5\n   / \\                     / \\\n  3   6         --&gt;       3   7\n / \\   \\                 / \\\n2   4   7               2   4  \n</code></pre> <p>\u5220\u9664\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u8282\u70b9\u7684\u8fc7\u7a0b\u5c31\u662f\uff1a</p> <ol> <li>\u627e\u5230\u8981\u5220\u9664\u7684\u8282\u70b9\uff086\uff09\u3002</li> <li>\u7136\u540e\u5c06\u7236\u8282\u70b9\uff085\uff09\u6307\u5411\u5b83\uff086\uff09\u7684\u6307\u9488\u6307\u5411\u5b83\u7684\u5b50\u8282\u70b9\uff087\uff09\u3002</li> </ol>"},{"location":"ch05_tree/binary_search_tree/#3","title":"(3) \u5220\u9664\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\u8282\u70b9","text":"<p>\u6bd4\u5982\u8bf4\uff0c\u8981\u5220\u9664\u503c\u4e3a 5 \u7684\u8282\u70b9\uff1a</p> <pre><code>\u4e8c\u53c9\u641c\u7d22\u6811                \u5220\u9664 5\uff08\u66ff\u6362\u8282\u70b94\uff09         \u5220\u9664 5\uff08\u66ff\u6362\u8282\u70b96\uff09\n\n    5                          4                          6    \n   / \\                        / \\                        / \\  \n  3   6         --&gt;          3   6          \u6216          3   7  \n / \\   \\                    /     \\                    / \\   \n2   4   7                  2       7                  2   4  \n</code></pre> <p>\u5220\u9664\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\u8282\u70b9\u7684\u8fc7\u7a0b\u5c31\u662f\uff1a</p> <ol> <li>\u627e\u5230\u8981\u5220\u9664\u7684\u8282\u70b9\uff085\uff09\u3002</li> <li>\u7136\u540e\u627e\u5230\u5220\u9664\u8282\u70b9\u5de6\u5b50\u6811\u4e2d\u6700\u5927\u7684\u8282\u70b9\uff084\uff09\uff0c\u6216\u8005\u53f3\u5b50\u6811\u4e2d\u6700\u5c0f\u7684\u8282\u70b9\uff086\uff09\uff0c\u4f5c\u4e3a\u66ff\u6362\u8282\u70b9\u3002</li> <li>\u5c06\u66ff\u6362\u8282\u70b9\uff084/6\uff09\u4e0e\u8981\u5220\u9664\u7684\u8282\u70b9\uff085\uff09\u4ea4\u6362\uff0c\u7136\u540e\u5220\u9664\u8981\u5220\u9664\u7684\u8282\u70b9\uff085\uff09\u3002</li> </ol> <p>\u5220\u9664\u8fc7\u7a0b\u7684\u4f2a\u4ee3\u7801\u7c7b\u4f3c\u8fd9\u6837\uff08\u4ee5\u53f3\u5b50\u6811\u4e2d\u6700\u5c0f\u7684\u8282\u70b9\u4f5c\u4e3a\u66ff\u6362\u8282\u70b9\uff09\uff1a</p> <pre><code>TreeNode delete(TreeNode root, int val) {\n    if (root == null) {\n        return null;\n    }\n    if (root.val == val) {\n        // \u627e\u5230\u8981\u5220\u9664\u7684\u8282\u70b9\n        // 1. \u5220\u9664\u53f6\u5b50\u8282\u70b9\n        if (root.left == null &amp;&amp; root.right == null) {\n            return null;\n        }\n\n        // 2. \u5220\u9664\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u8282\u70b9\n        if (root.left == null) {\n            return root.right;\n        }\n        if (root.right == null) {\n            return root.left;\n        }\n\n        // 3. \u5220\u9664\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\u8282\u70b9\n        // \u627e\u5230\u53f3\u5b50\u6811\u4e2d\u6700\u5c0f\u7684\u8282\u70b9\uff0c\u4f5c\u4e3a\u66ff\u6362\u8282\u70b9\n        TreeNode minNode = getMin(root.right);\n        // \u5220\u9664 minNode\uff08\u7b49\u4ef7\u4e8e\u4ea4\u6362 root \u548c minNode\uff0c\u5e76\u5220\u9664 root\uff09\n        root.right = delete(root.right, minNode.val);\n        // \u7528 minNode \u66ff\u6362 root\n        minNode.left = root.left;\n        minNode.right = root.right;\n        root = minNode;\n    } else if (root.val &lt; val) {\n        // \u53bb\u53f3\u5b50\u6811\u5220\u9664\n        root.right = delete(root.right, val);\n    } else if (root.val &gt; val) {\n        // \u53bb\u5de6\u5b50\u6811\u5220\u9664\n        root.left = delete(root.left, val);\n    }\n    return root;\n}\n</code></pre> <p>\u56e0\u4e3a\u5220\u9664\u6d89\u53ca\u5230\u4e86\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u5185\u90e8\u8282\u70b9\uff0c\u4e3a\u4e86\u4fdd\u6301\u5b83\u7684\u6027\u8d28\uff0c\u6240\u4ee5\u64cd\u4f5c\u4f1a\u7a0d\u5fae\u6709\u70b9\u590d\u6742\u3002</p> <p>\u590d\u6742\u5ea6\u5206\u6790\uff1a</p> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(logn)\uff0c\u5220\u9664\u9700\u8981\u67e5\u627e\uff0c\u4e0e\u67e5\u627e\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u76f8\u540c\u3002</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\u3002</li> </ul>"},{"location":"ch05_tree/binary_search_tree/#_4","title":"\u4e09\u3001\u5178\u578b\u5e94\u7528","text":"<ul> <li>\u7d22\u5f15\uff1a\u7528\u4f5c\u7cfb\u7edf\u4e2d\u7684\u591a\u7ea7\u7d22\u5f15\uff0c\u5b9e\u73b0\u9ad8\u6548\u7684\u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664\u64cd\u4f5c\u3002</li> <li>\u641c\u7d22\u7b97\u6cd5\uff1a\u4f5c\u4e3a\u67d0\u4e9b\u641c\u7d22\u7b97\u6cd5\u7684\u5e95\u5c42\u6570\u636e\u7ed3\u6784\u3002</li> <li>\u6709\u5e8f\u6570\u636e\u5b58\u50a8\uff1a\u7528\u4e8e\u5b58\u50a8\u6570\u636e\u6d41\uff0c\u4ee5\u4fdd\u6301\u5176\u6709\u5e8f\u72b6\u6001\u3002</li> <li>\u8303\u56f4\u67e5\u8be2\uff1aBST\u53ef\u7528\u4e8e\u6267\u884c\u8303\u56f4\u67e5\u8be2\uff0c\u4f8b\u5982\u67e5\u627e\u5728\u7ed9\u5b9a\u8303\u56f4\u5185\u7684\u6240\u6709\u5143\u7d20\u3002</li> <li>\u81ea\u52a8\u8865\u5168\u548c\u62fc\u5199\u68c0\u67e5\uff1aBST\u53ef\u7528\u4e8e\u5b9e\u73b0\u81ea\u52a8\u8865\u5168\u548c\u62fc\u5199\u68c0\u67e5\u529f\u80fd\uff0c\u5176\u4e2d\u6811\u4e2d\u7684\u8282\u70b9\u5b58\u50a8\u5355\u8bcd\u6216\u77ed\u8bed\u3002</li> </ul>"},{"location":"ch05_tree/binary_search_tree/#_5","title":"\u53c2\u8003","text":"<p>https://www.hello-algo.com/chapter_tree/binary_search_tree/</p> <p>https://time.geekbang.org/column/article/68334</p>"},{"location":"ch05_tree/binary_tree/","title":"\u4e8c\u53c9\u6811","text":""},{"location":"ch05_tree/binary_tree/#_2","title":"\u4e00\u3001\u4ec0\u4e48\u662f\u4e8c\u53c9\u6811\uff1f","text":""},{"location":"ch05_tree/binary_tree/#11","title":"1.1 \u4e8c\u53c9\u6811\u7684\u5b9a\u4e49","text":"<ul> <li>\u7531\u4e00\u7cfb\u5217\u8282\u70b9\u7ec4\u6210\u7684\u6709\u9650\u96c6\u5408\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e14\u4ec5\u6709 2 \u4e2a\u5b50\u8282\u70b9\uff08\u7a7a\u8282\u70b9\u4e5f\u7b97\u5728\u5185\uff09</li> <li>\u6bcf\u4e2a\u5b50\u8282\u70b9\u6784\u6210\u4e00\u68f5\u5b50\u6811\uff0c\u5e76\u4e14\u5b50\u6811\u4e4b\u95f4\u6ca1\u6709\u4ea4\u96c6</li> </ul>"},{"location":"ch05_tree/binary_tree/#12","title":"1.2 \u4e8c\u53c9\u6811\u7684\u7ed3\u6784","text":"<pre><code>      1\n   /     \\                \n  2       3              8\n / \\     / \\            /\n4   5   6   7          9\n\n    \u4e8c\u53c9\u68111            \u4e8c\u53c9\u68112\n</code></pre>"},{"location":"ch05_tree/binary_tree/#13","title":"1.3 \u8282\u70b9\u5173\u7cfb","text":"<ul> <li>\u7236\u5b50\u8282\u70b9\uff1a\u76f8\u8fde\u7684\u8282\u70b9\u4e4b\u95f4\u5b58\u5728\u7236\u5b50\u5173\u7cfb\uff0c\u8fde\u63a5\u4e0a\u9762\u7684\u8282\u70b9\u662f\u7236\u8282\u70b9\uff0c\u6bd4\u5982 2 \u662f 4 \u548c 5 \u7684\u7236\u8282\u70b9</li> <li>\u5144\u5f1f\u8282\u70b9\uff1a\u540c\u4e00\u4e2a\u7236\u8282\u70b9\u7684\u76f8\u90bb\u8282\u70b9\uff0c\u662f\u5144\u5f1f\u8282\u70b9\uff0c\u6bd4\u5982 4 \u548c 5</li> </ul> <pre><code>  2      -- \u7236\u8282\u70b9\n / \\    \n4   5    -- \u5b50\u8282\u70b9\n</code></pre>"},{"location":"ch05_tree/binary_tree/#14","title":"1.4 \u8282\u70b9\u7c7b\u578b","text":"<ul> <li>\u6839\u8282\u70b9\uff1a\u6ca1\u6709\u7236\u8282\u70b9\u7684\u8282\u70b9\u79f0\u4e3a\u6839\u8282\u70b9\uff0c\u6839\u8282\u70b9\u5728\u4e00\u68f5\u6811\u4e2d\u53ea\u4f1a\u6709 1 \u4e2a</li> <li>\u5185\u90e8\u8282\u70b9\uff1a\u6709\u975e\u7a7a\u5b50\u8282\u70b9\u7684\u8282\u70b9\uff0c\u79f0\u4e3a\u5185\u90e8\u8282\u70b9/\u5206\u652f\u8282\u70b9\uff0c\u6bd4\u5982 1\u30012\u30013</li> <li>\u53f6\u5b50\u8282\u70b9\uff1a\u4ec5\u6709\u7a7a\u5b50\u8282\u70b9\u7684\u8282\u70b9\uff0c\u79f0\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u6bd4\u5982 4\u30015\u30016\u30017</li> </ul> <pre><code>      1             -- \u6839\u8282\u70b9\n   /     \\                \n  2       3         -- \u5206\u652f\u8282\u70b9\n / \\     / \\\n4   5   6   7       -- \u53f6\u5b50\u8282\u70b9\n</code></pre>"},{"location":"ch05_tree/binary_tree/#15","title":"1.5 \u6811\u7684\u5c5e\u6027","text":"<ul> <li>\u8282\u70b9\u9ad8\u5ea6\uff1a\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u6700\u957f\u8def\u5f84</li> <li>\u8282\u70b9\u6df1\u5ea6\uff1a\u6839\u8282\u70b9\u5230\u8282\u70b9\u7684\u8def\u5f84\u957f\u5ea6</li> <li>\u8282\u70b9\u5c42\u6570\uff1a\u8282\u70b9\u6df1\u5ea6 + 1</li> <li>\u6811\u7684\u9ad8\u5ea6\uff1a\u6839\u8282\u70b9\u7684\u9ad8\u5ea6</li> </ul> <pre><code>    \u4e8c\u53c9\u6811          \u9ad8\u5ea6      \u6df1\u5ea6     \u5c42\u6b21\n\n      1              2        0        1\n   /     \\ \n  2       3          1        1        2 \n / \\     / \\ \n4   5   6   7        0        2        3\n</code></pre>"},{"location":"ch05_tree/binary_tree/#16","title":"1.6 \u8282\u70b9\u5c5e\u6027","text":"<ul> <li>\u8282\u70b9\u7684\u5ea6\uff1a\u8282\u70b9\u7684\u975e\u7a7a\u5b50\u6811\u7684\u6570\u91cf</li> </ul> <pre><code>  1\u7684\u5ea6\u6570\u4e3a2       4\u7684\u5ea6\u6570\u4e3a1       6\u7684\u5ea6\u6570\u4e3a0\n\n     1                4               6\n    / \\              /\n   2   3            5\n</code></pre>"},{"location":"ch05_tree/binary_tree/#_3","title":"\u4e8c\u3001\u5e38\u89c1\u7684\u4e8c\u53c9\u6811","text":""},{"location":"ch05_tree/binary_tree/#21","title":"2.1 \u6ee1\u4e8c\u53c9\u6811","text":"<p>\u6ee1\u4e8c\u53c9\u6811\uff08Perfect Binary Tree\uff09\uff0c\u4e5f\u79f0\u4e3a\u5b8c\u7f8e\u4e8c\u53c9\u6811:</p> <ul> <li>\u9664\u53f6\u5b50\u8282\u70b9\u5916\uff0c\u6240\u6709\u8282\u70b9\u90fd\u6709 2 \u4e2a\u975e\u7a7a\u5b50\u6811</li> <li>\u6bcf\u4e00\u5c42\u7684\u8282\u70b9\u6570\u91cf\u90fd\u662f\u6ee1\u7684</li> </ul> <p>\u6bd4\u5982\u8bf4\uff0c\u8fd9\u4e9b\u4e8c\u53c9\u6811\u90fd\u662f\u6ee1\u4e8c\u53c9\u6811\uff1a</p> <pre><code>  3\u5c42\u6ee1\u4e8c\u53c9\u6811          2\u5c42\u6ee1\u4e8c\u53c9\u6811       1\u5c42\u6ee1\u4e8c\u53c9\u6811\n\n      1\n   /     \\ \n  2       3                8             \n / \\     / \\              / \\\n4   5   6   7            9   10            11\n</code></pre> <p>\u6ee1\u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff1a</p> <ul> <li>\u7b2c k \u5c42\u7684\u8282\u70b9\u6570\u91cf\u4e3a <code>2^(k-1)</code></li> <li>\u6811\u9ad8\u5ea6\u4e3a h\uff0c\u603b\u8282\u70b9\u6570\u91cf\u4e3a <code>2^(h+1) - 1</code></li> <li>\u53f6\u5b50\u8282\u70b9\u6570\u91cf n0\uff0c\u548c\u975e\u53f6\u5b50\u8282\u70b9\u6570\u91cf n1\uff0c\u6ee1\u8db3 <code>n0 = n1 + 1</code></li> <li>\u5177\u6709 n \u4e2a\u8282\u70b9\u7684\u6ee1\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e3a <code>log(n)</code> \u5411\u4e0b\u53d6\u6574</li> </ul>"},{"location":"ch05_tree/binary_tree/#22","title":"2.2 \u5b8c\u5168\u4e8c\u53c9\u6811","text":"<p>\u5b8c\u5168\u4e8c\u53c9\u6811\uff08Complete Binary Tree\uff09\uff1a</p> <ul> <li>\u9664\u4e86\u6700\u540e\u4e00\u5c42\u8282\u70b9\u6ca1\u6709\u6ee1\uff0c\u5176\u4f59\u5c42\u7684\u8282\u70b9\u90fd\u662f\u6ee1\u7684</li> <li>\u6700\u540e\u4e00\u5c42\u7684\u8282\u70b9\u662f\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u8fde\u7eed\u6392\u5e8f\u7684</li> </ul> <p>\u6bd4\u5982\u8bf4\uff0c\u8fd9\u4e9b\u90fd\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff1a</p> <pre><code>      1\n   /     \\ \n  2       3                8             \n / \\     /                /\n4   5   6                9    \n</code></pre> <p>\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff08\u5982\u679c\u8282\u70b9\u6309\u5c42\u6b21\u4ece\u5de6\u81f3\u53f3\u7f16\u5199\u5e8f\u53f7\uff0c\u8d77\u59cb\u5e8f\u53f71\uff09\uff1a</p> <ul> <li>\u7236\u8282\u5e8f\u53f7\u4e3a i \u65f6\uff0c\u5de6\u5b50\u8282\u70b9\u5e8f\u53f7\u4e3a <code>2*i</code>\uff0c\u53f3\u5b50\u8282\u70b9\u5e8f\u53f7\u4e3a <code>2*i + 1</code></li> <li>\u5b50\u8282\u70b9\u5e8f\u53f7\u4e3a i \u65f6\uff0c\u7236\u8282\u70b9\u5e8f\u53f7\u4e3a <code>i/2</code></li> </ul> <p>\u6ee1\u4e8c\u53c9\u6811\u5b9e\u9645\u4e0a\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u7279\u4f8b\uff0c\u5373\u6700\u540e\u4e00\u5c42\u8282\u70b9\u521a\u597d\u586b\u6ee1\uff0c\u6240\u4ee5\u5b8c\u5168\u4e8c\u53c9\u6811\u62e5\u6709\u7684\u6240\u6709\u6027\u8d28\uff0c\u6ee1\u4e8c\u53c9\u6811\u4e5f\u90fd\u62e5\u6709\u3002</p>"},{"location":"ch05_tree/binary_tree/#23","title":"2.3 \u5b8c\u6ee1\u4e8c\u53c9\u6811","text":"<p>\u5b8c\u6ee1\u4e8c\u53c9\u6811\uff08full binary tree\uff09\uff1a</p> <ul> <li>\u9664\u4e86\u53f6\u8282\u70b9\u4e4b\u5916\uff0c\u5176\u4f59\u6240\u6709\u8282\u70b9\u90fd\u6709\u4e24\u4e2a\u5b50\u8282\u70b9</li> <li>\u6240\u6709\u8282\u70b9\u7684\u5ea6\u6570\u90fd\u4e3a 0 \u6216 2</li> </ul> <p>\u6bd4\u5982\u8bf4\uff0c\u8fd9\u4e9b\u90fd\u662f\u5b8c\u6ee1\u4e8c\u53c9\u6811\uff1a</p> <pre><code>      1\n   /     \\ \n  2       3                4             \n / \\                      / \\\n4   5                    5   7\n   / \\\n  6   7\n</code></pre> <p>\u6ce8\u610f\u5b8c\u6ee1\u4e8c\u53c9\u6811\u548c\u5176\u4ed6\u4e8c\u53c9\u6811\u7684\u533a\u522b\uff0c\u5b8c\u6ee1\u4e8c\u53c9\u6811\u4ec5\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6570\u8981\u4e48\u662f 0\uff0c\u8981\u4e48\u662f 2\u3002</p>"},{"location":"ch05_tree/binary_tree/#_4","title":"\u4e09\u3001\u4e3a\u4ec0\u4e48\u7528\u4e8c\u53c9\u6811\uff1f","text":"<p>\u4e8c\u53c9\u6811\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u548c\u6570\u636e\u7ed3\u6784\u4e2d\u6709\u8bb8\u591a\u7528\u9014\uff0c\u5176\u4e2d\u4e00\u4e9b\u4e3b\u8981\u539f\u56e0\u5305\u62ec\uff1a</p> <ul> <li>\u9ad8\u6548\u7684\u64cd\u4f5c\uff1a\u4e8c\u53c9\u67e5\u627e\u6811\u53ef\u7528\u4e8e\u9ad8\u6548\u5730\u641c\u7d22\u3001\u63d2\u5165\u548c\u5220\u9664\u6570\u636e</li> <li>\u6392\u5e8f\uff1a\u4e8c\u53c9\u67e5\u627e\u6811\u53ef\u7528\u4e8e\u6570\u636e\u7684\u6392\u5e8f</li> <li>\u5206\u5c42\u6570\u636e\u8868\u793a\uff1a\u4e8c\u53c9\u6811\u53ef\u4ee5\u7528\u4e8e\u8868\u793a\u5206\u5c42\u6570\u636e\uff0c\u5982\u6587\u4ef6\u7cfb\u7edf\u3001\u7ec4\u7ec7\u7ed3\u6784\u7b49</li> <li>\u9012\u5f52\u64cd\u4f5c\uff1a\u4e8c\u53c9\u6811\u5e38\u7528\u4e8e\u9012\u5f52\u7b97\u6cd5\uff0c\u5728\u56fe\u5f62\u5904\u7406\u3001\u6811\u5f62\u7ed3\u6784\u6570\u636e\u548c\u8bb8\u591a\u5176\u4ed6\u9886\u57df\u90fd\u975e\u5e38\u6709\u7528</li> <li>\u6570\u636e\u7f16\u7801\uff1a\u54c8\u592b\u66fc\u7f16\u7801\uff0c\u5728\u6570\u636e\u538b\u7f29\u4e0a\u6709\u91cd\u8981\u4f5c\u7528</li> <li>...</li> </ul> <p>\u4e8c\u53c9\u6811\u662f\u4e00\u79cd\u7075\u6d3b\u4e14\u591a\u7528\u9014\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u5728\u8bb8\u591a\u8ba1\u7b97\u673a\u79d1\u5b66\u548c\u7f16\u7a0b\u95ee\u9898\u4e2d\u63d0\u4f9b\u9ad8\u6548\u7684\u89e3\u51b3\u65b9\u6848\u3002</p>"},{"location":"ch05_tree/binary_tree/#_5","title":"\u56db\u3001\u5982\u4f55\u5b9e\u73b0\u4e8c\u53c9\u6811\uff1f","text":"<p>\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e24\u79cd\u4e3b\u8981\u7684\u65b9\u6cd5\u6765\u5b58\u50a8\u4e8c\u53c9\u6811\uff1a\u987a\u5e8f\u5b58\u50a8\u548c\u94fe\u5f0f\u5b58\u50a8\u3002</p>"},{"location":"ch05_tree/binary_tree/#41","title":"4.1 \u987a\u5e8f\u5b58\u50a8\u6cd5","text":"<p>\u987a\u5e8f\u5b58\u50a8\u6cd5\u662f\u5c06\u4e8c\u53c9\u6811\u5b58\u50a8\u5728\u8fde\u7eed\u7684\u5185\u5b58\u5757\u4e2d\uff0c\u901a\u5e38\u4f7f\u7528\u6570\u7ec4\u6765\u8868\u793a\u4e8c\u53c9\u6811\u7684\u7ed3\u6784\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u987a\u5e8f\u5b58\u50a8\u6cd5\u662f\u5c06\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6309\u7167\u5c42\u6b21\u987a\u5e8f\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u5b58\u50a8\u5728\u6570\u7ec4\u4e2d\u3002</p> <p>\u5176\u7ed3\u6784\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>                   30     \n                /      \\  \n               28      16                          -- \u903b\u8f91\u7ed3\u6784\n              /  \\    /   \n             18  22  12   \n\n      ____ ____ ____ ____ ____ ____ \n     | 30 | 28 | 16 | 18 | 22 | 12 |               -- \u7269\u7406\u7ed3\u6784\n</code></pre> <p>\u8fd9\u79cd\u65b9\u5f0f\u5bf9\u4e8e\u5b8c\u5168\u4e8c\u53c9\u6811\u5c24\u5176\u6709\u6548\uff0c\u56e0\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6392\u5217\u7d27\u51d1\uff0c\u4e0d\u4f1a\u6d6a\u8d39\u592a\u591a\u5185\u5b58\u3002</p> <p>\u4f46\u662f\uff0c\u5bf9\u4e8e\u4e00\u822c\u7684\u4e8c\u53c9\u6811\uff0c\u987a\u5e8f\u5b58\u50a8\u6cd5\u4f1a\u6d6a\u8d39\u5927\u91cf\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u6bd4\u5982\u8fd9\u6837\u7684\u4e8c\u53c9\u6811\uff1a</p> <pre><code>                   30     \n                       \\  \n                       16                          -- \u903b\u8f91\u7ed3\u6784\n                      /   \n                     12   \n\n      ____ ____ ____ ____ ____ ____ \n     | 30 |    | 16 |    |    | 12 |               -- \u7269\u7406\u7ed3\u6784\n</code></pre> <p>\u6240\u4ee5\uff0c\u5bf9\u4e8e\u4e00\u822c\u4e8c\u53c9\u6811\u6765\u8bf4\uff0c\u987a\u5e8f\u5b58\u50a8\u6cd5\u5e76\u4e0d\u662f\u90a3\u4e48\u5408\u9002\uff0c\u6570\u7ec4\u7a7a\u95f4\u592a\u6d6a\u8d39\u4e86\u3002</p> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u5185\u5b58\u5229\u7528\u7387\u9ad8\uff1a\u7531\u4e8e\u6570\u636e\u662f\u8fde\u7eed\u5b58\u50a8\u7684\uff0c\u6ca1\u6709\u6307\u9488\u7b49\u989d\u5916\u5f00\u9500\uff0c\u5185\u5b58\u5229\u7528\u7387\u9ad8\u3002</li> <li>\u5feb\u901f\u968f\u673a\u8bbf\u95ee\uff1a\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u76f4\u63a5\u8bbf\u95ee\u6811\u7684\u4efb\u610f\u8282\u70b9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\u3002</li> <li>\u5bf9\u7f13\u5b58\u5c40\u90e8\u6027\u53cb\u597d\uff1a\u56e0\u4e3a\u662f\u8fde\u7eed\u5b58\u50a8\u7684\uff0c\u5bf9\u7f13\u5b58\u53cb\u597d\uff0c\u8bbf\u95ee\u4e0e\u904d\u5386\u901f\u5ea6\u8f83\u5feb</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u4e0d\u9002\u5408\u6570\u636e\u91cf\u5927\u7684\u6570\uff1a\u6570\u7ec4\u5b58\u50a8\u9700\u8981\u8fde\u7eed\u5185\u5b58\u7a7a\u95f4\uff0c\u6570\u636e\u91cf\u5927\u65f6\u5bf9\u5185\u5b58\u7684\u8981\u6c42\u8f83\u9ad8\u3002</li> <li>\u4e0d\u9002\u7528\u4e8e\u975e\u5b8c\u5168\u4e8c\u53c9\u6811\uff1a\u5bf9\u4e8e\u975e\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u4f1a\u6d6a\u8d39\u5927\u91cf\u7684\u5185\u5b58\u7a7a\u95f4\u3002</li> <li>\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u590d\u6742\uff1a\u63d2\u5165\u548c\u5220\u9664\u8282\u70b9\u65f6\u9700\u8981\u79fb\u52a8\u5927\u91cf\u5143\u7d20\uff0c\u6548\u7387\u8f83\u4f4e\u3002</li> </ul>"},{"location":"ch05_tree/binary_tree/#42","title":"4.2 \u94fe\u5f0f\u5b58\u50a8\u6cd5","text":"<p>\u94fe\u5f0f\u5b58\u50a8\u6cd5\u4f7f\u7528\u8282\u70b9\u548c\u6307\u9488\u6765\u8868\u793a\u4e8c\u53c9\u6811\u7684\u7ed3\u6784\uff0c\u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u6570\u636e\u4ee5\u53ca\u6307\u5411\u5176\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u6307\u9488\u3002</p> <p>\u5176\u7ed3\u6784\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>                        __ ____ __\n                       |  | 30 |  |\n                        /        \\  \n           __ ____ __                 __ ____ __\n          |  | 28 |  |               |  | 16 |  |\n           /        \\                 /   \n    __ ____ __   __ ____ __     __ ____ __\n   |  | 18 |  | |  | 22 |  |   |  | 12 |  |   \n</code></pre> <p>\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u9002\u7528\u4e8e\u4efb\u4f55\u7c7b\u578b\u7684\u4e8c\u53c9\u6811\uff0c\u65e0\u8bba\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\u8fd8\u662f\u975e\u5b8c\u5168\u4e8c\u53c9\u6811\u3002</p> <p>\u4f18\u70b9\uff1a</p> <ul> <li>\u9002\u7528\u6027\u5e7f\u6cdb\uff1a\u53ef\u4ee5\u7528\u4e8e\u8868\u793a\u5404\u79cd\u7c7b\u578b\u7684\u4e8c\u53c9\u6811\uff0c\u5305\u62ec\u4e0d\u89c4\u5219\u7684\u975e\u5b8c\u5168\u4e8c\u53c9\u6811\u3002</li> <li>\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u7b80\u5355\uff1a\u63d2\u5165\u548c\u5220\u9664\u8282\u70b9\u53ea\u9700\u8981\u8c03\u6574\u6307\u9488\uff0c\u4e0d\u9700\u8981\u79fb\u52a8\u5927\u91cf\u6570\u636e\u3002</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u6307\u9488\u5f00\u9500\uff1a\u6bcf\u4e2a\u8282\u70b9\u9700\u8981\u989d\u5916\u7684\u6307\u9488\u5f00\u9500\uff0c\u5360\u7528\u66f4\u591a\u5185\u5b58\u3002</li> <li>\u968f\u673a\u8bbf\u95ee\u8f83\u6162\uff1a\u7531\u4e8e\u9700\u8981\u4f9d\u6b21\u904d\u5386\u6307\u9488\uff0c\u968f\u673a\u8bbf\u95ee\u8282\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8\u3002</li> </ul>"},{"location":"ch05_tree/binary_tree/#43","title":"4.3 \u5982\u4f55\u9009\u62e9\u5b58\u50a8\u65b9\u6cd5","text":"<p>\u9009\u62e9\u4e8c\u53c9\u6811\u7684\u5b58\u50a8\u65b9\u6cd5\u53d6\u51b3\u4e8e\u5e94\u7528\u7684\u9700\u6c42\u548c\u6570\u636e\u7279\u6027\uff1a</p> <ul> <li>\u5982\u679c\u6570\u636e\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5e76\u4e14\u5bf9\u5185\u5b58\u5360\u7528\u975e\u5e38\u654f\u611f\uff0c\u90a3\u4e48\u987a\u5e8f\u5b58\u50a8\u6cd5\u53ef\u80fd\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002</li> <li>\u5982\u679c\u9700\u8981\u5904\u7406\u5404\u79cd\u7c7b\u578b\u7684\u4e8c\u53c9\u6811\uff0c\u94fe\u5f0f\u5b58\u50a8\u6cd5\u4f1a\u66f4\u52a0\u7075\u6d3b\u4e00\u4e9b\u3002</li> </ul> <p>\u987a\u5e8f\u5b58\u50a8\u6cd5\u548c\u94fe\u5f0f\u5b58\u50a8\u6cd5\u90fd\u6709\u5404\u81ea\u7684\u4f18\u70b9\u548c\u5c40\u9650\u6027\uff0c\u8981\u6839\u636e\u5177\u4f53\u60c5\u51b5\u8fdb\u884c\u6743\u8861\u548c\u9009\u62e9\u3002</p>"},{"location":"ch05_tree/binary_tree/#_6","title":"\u53c2\u8003","text":"<p>https://www.hello-algo.com/chapter_tree/binary_tree/</p> <p>https://blog.csdn.net/weixin_57675461/article/details/121323091</p> <p>http://c.biancheng.net/view/3384.html</p> <p>https://blog.csdn.net/fadbgfnbxb/article/details/88701343</p> <p>https://blog.csdn.net/yyz_1987/article/details/120766760</p>"},{"location":"ch05_tree/bplus_tree/","title":"B+\u6811","text":""},{"location":"ch05_tree/bplus_tree/#b_1","title":"\u4e00\u3001\u4ec0\u4e48\u662f B+ \u6811\uff1f","text":"<p>B+ \u6811\u662f B-\u6811\u7684\u53d8\u79cd\u3002</p> <p>\u5176\u7ed3\u6784\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>                                             ____ ___ ___\n                                            | 24 |   |   |\n                                                   |\n                             --------------------------------------------------------\n                             |                                                      |\n                       ____ ____ ___                                          ____ ___ ___\n                      | 15 | 20 |   |                                        | 33 |   |   | \n                             |                                                      |\n        --------------------------------------------                     -----------------------\n        |                    |                     |                     |                     |\n ____ ____ ___         ____ ____ ___         ____ ____ ___         ____ ____ ___         ____ ____ ___\n| 10 | 12 |   |  &lt;=&gt;  | 15 | 18 |   |  &lt;=&gt;  | 20 | 21 |   |  &lt;=&gt;  | 30 | 31 |   |  &lt;=&gt;  | 34 | 38 |   |\n</code></pre> <p>B+ \u6811\u548c B-\u6811\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff1a</p> <ul> <li>\u5185\u90e8\u8282\u70b9\u53ea\u662f\u7d22\u5f15\uff0c\u53ea\u6709\u53f6\u5b50\u8282\u70b9\u624d\u4fdd\u5b58\u6570\u636e</li> <li>\u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\u6784\u6210\u4e86\u4e00\u6761\u53cc\u5411\u94fe\u8868</li> <li>\u53f6\u5b50\u8282\u70b9\u5305\u542b\u4e86\u6240\u6709\u5173\u952e\u7801\u503c\uff0c\u800c\u5185\u90e8\u8282\u70b9\u4ec5\u5305\u542b\u7528\u4e8e\u7d22\u5f15\u7684\u5173\u952e\u7801\u503c</li> </ul> <p>B+ \u6811\u548c B-\u6811\u7684\u533a\u522b\u4e3b\u8981\u5728\u4e8e\u53f6\u5b50\u8282\u70b9\uff0c\u5b83\u4eec\u7684\u5185\u90e8\u8282\u70b9\u57fa\u672c\u662f\u4e00\u6837\u7684\u3002</p>"},{"location":"ch05_tree/bplus_tree/#b_2","title":"\u4e8c\u3001\u4e3a\u4ec0\u4e48\u7528 B+ \u6811\uff1f","text":"<ul> <li>B+ \u6811\u7279\u522b\u9002\u5408\u8303\u56f4\u67e5\u8be2\uff0c\u56e0\u4e3a\u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\u662f\u53cc\u5411\u8fde\u63a5\uff0c\u53ef\u4ee5\u987a\u7740\u53cc\u5411\u94fe\u8868\u5bfb\u627e\u6570\u636e</li> <li>B+ \u6811\u53ea\u4f1a\u5728\u53f6\u5b50\u8282\u70b9\u4e0a\u63d2\u5165\u548c\u5220\u9664\u6570\u636e\uff0c\u76f8\u5bf9\u4e8e B-\u6811\u6765\u8bf4\uff0c\u5b9e\u73b0\u4f1a\u7b80\u5355\u4e00\u4e9b</li> </ul>"},{"location":"ch05_tree/bplus_tree/#b_3","title":"\u4e09\u3001\u5982\u4f55\u5b9e\u73b0 B+ \u6811\uff1f","text":"<p>\u548c B-\u6811\u5dee\u4e0d\u591a\uff0cB+ \u6811\u4e5f\u5305\u542b\u4e86\u51e0\u79cd\u64cd\u4f5c\uff1a</p> <ul> <li>\u68c0\u7d22\u5143\u7d20\uff1a\u5728\u6811\u4e2d\u641c\u7d22\u6307\u5b9a\u7684\u5143\u7d20</li> <li>\u63d2\u5165\u5143\u7d20\uff1a\u5f80\u6811\u4e2d\u63d2\u5165\u65b0\u7684\u5143\u7d20</li> <li>\u5220\u9664\u5143\u7d20\uff1a\u4ece\u6811\u4e2d\u5220\u9664\u6307\u5b9a\u7684\u5143\u7d20</li> </ul> <p>\u5176\u4e2d\uff0c\u63d2\u5165\u548c\u5220\u9664\u4f1a\u5bf9 B+ \u6811\u7684\u7ed3\u6784\u4ea7\u751f\u5f71\u54cd\uff0c\u7a0d\u5fae\u9ebb\u70e6\u3002</p>"},{"location":"ch05_tree/bplus_tree/#31","title":"3.1 \u68c0\u7d22\u5143\u7d20","text":"<p>B+ \u6811\u7684\u68c0\u7d22\u548c B-\u6811\u7684\u5dee\u4e0d\u591a\uff1a</p> <ul> <li>\u57fa\u4e8e\u591a\u8def\u67e5\u627e\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u8282\u70b9</li> <li>\u9700\u8981\u4e00\u76f4\u627e\u5230\u53f6\u5b50\u8282\u70b9\uff0c\u56e0\u4e3a\u53ea\u6709\u53f6\u5b50\u8282\u70b9\u6709\u6570\u636e</li> </ul> <p>\u6bd4\u5982\uff0c\u4e0a\u9762\u7684 B+ \u6811\u4e2d\uff0c\u8981\u5bfb\u627e\u5143\u7d20 <code>20</code>\uff0c\u5b83\u7684\u641c\u7d22\u8def\u7ebf\u5c31\u662f\uff1a</p> <pre><code>                                             ____ ___ ___\n                                            | 24 |   |   |\n                                                   |\n                             --------------------------------------------------------\n                             |                                                      |\n                       ____ ____ ___                                          ____ ___ ___\n                      |    | 20 |   |                                        |    |   |   | \n                             |                                                      |\n        --------------------------------------------                     -----------------------\n        |                    |                     |                     |                     |\n ____ ____ ___         ____ ____ ___         ____ ____ ___         ____ ____ ___         ____ ____ ___\n|    |    |   |  &lt;=&gt;  |    |    |   |  &lt;=&gt;  | 20 |    |   |  &lt;=&gt;  |    |    |   |  &lt;=&gt;  |    |    |   |\n</code></pre> <p>\u6ce8\u610f\uff1a\u867d\u7136\u5185\u90e8\u8282\u70b9\u4e5f\u6709 <code>20</code> \u8fd9\u4e2a\u5173\u952e\u7801\u503c\uff0c\u4f46\u662f\u5b83\u6ca1\u6709\u4fdd\u5b58\u6570\u636e\uff0c\u4ec5\u4ec5\u662f\u4f5c\u4e3a\u7d22\u5f15\uff0c\u6240\u4ee5\u8fd8\u662f\u8981\u4e00\u76f4\u641c\u7d22\u5230\u53f6\u5b50\u8282\u70b9\u3002</p> <p>\u8fd9\u4e2a\u68c0\u7d22\u8fc7\u7a0b\u5bf9\u5e94\u7684\u4f2a\u4ee3\u7801\uff1a</p> <pre><code>/**- \u68c0\u7d22\u5143\u7d20 -*/\nprivate V get(BPTNode&lt;K, V&gt; root, K key) {\n    int index = root.findIndex(key);\n    if (root.isLeaf()) {\n        // \u53f6\u5b50\u8282\u70b9\n        if (key.equals(root.getKey(index))) {\n            // \u627e\u5230 key \u5bf9\u5e94\u7684\u8282\u70b9\n            BPTLeaf&lt;K, V&gt; leaf = (BPTLeaf&lt;K, V&gt;) root;\n            return leaf.getValue(index);\n        } else {\n            // \u6ca1\u6709\u627e\u5230\u5bf9\u5e94\u7684\u8282\u70b9\n            return null;\n        }\n    } else {\n        // \u5185\u90e8\u8282\u70b9\uff0c\u5f80\u5b50\u6811\u7ee7\u7eed\u627e key \u5bf9\u5e94\u7684\u8282\u70b9\n        return get(root.getChild(index), key);\n    }\n}\n</code></pre> <p>B+ \u6811\u7684\u68c0\u7d22\u8981\u4e00\u76f4\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u624d\u884c\u3002</p>"},{"location":"ch05_tree/bplus_tree/#32","title":"3.2 \u63d2\u5165\u5143\u7d20","text":"<p>B+ \u6811\u548c B-\u6811\u4e00\u6837\uff1a</p> <ul> <li>\u63d2\u5165\u8282\u70b9\u603b\u662f\u5728\u53f6\u5b50\u8282\u70b9\u63d2\u5165</li> </ul> <p>B-\u6811\u8282\u70b9\u7684\u5206\u88c2\u5b9e\u9645\u53ea\u6709 2 \u79cd\u60c5\u51b5\uff0c\u4f46\u662f B+ \u6811\u7684\u53f6\u5b50\u8282\u70b9\u5206\u88c2\u4f1a\u6709\u70b9\u7279\u6b8a\uff1a</p> <ul> <li>\u53f6\u5b50\u8282\u70b9\u5206\u88c2\u540e\uff0c\u65b0\u7684\u5de6\u53f3\u53f6\u5b50\u8282\u70b9\u4f1a\u4fdd\u7559\u6240\u6709\u7684\u5173\u952e\u7801\u503c</li> <li>\u5206\u88c2\u51fa\u6765\u7684\u7236\u8282\u70b9\u7684\u5173\u952e\u7801\u503c\uff0c\u7b49\u4e8e\u53f3\u53f6\u5b50\u8282\u70b9\u4e2d\u7684\u6700\u5c0f\u5173\u952e\u7801\u503c</li> </ul> <p>\u8fd9\u662f\u56e0\u4e3a\uff0cB+ \u6811\u7684\u6570\u636e\u90fd\u5728\u53f6\u5b50\u4e2d\u4fdd\u5b58\uff0c\u4e0d\u80fd\u5c06\u5176\u4e0a\u6ea2\u5230\u7236\u8282\u70b9\u4e2d\uff0c\u8981\u4fdd\u6301\u8fd9\u79cd\u89c4\u5219\u3002</p> <p>\u7531\u4e8e B+ \u6811\u53f6\u5b50\u8282\u70b9\u548c\u5185\u90e8\u8282\u70b9\u7684\u5206\u88c2\u4e0d\u540c\uff0c\u6240\u4ee5\u4f1a\u5206\u4e3a 4 \u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u53f6\u5b50\u8282\u70b9\u7a7a\u95f4\u8db3\u591f\uff0c\u76f4\u63a5\u63d2\u5165\u5143\u7d20</li> <li>\u53f6\u5b50\u8282\u70b9\u7a7a\u95f4\u4e0d\u8db3\uff0c1 \u4e2a\u8282\u70b9\u5206\u88c2\u6210 3 \u4e2a\u8282\u70b9\uff0c\u6267\u884c\u4e0a\u6ea2\u64cd\u4f5c</li> <li>\u5185\u90e8\u8282\u70b9\u7a7a\u95f4\u8db3\u591f\uff0c\u76f4\u63a5\u63d2\u5165\u5143\u7d20</li> <li>\u5185\u90e8\u8282\u70b9\u7a7a\u95f4\u4e0d\u8db3\uff0c1 \u4e2a\u8282\u70b9\u5206\u88c2\u6210 3 \u4e2a\u8282\u70b9\uff0c\u6267\u884c\u4e0a\u6ea2\u64cd\u4f5c</li> </ol> <p>\u8fd9 4 \u79cd\u60c5\u51b5\u7684\u6548\u679c\u5982\u4e0b\u3002</p>"},{"location":"ch05_tree/bplus_tree/#321-","title":"3.2.1 \u53f6\u5b50\u8282\u70b9-\u76f4\u63a5\u63d2\u5165","text":"<p>\u5f53\u53f6\u5b50\u8282\u70b9\u7a7a\u95f4\u8db3\u591f\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u63d2\u5165\u65b0\u5143\u7d20\uff1a</p> <pre><code> ____ ____ ___ \n| 12 |    |   | \n\n       | \u63d2\u5165 20\n       v\n\n ____ ____ ___ \n| 12 | 20 |   | \n\n       | \u63d2\u5165 9\n       v\n\n ____ ____ ____ \n| 9  | 12 | 20 | \n</code></pre> <p>\u6b64\u65f6\u7684\u53f6\u5b50\u8282\u70b9\u7a7a\u95f4\u8db3\u591f\u65f6\uff0c\u76f4\u63a5\u63d2\u5165\u5143\u7d20\u5c31\u884c\u4e86\u3002</p>"},{"location":"ch05_tree/bplus_tree/#322-","title":"3.2.2 \u53f6\u5b50\u8282\u70b9-\u5206\u88c2\u4e0a\u6ea2","text":"<p>\u5f53\u53f6\u5b50\u8282\u70b9\u7a7a\u95f4\u4e0d\u8db3\u65f6\uff0c\u518d\u63d2\u5165\u65b0\u5143\u7d20\uff0c\u4f1a\u5bfc\u81f4\u8282\u70b9\u5206\u88c2\uff0c\u4ea7\u751f\u4e0a\u6ea2\uff1a</p> <pre><code>             ___ ____ ____ \n            | 9 | 12 | 20 | \n\n                  | \u63d2\u5165 25\n                  v\n\n            ____ ___ ___ \n           | 20 |   |   | \n                  |\n        ---------------------\n        |                   |\n   ___ ____ ___         ____ ____ ____ \n  | 9 | 12 |   |  &lt;=&gt;  | 20 | 25 |    | \n</code></pre> <p>\u8282\u70b9\u7a7a\u95f4\u4e0d\u8db3\u4ee5\u63d2\u5165\u65b0\u5143\u7d20\uff0c\u6240\u4ee5 1 \u4e2a\u8282\u70b9\u4f1a\u5206\u88c2\u6210 3 \u4e2a\u8282\u70b9\u3002\u5176\u4e2d\uff0c</p> <ul> <li>\u53f6\u5b50\u5206\u88c2\u540e\uff0c\u65b0\u7684\u53f6\u5b50\u8282\u70b9\u4f1a\u4fdd\u7559\u6240\u6709\u7684\u5173\u952e\u7801\u503c <code>[9, 12]</code>\u3001<code>[20, 25]</code></li> <li>\u7236\u8282\u70b9\u7684\u5173\u952e\u7801\u503c\uff0c\u7b49\u4e8e\u53f3\u53f6\u5b50\u8282\u70b9\u7684\u6700\u5c0f\u5173\u952e\u7801\u503c <code>[20]</code></li> <li>\u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\uff0c\u8fd8\u9700\u8981\u8865\u5145\u4e0a\u53cc\u5411\u94fe\u63a5</li> </ul> <p>\u5728\u53f6\u5b50\u8282\u70b9\u5206\u88c2\u4e0a\u6ea2\u8fd9\u4e00\u70b9\u4e0a\uff0cB+ \u6811\u548c B-\u6811\u6709\u6240\u4e0d\u540c\u3002</p>"},{"location":"ch05_tree/bplus_tree/#323-","title":"3.2.3 \u5185\u90e8\u8282\u70b9-\u76f4\u63a5\u63d2\u5165","text":"<p>\u4e3a\u4e86\u4fdd\u6301 B+ \u6811\u7684\u9ad8\u5ea6\u5e73\u8861\uff0c\u53f6\u5b50\u8282\u70b9\u4f1a\u5c06\u5206\u88c2\u540e\u7684\u7236\u8282\u70b9\uff0c\u5f80\u4e0a\u63d2\u5165\u4e4b\u524d\u7684\u7236\u8282\u70b9\uff1a</p> <pre><code>                          ____ ___ ___ \n                         | 20 |   |   |\n                                |\n                    ------------------------\n                    |                      |\n               ___ ____ ____         ____ ____ ____ \n              | 9 | 12 | 18 |  &lt;=&gt;  | 20 | 25 |    |\n\n\n                               |  \u63d2\u5165 10\n                               v \n\n                         ____ ____ ___ \n                        | 12 | 20 |   | \n                               |\n        -----------------------------------------------\n        |                      |                      |\n   ___ ____ ____         ____ ____ ____         ____ ____ ____ \n  | 9 | 10 |    |  &lt;=&gt;  | 12 | 18 |    |  &lt;=&gt;  | 20 | 25 |    |\n</code></pre> <p>\u5de6\u5b50\u8282\u70b9 <code>[9, 12, 18]</code> \u63d2\u5165\u65b0\u5143\u7d20 <code>10</code> \u540e\u4f1a\u4ea7\u751f\u4e0a\u6ea2\uff0c<code>12</code> \u4f1a\u4e0a\u6ea2\u7236\u8282\u70b9 <code>[20]</code> \u4e2d\u3002</p> <p>\u56e0\u4e3a\u5185\u90e8\u8282\u70b9 <code>[20]</code> \u7684\u7a7a\u95f4\u8db3\u591f\uff0c\u6240\u4ee5 <code>12</code> \u76f4\u63a5\u63d2\u5165\u5373\u53ef\u3002</p>"},{"location":"ch05_tree/bplus_tree/#324-","title":"3.2.4 \u5185\u90e8\u8282\u70b9-\u5206\u88c2\u4e0a\u6ea2","text":"<p>\u8282\u70b9\u4e0a\u6ea2\u540e\uff0c\u5982\u679c\u7236\u8282\u70b9\u7a7a\u95f4\u4e5f\u6ee1\u4e86\uff0c\u90a3\u4e48\u7236\u8282\u70b9\u4e5f\u4f1a\u51fa\u73b0\u5206\u88c2\u4e0a\u6ea2\uff1a</p> <pre><code>                                               ____ ____ ____ \n                                              | 12 | 20 | 45 | \n                                                     |\n                      ------------------------------------------------------------------\n                      |                   |                     |                      |\n                 ___ ___ ____       ____ ____ ____        ____ ____ ____         ____ ____ ____ \n                | 8 | 9 | 10 |     | 12 | 18 |    |      | 20 | 25 |    |       | 45 | 85 |    | \n\n\n                                                     |  \u63d2\u5165 11\n                                                     v \n\n                                               ____ ____ ____ \n                                              | 20 |    |    | \n                                                     |\n                               ------------------------------------------------------------\n                               |                                                          |\n                         ____ ____ ___                                              ____ ___ ___ \n                        | 10 | 12 |   |                                            | 45 |   |   | \n                               |                                                          |\n        ----------------------------------------------                      -------------------------\n        |                      |                     |                      |                       |\n   ___ ___ ____         ____ ____ ____         ____ ____ ____         ____ ____ ____          ____ ____ ____\n  | 8 | 9 |    |  &lt;=&gt;  | 10 | 11 |    |  &lt;=&gt;  | 12 | 18 |    |  &lt;=&gt;  | 20 | 25 |    |   &lt;=&gt;  | 45 | 85 |    | \n</code></pre> <p>\u63d2\u5165\u5143\u7d20 <code>11</code> \u4e4b\u540e\uff0c\u4f1a\u4f20\u9012\u6027\u5730\u5bfc\u81f4\u8282\u70b9 <code>[8, 9, 10]</code> \u548c\u8282\u70b9 <code>[12, 20, 45]</code> \u90fd\u4ea7\u751f\u5206\u88c2\u4e0a\u6ea2\u3002</p> <p>\u6ce8\u610f\uff0c\u5185\u90e8\u8282\u70b9\u7684\u5206\u88c2\u548c\u53f6\u5b50\u8282\u70b9\u662f\u4e0d\u540c\u7684\uff1a</p> <ul> <li>\u5185\u90e8\u8282\u70b9\u5206\u88c2\u540e\uff0c\u5b50\u8282\u70b9\u4e0d\u4f1a\u51fa\u73b0\u548c\u7236\u8282\u70b9\u4e00\u6837\u7684\u5173\u952e\u7801\u503c</li> <li>\u65b0\u5206\u88c2\u7236\u8282\u70b9\u7684\u5173\u952e\u7801\u503c\uff0c\u7b49\u4e8e\u63d2\u5165\u65b0\u5143\u7d20\u540e\u7684\u4e2d\u95f4\u5173\u952e\u7801\u503c</li> </ul> <p>\u8fd9\u79cd\u5206\u88c2\u4e0a\u6ea2\u53ef\u4ee5\u4e00\u76f4\u6301\u7eed\u5230\u6839\u8282\u70b9\uff0c\u6700\u540e\u53ef\u80fd\u4f1a\u5bfc\u81f4 B+ \u6811\u63d0\u5347\u4e00\u5c42\uff08\u5982\u4e0a\uff09\u3002</p> <p>\u4e0a\u8ff0\u7684 4 \u79cd\u60c5\u51b5\uff0c\u5bf9\u5e94\u7684\u4f2a\u4ee3\u7801\u5dee\u4e0d\u591a\u662f\u8fd9\u6837\uff1a</p> <pre><code>/**- \u63d2\u5165\u65b0\u5143\u7d20 -*/\nprivate BPTNode&lt;K, V&gt; put(BPTNode&lt;K, V&gt; root, K key, V value) {\n    int index = root.findIndex(key);\n    if (root.isLeaf()) {\n        // \u53f6\u5b50\u8282\u70b9\uff0c\u6709\u53ef\u80fd\u53d1\u751f\u4e86\u5206\u88c2\n        BPTLeaf&lt;K, V&gt; leaf = (BPTLeaf&lt;K, V&gt;) root;\n        return leaf.add(key, value);\n    } else {\n        // \u5185\u90e8\u8282\u70b9\uff0c\u6dfb\u52a0\u5230\u5b50\u6811\u7684\u53f6\u5b50\u8282\u70b9\u4e2d\n        BPTInternal&lt;K, V&gt; node = (BPTInternal&lt;K, V&gt;) root;\n        BPTNode&lt;K, V&gt; child = node.getChild(index);\n        child = put(child, key, value);\n\n        // \u6dfb\u52a0\u5230\u5b50\u6811\u4e2d\uff0c\u6709\u53ef\u80fd\u53d1\u751f\u4e86\u5206\u88c2\n        return node.overflow(index, child);\n    }\n}\n</code></pre> <pre><code>/**- \u53f6\u5b50\u8282\u70b9\u7684\u4e0a\u6ea2 -*/\npublic BPTNode&lt;K, V&gt; add(K key, V value) {\n    int index = findIndex(key);\n\n    // 1. \u7a7a\u95f4\u8db3\u591f\uff0c\u53ef\u4ee5\u76f4\u63a5\u63d2\u5165\u65b0\u5143\u7d20\n    if (!this.isFull()) {\n        insertEntry(index + 1, new Entry&lt;&gt;(key, value));\n        return this;\n    }\n\n    // 2. \u7a7a\u95f4\u4e0d\u8db3\uff0c\u9700\u8981\u5206\u88c2\u8282\u70b9\n    return splitNodes(index, new Entry&lt;&gt;(key, value));\n}\n</code></pre> <pre><code>/**- \u5185\u90e8\u8282\u70b9\u7684\u4e0a\u6ea2 -*/\npublic BPTNode&lt;K, V&gt; overflow(int index, BPTNode&lt;K, V&gt; node) {\n    // 1. \u5f53\u524d\u7a7a\u95f4\u8db3\u591f\uff0c\u53ef\u4ee5\u76f4\u63a5\u63d2\u5165\u65b0\u8282\u70b9\n    if (size + node.size() &lt; m) {\n        for (Entry&lt;K, V&gt; entry : node.entries()) {\n            insertEntry(++index, entry);\n        }\n        return this;\n    }\n\n    // 2. \u5f53\u524d\u7a7a\u95f4\u4e0d\u591f\uff0c\u9700\u8981\u5206\u88c2\u6210 3 \u4e2a\u8282\u70b9\n    return splitNodes(index, node);\n}\n</code></pre>"},{"location":"ch05_tree/bplus_tree/#33","title":"3.3 \u5220\u9664\u5143\u7d20","text":"<p>\u5220\u9664\u5143\u7d20\uff0c\u548c\u63d2\u5165\u4e00\u6837\uff0c\u7531\u4e8e\u53f6\u5b50\u8282\u70b9\u7684\u7279\u6b8a\u6027\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u4f1a\u6709 6 \u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u53f6\u5b50\u8282\u70b9\u5143\u7d20\u8db3\u591f\uff0c\u76f4\u63a5\u5220\u9664</li> <li>\u53f6\u5b50\u8282\u70b9\u5143\u7d20\u4e0d\u8db3\uff0c\u770b\u5144\u5f1f\u8282\u70b9\u662f\u5426\u53ef\u4ee5\u501f\u4e00\u4e2a\u8fc7\u6765\uff08\u548c\u5185\u90e8\u8282\u70b9\u4e0d\u540c\uff09</li> <li>\u53f6\u5b50\u8282\u70b9\u5144\u5f1f\u8282\u70b9\u4e0d\u80fd\u501f\uff0c\u90a3\u5c31\u548c\u5144\u5f1f\u5408\u5e76\uff0c\u5220\u9664\u7236\u8282\u70b9\uff08\u548c\u5185\u90e8\u8282\u70b9\u4e0d\u540c\uff09</li> <li>\u5185\u90e8\u8282\u70b9\u5143\u7d20\u8db3\u591f\uff0c\u76f4\u63a5\u5220\u9664</li> <li>\u5185\u90e8\u8282\u70b9\u5143\u7d20\u4e0d\u8db3\uff0c\u770b\u5144\u5f1f\u8282\u70b9\u662f\u5426\u53ef\u4ee5\u501f\u4e00\u4e2a\u8fc7\u6765\uff08\u548c\u53f6\u5b50\u8282\u70b9\u4e0d\u540c\uff09</li> <li>\u5185\u90e8\u8282\u70b9\u5144\u5f1f\u8282\u70b9\u4e0d\u80fd\u501f\uff0c\u90a3\u5c31\u548c\u5144\u5f1f\u5408\u5e76\uff0c\u5220\u9664\u7236\u8282\u70b9\uff08\u548c\u53f6\u5b50\u8282\u70b9\u4e0d\u540c\uff09</li> </ol> <p>\u8fd9\u51e0\u79cd\u60c5\u51b5\u5982\u4e0b\u3002</p>"},{"location":"ch05_tree/bplus_tree/#331-","title":"3.3.1 \u53f6\u5b50\u8282\u70b9-\u76f4\u63a5\u5220\u9664","text":"<p>\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u4e14\u5220\u9664\u5143\u7d20\u540e\uff0c\u5143\u7d20\u6570\u91cf\u4ecd\u7136\u5904\u4e8e\u534a\u6ee1\u72b6\u6001\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\uff1a</p> <pre><code>             ____ ___ ___ \n            | 20 |   |   | \n                   |\n        -----------------------\n        |                     |\n   ___ ____ ___         ____ ____ ____ \n  | 9 | 12 |   |  &lt;=&gt;  | 20 | 25 |    | \n\n                   |  \u5220\u9664 20\n                   v \n\n             ____ ___ ___ \n            | 20 |   |   | \n                   |\n        -----------------------\n        |                     |\n   ___ ____ ___         ____ ____ ____ \n  | 9 | 12 |   |  &lt;=&gt;  | 25 |    |    | \n</code></pre> <p>\u53f6\u5b50\u8282\u70b9 <code>[20, 25]</code> \u5220\u9664 <code>20</code> \u4ee5\u540e\uff0c\u5143\u7d20\u6570\u91cf\u4f9d\u65e7\u6ee1\u8db3\u534a\u6ee1\u72b6\u6001\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\u5e76\u8fd4\u56de\u3002</p> <p>\u6ce8\u610f\uff1a\u76f4\u63a5\u5220\u9664\u53f6\u5b50\u8282\u70b9\u5143\u7d20 <code>20</code> \u540e\uff0c\u5e76\u4e0d\u4f1a\u6539\u53d8\u7236\u8282\u70b9\u7684\u5173\u952e\u7801\u503c <code>20</code>\u3002</p>"},{"location":"ch05_tree/bplus_tree/#332-","title":"3.3.2 \u53f6\u5b50\u8282\u70b9-\u4ece\u5144\u5f1f\u501f","text":"<p>\u5982\u679c\u5220\u9664\u5143\u7d20\u540e\uff0c\u5143\u7d20\u6570\u91cf\u5c11\u4e8e\u4e00\u534a\uff0c\u4e0d\u6ee1\u8db3\u8981\u6c42\uff0c\u5219\u5148\u770b\u4e00\u4e0b\u5144\u5f1f\u8282\u70b9\u80fd\u4e0d\u80fd\u501f\u4e2a\u5143\u7d20\u8fc7\u6765\uff1a</p> <pre><code>              ____ ___ ___ \n             | 20 |   |   | \n                    |\n         -----------------------\n         |                     |\n    ___ ____ ___         ____ ____ ____ \n   | 9 | 12 |   |  &lt;=&gt;  | 25 |    |    | \n\n                    |  \u5220\u9664 25\n                    v \n\n              ____ ___ ___ \n             | 12 |   |   | \n                    |\n         -----------------------\n         |                     |\n    ___ ____ ___         ____ ____ ____ \n   | 9 |    |   |  &lt;=&gt;  | 12 |    |    | \n</code></pre> <p>\u53f3\u5b50\u8282\u70b9 <code>[25]</code> \u5220\u9664 <code>25</code> \u4ee5\u540e\uff0c\u5143\u7d20\u6570\u91cf\u4e0d\u6ee1\u8db3\u8981\u6c42\u4e86\uff0c\u627e\u5144\u5f1f\u8282\u70b9 <code>[9, 12]</code> \u501f\u4e00\u4e2a\u5143\u7d20\u3002</p> <p>\u548c B-\u6811\u7684\u65cb\u8f6c\u4e0d\u540c\uff0cB+ \u6811\u53f6\u5b50\u8282\u70b9\u7684\u501f\u7528\u662f\u8fd9\u6837\u7684\uff1a</p> <ul> <li>\u53f6\u5b50\u8282\u70b9\u76f4\u63a5\u4ece\u5144\u5f1f\u8282\u70b9\u501f\u4e00\u4e2a\u5143\u7d20\u8fc7\u6765</li> <li>\u540c\u65f6\u8fd8\u8981\u66f4\u65b0\u53f6\u5b50\u8282\u70b9\u5bf9\u5e94\u7684\u7236\u8282\u70b9\u5173\u952e\u7801\u503c</li> </ul> <p>\u5220\u9664 <code>25</code> \u4ee5\u540e\uff0c\u9664\u4e86\u501f <code>12</code> \u8fc7\u6765\uff0c\u8fd8\u8981\u66f4\u65b0\u7236\u8282\u70b9\u7684\u5173\u952e\u7801\u503c\u4e3a <code>12</code>\u3002</p> <p>\u4e0a\u9762\u662f\u4ece\u5de6\u5144\u5f1f\u501f\uff0c\u4ece\u53f3\u5144\u5f1f\u501f\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u8981\u66f4\u65b0\u7236\u8282\u70b9\u7684\u5173\u952e\u7801\u503c\uff1a</p> <pre><code>              ____ ___ ___ \n             | 20 |   |   | \n                    |\n         -----------------------\n         |                     |\n    ___ ____ ___         ____ ____ ____ \n   | 9 |    |   |  &lt;=&gt;  | 20 | 25 |    | \n\n                    |  \u5220\u9664 9\n                    v \n\n              ____ ___ ___ \n             | 25 |   |   | \n                    |\n          -----------------------\n          |                     |\n    ____ ___ ___         ____ ____ ____ \n   | 20 |   |   |  &lt;=&gt;  | 25 |    |    | \n</code></pre>"},{"location":"ch05_tree/bplus_tree/#333-","title":"3.3.3 \u53f6\u5b50\u8282\u70b9-\u5408\u5e76\u4e0b\u6ea2","text":"<p>\u5982\u679c\u5144\u5f1f\u8282\u70b9\u501f\u4e0d\u4e86\u5143\u7d20\uff0c\u90a3\u5c31\u5c06<code>\u5de6\u5b50\u8282\u70b9 + \u53f3\u5b50\u8282\u70b9</code>\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u5e76\u5220\u9664<code>\u7236\u8282\u70b9\u5143\u7d20</code>\uff1a</p> <pre><code>              ____ ___ ___ \n             | 25 |   |   |\n                    |\n          -----------------------\n          |                     |\n    ____ ___ ___         ____ ____ ____ \n   | 20 |   |   |  &lt;=&gt;  | 30 |    |    |\n\n                    |  \u5220\u9664 30\n                    v\n\n              ____ ____ ___ \n             | 20 |    |   |\n</code></pre> <p>\u6ce8\u610f\uff1a\u53f6\u5b50\u8282\u70b9\u7684\u5408\u5e76\u4e0b\u6ea2\uff0c\u5e76\u4e0d\u5305\u62ec\u7236\u8282\u70b9\u5143\u7d20\u503c\uff0c\u53ea\u662f\u5de6\u53f3\u53f6\u5b50\u5144\u5f1f\u5408\u5e76\uff0c\u56e0\u4e3a\u5185\u90e8\u8282\u70b9\u4e0d\u662f\u6570\u636e\u8282\u70b9\u3002</p>"},{"location":"ch05_tree/bplus_tree/#334-","title":"3.3.4 \u5185\u90e8\u8282\u70b9-\u76f4\u63a5\u5220\u9664","text":"<p>\u53f6\u5b50\u8282\u70b9\u5408\u5e76\u4e0b\u6ea2\u540e\uff0c\u7236\u8282\u70b9\u9700\u8981\u5220\u9664\u5bf9\u5e94\u7684\u7236\u8282\u70b9\u5143\u7d20\uff0c\u5982\u679c\u7236\u8282\u70b9\u7a7a\u95f4\u8db3\u591f\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\uff1a</p> <pre><code>                         ____ ____ ___ \n                        | 12 | 20 |   | \n                               |\n        -----------------------------------------------\n        |                      |                      |\n   ___ ____ ____         ____ ____ ____         ____ ____ ____ \n  | 9 | 10 |    |  &lt;=&gt;  | 12 | 18 |    |  &lt;=&gt;  | 20 |    |    |\n\n                               |  \u5220\u9664 20\n                               v\n\n                         ____ ____ ___ \n                        | 12 |    |   | \n                               |\n                   ------------------------\n                   |                      |\n              ___ ____ ____         ____ ____ ___\n             | 9 | 10 |    |  &lt;=&gt;  | 12 | 18 |   |\n</code></pre> <p>\u5220\u9664 <code>20</code> \u4ee5\u540e\uff0c\u4f1a\u9020\u6210\u53f6\u5b50\u8282\u70b9\u5408\u5e76\u4e0b\u6ea2\uff0c\u7236\u8282\u70b9\u5143\u7d20 <code>20</code> \u88ab\u5220\u9664\u3002</p> <p>\u7531\u4e8e\u7236\u8282\u70b9 <code>[12, 20]</code> \u7a7a\u95f4\u8db3\u591f\uff0c\u5220\u9664 <code>20</code> \u540e\u4f9d\u65e7\u6ee1\u8db3\u8981\u6c42\uff0c\u6240\u4ee5\u76f4\u63a5\u5220\u9664\u5373\u53ef\u3002</p>"},{"location":"ch05_tree/bplus_tree/#335-","title":"3.3.5 \u5185\u90e8\u8282\u70b9-\u4ece\u5144\u5f1f\u501f","text":"<p>\u5982\u679c\u5185\u90e8\u8282\u70b9\u5220\u9664\u65f6\uff0c\u53d1\u73b0\u7a7a\u95f4\u4e0d\u8db3\uff0c\u5219\u5148\u8003\u8651\u4ece\u5144\u5f1f\u8282\u70b9\u501f\u4e00\u4e2a\u5143\u7d20\uff1a</p> <pre><code>                                               ____ ____ ____ \n                                              | 20 |    |    | \n                                                     |\n                               ------------------------------------------------------------\n                               |                                                          |\n                         ____ ____ ___                                              ____ ___ ___ \n                        | 10 | 12 |   |                                            | 45 |   |   | \n                               |                                                          |\n        ----------------------------------------------                      -------------------------\n        |                      |                     |                      |                       |\n   ___ ___ ____         ____ ____ ____         ____ ____ ____         ____ ____ ____          ____ ____ ____\n  | 8 | 9 |    |  &lt;=&gt;  | 10 |    |    |  &lt;=&gt;  | 12 | 18 |    |  &lt;=&gt;  | 20 | 25 |    |   &lt;=&gt;  | 85 |    |    | \n\n                                                     |  \u5220\u9664 85\n                                                     v\n\n                                               ____ ____ ____ \n                                              | 12 |    |    | \n                                                     |\n                              -----------------------------------------------\n                              |                                             |\n                        ____ ____ ___                                 ____ ___ ___ \n                       | 10 |    |   |                               | 20 |   |   | \n                              |                                             |\n                   ------------------------                     ------------------------\n                   |                      |                     |                      |\n              ___ ___ ____         ____ ____ ____         ____ ____ ____         ____ ____ ____\n             | 8 | 9 |    |  &lt;=&gt;  | 10 |    |    |  &lt;=&gt;  | 12 | 18 |    |  &lt;=&gt;  | 20 | 25 |    |\n</code></pre> <p>\u5220\u9664\u5143\u7d20 <code>85</code>\uff0c\u4f1a\u9020\u6210\u53f6\u5b50\u8282\u70b9 <code>[20, 25]</code>\u3001<code>[85]</code> \u5408\u5e76\uff0c\u5e76\u5220\u9664\u7236\u8282\u70b9\u5143\u7d20 <code>45</code>\u3002</p> <p>\u4f46\u662f\u5185\u90e8\u8282\u70b9 <code>[45]</code> \u7531\u4e8e\u7a7a\u95f4\u4e0d\u8db3\uff0c\u5c31\u9700\u8981\u4ece\u5144\u5f1f\u8282\u70b9 <code>[10, 12]</code> \u501f\u4e00\u4e2a\u5143\u7d20\u8fc7\u6765\u624d\u884c\u3002</p> <p>\u4e0d\u8fc7\uff0c\u5185\u90e8\u8282\u70b9\u7684\u501f\u7528\u548c\u53f6\u5b50\u8282\u70b9\u7684\u501f\u7528\u4e0d\u540c\uff1a</p> <ul> <li>\u5185\u90e8\u8282\u70b9\u501f\u7528\uff0c\u5b9e\u9645\u4e0a\u662f\u65cb\u8f6c\u64cd\u4f5c\uff0c\u5c06\u5144\u5f1f\u8282\u70b9\u65cb\u5230\u7236\u8282\u70b9\uff0c\u7236\u8282\u70b9\u65cb\u5230\u5f53\u524d\u8282\u70b9</li> </ul> <p>\u4e0a\u9762\u501f\u7528\u7684\u5143\u7d20 <code>12</code>\uff0c\u5b9e\u9645\u4f1a\u65cb\u8f6c\u5230\u7236\u8282\u70b9\uff0c\u7136\u540e\u7236\u8282\u70b9 <code>20</code> \u518d\u65cb\u8f6c\u5230\u53f3\u5b50\u8282\u70b9\u4e2d\u3002 </p>"},{"location":"ch05_tree/bplus_tree/#336-","title":"3.3.6 \u5185\u90e8\u8282\u70b9-\u5408\u5e76\u4e0b\u6ea2","text":"<p>\u5982\u679c\u5185\u90e8\u8282\u70b9\u7684\u5144\u5f1f\u8282\u70b9\u501f\u4e0d\u4e86\u5143\u7d20\uff0c\u53ea\u80fd\u5c06\u7236\u5b50\u8282\u70b9\u8fdb\u884c\u5408\u5e76\uff0c\u4ea7\u751f\u4e0b\u6ea2\uff1a</p> <pre><code>                                               ____ ____ ____ \n                                              | 12 |    |    | \n                                                     |\n                              -----------------------------------------------\n                              |                                             |\n                        ____ ____ ___                                 ____ ___ ___ \n                       | 10 |    |   |                               | 20 |   |   | \n                              |                                             |\n                   ------------------------                     ------------------------\n                   |                      |                     |                      |\n              ___ ___ ____         ____ ____ ____         ____ ____ ____         ____ ____ ____\n             | 8 | 9 |    |  &lt;=&gt;  | 10 |    |    |  &lt;=&gt;  | 12 | 18 |    |  &lt;=&gt;  | 20 |    |    |\n\n                                                     |  \u5220\u9664 20\n                                                     v\n\n                                               ____ ____ ___\n                                              | 10 | 12 |   |\n                                                     |\n                                  -------------------------------------------\n                               |                     |                      |\n                          ___ ___ ____         ____ ____ ____         ____ ____ ____\n                         | 8 | 9 |    |  &lt;=&gt;  | 10 |    |    |  &lt;=&gt;  | 12 | 18 |    |\n</code></pre> <p>\u5220\u9664\u5143\u7d20 <code>20</code>\uff0c\u4f1a\u9020\u6210\u53f6\u5b50\u8282\u70b9 <code>[12, 18]</code>\u3001<code>[20]</code> \u5408\u5e76\uff0c\u5e76\u5220\u9664\u7236\u8282\u70b9\u5143\u7d20 <code>20</code>\u3002</p> <p>\u5220\u9664\u5185\u90e8\u8282\u70b9\u5143\u7d20 <code>20</code> \u65f6\uff0c\u7531\u4e8e\u5176\u7a7a\u95f4\u4e0d\u8db3\uff0c\u4e14\u5144\u5f1f\u8282\u70b9\u65e0\u6cd5\u501f\u7528\uff0c\u53ea\u80fd\u5408\u5e76\u7236\u5b50\u8282\u70b9\uff0c\u4ea7\u751f\u4e0b\u6ea2\u4e86\u3002</p> <p>\u6ce8\u610f\uff0c\u5185\u90e8\u8282\u70b9\u7684\u5408\u5e76\u548c\u53f6\u5b50\u8282\u70b9\u7684\u5408\u5e76\u4e0d\u540c\uff1a</p> <ul> <li>\u5185\u90e8\u8282\u70b9\u7684\u5408\u5e76\u4e0b\u6ea2\uff0c\u5305\u62ec\u4e86 <code>\u7236\u8282\u70b9 + \u5de6\u5b50\u8282\u70b9 + \u53f3\u5b50\u8282\u70b9</code></li> </ul> <p>\u5373\u4e0a\u9762\u7684\u7236\u5b50\u8282\u70b9 <code>[12]</code>\u3001<code>[10]</code>\u3001<code>[20]</code> \u4f1a\u5408\u5e76\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u65b0\u8282\u70b9\u3002</p> <p>\u4e0b\u6ea2\u548c\u4e0a\u6ea2\u4e00\u6837\uff0c\u4e5f\u53ef\u80fd\u4f1a\u6301\u7eed\u4e0b\u6ea2\uff0c\u4e00\u76f4\u6301\u7eed\u5230\u6839\u8282\u70b9\uff0c\u6700\u7ec8\u5bfc\u81f4\u6811\u7684\u5c42\u7ea7\u4e0b\u964d\u3002</p> <p>\u4e0a\u8ff0\u60c5\u51b5\u7684\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/**- \u5220\u9664\u5143\u7d20 -*/\nprivate BPTNode&lt;K, V&gt; remove(BPTNode&lt;K, V&gt; root, K key) {\n    int index = root.findIndex(key);\n    if (root.isLeaf()) {\n        BPTLeaf&lt;K, V&gt; leaf = (BPTLeaf&lt;K, V&gt;) root;\n        if (key.equals(root.getKey(index))) {\n            // \u627e\u5230\u5bf9\u5e94\u8282\u70b9\u540e\u79fb\u9664\u5143\u7d20\n            return leaf.delete(index);\n        } else {\n            // \u6ca1\u627e\u5230\u5bf9\u5e94\u8282\u70b9\uff0c\u76f4\u63a5\u8fd4\u56de\n            return leaf;\n        }\n    } else {\n        BPTInternal&lt;K, V&gt; node = (BPTInternal&lt;K, V&gt;) root;\n        // \u5728\u5b50\u6811\u5185\u9012\u5f52\u79fb\u9664\u5143\u7d20\n        remove(node.getChild(index), key);\n        // \u79fb\u9664\u540e\u53ef\u80fd\u9700\u8981\u7236\u8282\u70b9\u4e0b\u6ea2\n        return node.underflow(index);\n    }\n}\n</code></pre> <pre><code>/**- \u53f6\u5b50\u8282\u70b9\u7684\u4e0b\u6ea2 -*/\npublic BPTNode&lt;K, V&gt; delete(K key, V value) {\n    int index = findIndex(key);\n\n    // 1. \u7a7a\u95f4\u8db3\u591f\uff0c\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\u5143\u7d20\n    if (this.isEnough()) {\n        removeEntry(index);\n        return this;\n    }\n\n    // 2. \u4ece\u5144\u5f1f\u8282\u70b9\u501f\u4e00\u4e2a\u5143\u7d20\n    if (borrowLeft(index) || borrowRight(index)) {\n        return this;\n    }\n\n    // 3. \u5408\u5e76\u5de6\u53f3\u5144\u5f1f\u8282\u70b9\n    return mergeNodes(index);\n}\n</code></pre> <pre><code>/**- \u5185\u90e8\u8282\u70b9\u7684\u4e0b\u6ea2 -*/\npublic BPTNode&lt;K, V&gt; underflow(int index) {\n    // 1. \u7a7a\u95f4\u8db3\u591f\uff0c\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\u5143\u7d20\n    if (this.isEnough()) {\n        removeEntry(index);\n        return this;\n    }\n\n    // 2. \u4ece\u5144\u5f1f\u8282\u70b9\u501f\u4e00\u4e2a\u5143\u7d20\n    if (borrowLeft(index) || borrowRight(index)) {\n        return this;\n    }\n\n    // 3. \u5408\u5e76\u7236\u5143\u7d20 + \u5de6\u53f3\u5b50\u8282\u70b9\n    return mergeNodes(index);\n}\n</code></pre>"},{"location":"ch05_tree/bplus_tree/#_1","title":"\u603b\u7ed3","text":"<ul> <li>\u6027\u8d28<ul> <li>\u5185\u90e8\u8282\u70b9\u53ea\u662f\u7d22\u5f15\uff0c\u53ea\u6709\u53f6\u5b50\u8282\u70b9\u624d\u4fdd\u5b58\u6570\u636e</li> <li>\u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\u6784\u6210\u4e86\u4e00\u6761\u53cc\u5411\u94fe\u8868</li> <li>\u53f6\u5b50\u8282\u70b9\u5305\u542b\u4e86\u6240\u6709\u5173\u952e\u7801\u503c\uff0c\u800c\u5185\u90e8\u8282\u70b9\u4ec5\u5305\u542b\u7528\u4e8e\u7d22\u5f15\u7684\u5173\u952e\u7801\u503c</li> </ul> </li> <li>\u68c0\u7d22<ul> <li>\u591a\u8def\u67e5\u627e\uff1a\u4e00\u76f4\u627e\u5230\u53f6\u5b50\u8282\u70b9</li> </ul> </li> <li>\u63d2\u5165<ol> <li>\u53f6\u5b50\u8282\u70b9\u7a7a\u95f4\u8db3\u591f\uff0c\u76f4\u63a5\u63d2\u5165</li> <li>\u53f6\u5b50\u8282\u70b9\u7a7a\u95f4\u4e0d\u8db3\uff0c\u5206\u88c2\u4e0a\u6ea2\uff08\u7236\u8282\u70b9\u5173\u952e\u7801\u503c\u7b49\u4e8e\u53f3\u53f6\u5b50\u8282\u70b9\u7684\u6700\u5c0f\u5173\u952e\u7801\u503c\uff09</li> <li>\u5185\u90e8\u8282\u70b9\u7a7a\u95f4\u8db3\u591f\uff0c\u76f4\u63a5\u63d2\u5165</li> <li>\u5185\u90e8\u8282\u70b9\u7a7a\u95f4\u4e0d\u8db3\uff0c\u5206\u88c2\u4e0a\u6ea2\uff08\u8282\u70b9\u7684\u5173\u952e\u7801\u503c\u90fd\u4e0d\u4e00\u6837\uff09</li> </ol> </li> <li>\u5220\u9664<ol> <li>\u53f6\u5b50\u8282\u70b9\u7a7a\u95f4\u8db3\u591f\uff0c\u76f4\u63a5\u5220\u9664</li> <li>\u53f6\u5b50\u8282\u70b9\u7a7a\u95f4\u4e0d\u8db3\uff0c\u4ece\u5144\u5f1f\u501f\uff08\u79fb\u52a8\uff09</li> <li>\u53f6\u5b50\u8282\u70b9\u5144\u5f1f\u8282\u70b9\u65e0\u6cd5\u501f\u7528\uff0c\u5408\u5e76\u5de6\u53f3\u53f6\u5b50\u8282\u70b9\uff0c\u5220\u9664\u7236\u5143\u7d20\uff0c\u6267\u884c\u4e0b\u6ea2\uff08\u4ec5\u5408\u5e76\u5144\u5f1f\u53f6\u5b50\u8282\u70b9\uff09</li> <li>\u5185\u90e8\u8282\u70b9\u7a7a\u95f4\u8db3\u591f\uff0c\u76f4\u63a5\u5220\u9664</li> <li>\u5185\u90e8\u8282\u70b9\u7a7a\u95f4\u4e0d\u8db3\uff0c\u4ece\u5144\u5f1f\u501f\uff08\u65cb\u8f6c\uff09</li> <li>\u5185\u90e8\u8282\u70b9\u5144\u5f1f\u8282\u70b9\u65e0\u6cd5\u501f\u7528\uff0c\u5408\u5e76\u7236\u5b50\u8282\u70b9\uff0c\u6267\u884c\u4e0b\u6ea2\uff08\u5408\u5e76\u7236\u5b50\u8282\u70b9\uff09</li> </ol> </li> </ul>"},{"location":"ch05_tree/bplus_tree/#_2","title":"\u53c2\u8003","text":"<p>\u300a\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790\uff08\u7b2c\u4e09\u7248\uff09\u300b</p> <p>https://www.cnblogs.com/nullzx/p/8729425.html</p>"},{"location":"ch05_tree/bplus_tree/#_3","title":"\u9644\u5f55","text":""},{"location":"ch05_tree/bplus_tree/#b_4","title":"B+ \u6811\u63a5\u53e3","text":"<pre><code>/**\n * B+ \u6811\u63a5\u53e3\u5b9a\u4e49\n *\n * @author weijiaduo\n * @since 2023/1/9\n */\npublic interface BPTree&lt;K extends Comparable&lt;K&gt;, V&gt;  {\n\n    /**\n     * \u67e5\u627e\u6307\u5b9a key \u7684\u503c\n     *\n     * @param key key\n     * @return value\n     */\n    V get(K key);\n\n    /**\n     * \u6dfb\u52a0\u6307\u5b9a key-value \u7684\u8282\u70b9\n     *\n     * @param key   key\n     * @param value value\n     */\n    void put(K key, V value);\n\n    /**\n     * \u5220\u9664\u6307\u5b9a key \u7684\u8282\u70b9\n     *\n     * @param key key\n     */\n    void remove(K key);\n\n}\n</code></pre>"},{"location":"ch05_tree/bplus_tree/#b_5","title":"B+ \u6811\u5b9e\u73b0","text":"<pre><code>/**\n * B+ \u6811\u5b9e\u73b0\u7c7b\n *\n * @author weijiaduo\n * @since 2023/1/9\n */\npublic class BPTreeImpl&lt;K extends Comparable&lt;K&gt;, V&gt; implements BPTree&lt;K, V&gt; {\n\n    /**\n     * \u6839\u8282\u70b9\n     */\n    private BPTNode&lt;K, V&gt; root;\n    /**\n     * m \u9636 B+ \u6811\n     */\n    private final int m;\n\n    /**\n     * B+\u6811\u6784\u9020\u5668\n     *\n     * @param m \u6307\u5b9a m \u9636 B+ \u6811\n     */\n    public BPTreeImpl(int m) {\n        this.m = m;\n    }\n\n    @Override\n    public V get(K key) {\n        return get(root, key);\n    }\n\n    /**\n     * \u4ece\u5f53\u524d\u8282\u70b9\u5f00\u59cb\u627e\u6307\u5b9a key \u7684\u503c\n     *\n     * @param root \u5f53\u524d\u6839\u8282\u70b9\n     * @param key  key\n     * @return value\n     */\n    private V get(BPTNode&lt;K, V&gt; root, K key) {\n        if (root == null) {\n            return null;\n        }\n\n        // \u67e5\u627e\u5f53\u524d key \u6240\u5728\u7684\u4f4d\u7f6e\n        int index = root.findIndex(key);\n        if (root.isLeaf()) {\n            if (key.equals(root.getKey(index))) {\n                BPTLeaf&lt;K, V&gt; leaf = (BPTLeaf&lt;K, V&gt;) root;\n                return leaf.getValue(index);\n            } else {\n                return null;\n            }\n        } else {\n            // \u5f80\u5b50\u6811\u7ee7\u7eed\u627e key \u5bf9\u5e94\u7684\u8282\u70b9\n            return get(root.getChild(index), key);\n        }\n    }\n\n    @Override\n    public void put(K key, V value) {\n        root = put(root, key, value);\n    }\n\n    /**\n     * \u5728\u5f53\u524d\u6811\u5185\u6dfb\u52a0\u6307\u5b9a\u7684 key-value\n     *\n     * @param root  \u5f53\u524d\u6839\u8282\u70b9\n     * @param key   key\n     * @param value value\n     * @return \u65b0\u7684\u6839\u8282\u70b9\n     */\n    private BPTNode&lt;K, V&gt; put(BPTNode&lt;K, V&gt; root, K key, V value) {\n        // 1. \u6574\u68f5\u6811\u4e3a\u7a7a\u65f6\uff0c\u63d2\u5165\u65b0\u8282\u70b9\n        if (root == null) {\n            BPTLeaf&lt;K, V&gt; leaf = new BPTLeaf&lt;&gt;(m);\n            return leaf.add(key, value);\n        }\n\n        int index = root.findIndex(key);\n        if (root.isLeaf()) {\n            // 2. \u53f6\u5b50\u8282\u70b9\n            BPTLeaf&lt;K, V&gt; leaf = (BPTLeaf&lt;K, V&gt;) root;\n\n            // \u9a8c\u8bc1\u662f\u5426\u5df2\u5b58\u5728\uff0c\u5b58\u5728\u5219\u53ea\u9700\u66f4\u65b0\u503c\n            if (key.equals(leaf.getKey(index))) {\n                leaf.setValue(index, value);\n                return leaf;\n            }\n\n            // \u6dfb\u52a0\u5230\u53f6\u5b50\u8282\u70b9\u4e2d\uff0c\u6709\u53ef\u80fd\u53d1\u751f\u4e86\u5206\u88c2\n            return leaf.add(key, value);\n        } else {\n            // 3. \u5185\u90e8\u8282\u70b9\uff0c\u6dfb\u52a0\u5230\u5b50\u6811\u7684\u53f6\u5b50\u8282\u70b9\u4e2d\n            BPTInternal&lt;K, V&gt; node = (BPTInternal&lt;K, V&gt;) root;\n            BPTNode&lt;K, V&gt; child = node.getChild(index);\n            child = put(child, key, value);\n\n            // \u6dfb\u52a0\u5230\u5b50\u6811\u4e2d\uff0c\u6709\u53ef\u80fd\u53d1\u751f\u4e86\u5206\u88c2\n            return node.overflow(index, child);\n        }\n    }\n\n    @Override\n    public void remove(K key) {\n        root = remove(root, key);\n        if (root != null &amp;&amp; root.isEmpty()) {\n            // \u6811\u7684\u9ad8\u5ea6\u4e0b\u964d\n            root = root.firstChild();\n        }\n    }\n\n    /**\n     * \u5728\u5f53\u524d\u6811\u5185\u5220\u9664\u6307\u5b9a key \u7684\u8282\u70b9\n     *\n     * @param root \u5f53\u524d\u6839\u8282\u70b9\n     * @param key  key\n     * @return \u65b0\u7684\u6839\u8282\u70b9\n     */\n    private BPTNode&lt;K, V&gt; remove(BPTNode&lt;K, V&gt; root, K key) {\n        if (root == null) {\n            return null;\n        }\n\n        int index = root.findIndex(key);\n        if (root.isLeaf()) {\n            BPTLeaf&lt;K, V&gt; leaf = (BPTLeaf&lt;K, V&gt;) root;\n            if (key.equals(root.getKey(index))) {\n                // \u627e\u5230\u5bf9\u5e94\u8282\u70b9\u540e\u79fb\u9664\u5143\u7d20\n                return leaf.delete(index);\n            } else {\n                // \u6ca1\u627e\u5230\u5bf9\u5e94\u8282\u70b9\uff0c\u76f4\u63a5\u8fd4\u56de\n                return leaf;\n            }\n        } else {\n            BPTInternal&lt;K, V&gt; node = (BPTInternal&lt;K, V&gt;) root;\n            // \u5728\u5b50\u6811\u5185\u9012\u5f52\u79fb\u9664\u5143\u7d20\n            remove(node.getChild(index), key);\n            // \u79fb\u9664\u540e\u53ef\u80fd\u9700\u8981\u7236\u8282\u70b9\u4e0b\u6ea2\n            return node.underflow(index);\n        }\n    }\n\n}\n</code></pre>"},{"location":"ch05_tree/bplus_tree/#b_6","title":"B+ \u8282\u70b9\u5b9a\u4e49","text":"<pre><code>/**\n * B+\u6811\u57fa\u7c7b\u8282\u70b9\n *\n * @author weijiaduo\n * @since 2023/1/10\n */\npublic abstract class BPTNode&lt;K extends Comparable&lt;K&gt;, V&gt; {\n\n    /**\n     * m \u9636 B \u6811\n     */\n    protected final int m;\n    /**\n     * \u8282\u70b9\u5143\u7d20\u9608\u503c\n     */\n    protected final int threshold;\n    /**\n     * \u8282\u70b9\u5143\u7d20\u6570\u7ec4\n     * &lt;p&gt;\n     * \u5143\u7d20\u7684\u7b2c 0 \u4f4d\u59cb\u7ec8\u662f\u4e00\u4e2a\u5360\u4f4d\u5143\u7d20\uff0c\u4e13\u95e8\u7528\u4e8e\u5b58\u653e\u6700\u5de6\u5b50\u8282\u70b9\n     * &lt;p&gt;\n     * \u6240\u4ee5\u4e00\u4e2a\u8282\u70b9\u80fd\u62e5\u6709\u7684\u5143\u7d20\u4e2a\u6570\u6700\u591a\u662f m - 1\n     */\n    protected final Object[] elements;\n    /**\n     * \u5b9e\u9645\u5143\u7d20\u6570\u91cf\n     * &lt;p&gt;\n     * \u53d6\u503c\u8303\u56f4\u662f [0, m - 1]\n     */\n    protected int size;\n\n    public BPTNode(int m) {\n        this.m = m;\n        this.threshold = half(m);\n        elements = new Object[m];\n        // \u6700\u5de6\u5143\u7d20\u5360\u4f4d\uff0c\u7528\u4e8e\u5b58\u653e\u6700\u5de6\u5b50\u8282\u70b9\u6307\u9488\n        elements[0] = new Entry&lt;K, V&gt;(null, null);\n        size = 0;\n    }\n\n    /**\n     * @return \u5143\u7d20\u6570\u91cf\n     */\n    public int size() {\n        return size;\n    }\n\n    /**\n     * \u534a\u6570\u9608\u503c ceil(m / 2) - 1\n     *\n     * @param m \u5f53\u524d\u503c\n     * @return \u534a\u6570\u9608\u503c\n     */\n    protected int half(int m) {\n        return (m + 1) / 2 - 1;\n    }\n\n    /**\n     * \u662f\u5426\u5df2\u6ee1\n     *\n     * @return true\u5df2\u6ee1/false\u672a\u6ee1\n     */\n    public boolean isFull() {\n        return size == m - 1;\n    }\n\n    /**\n     * \u662f\u5426\u4e3a\u7a7a\n     *\n     * @return true\u4e3a\u7a7a/false\u975e\u7a7a\n     */\n    public boolean isEmpty() {\n        return size == 0;\n    }\n\n    /**\n     * \u8282\u70b9\u662f\u5426\u5408\u6cd5\n     * &lt;p&gt;\n     * \u8282\u70b9\u7684\u5143\u7d20\u6570\u91cf\u8981\u6c42\u5927\u4e8e\u7b49\u4e8e\u9608\u503c\n     *\n     * @return true\u5408\u6cd5/false\u975e\u6cd5\n     */\n    public boolean isLegal() {\n        return size &gt;= threshold;\n    }\n\n    /**\n     * \u662f\u5426\u53ef\u501f\u7528\u5143\u7d20\u7ed9\u522b\u7684\u8282\u70b9\n     * &lt;p&gt;\n     * \u5f53\u8282\u70b9\u7684\u5143\u7d20\u6570\u91cf\u5927\u4e8e\u9608\u503c\u65f6\uff0c\u624d\u53ef\u4ee5\u5916\u501f\u5143\u7d20\n     *\n     * @return true\u53ef\u501f\u7528/false\u4e0d\u53ef\u501f\u7528\n     */\n    protected boolean canBorrow() {\n        return size &gt; threshold;\n    }\n\n    /**\n     * \u662f\u5426\u662f\u53f6\u5b50\u8282\u70b9\n     * &lt;p&gt;\n     * \u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u975e\u7a7a\u5b50\u8282\u70b9\u65f6\u624d\u662f\u53f6\u5b50\u8282\u70b9\n     *\n     * @return true\u53f6\u5b50\u8282\u70b9/false\u5185\u90e8\u8282\u70b9\n     */\n    public abstract boolean isLeaf();\n\n    /**\n     * \u83b7\u53d6\u6240\u6709\u7684\u5143\u7d20\n     *\n     * @return \u5143\u7d20\u96c6\u5408\n     */\n    protected List&lt;Entry&lt;K, V&gt;&gt; entries() {\n        List&lt;Entry&lt;K, V&gt;&gt; entries = new ArrayList&lt;&gt;(size);\n        // \u5143\u7d20\u4ece\u7d22\u5f15 1 \u5f00\u59cb\n        for (int i = 1; i &lt;= size; i++) {\n            entries.add(getEntry(i));\n        }\n        return entries;\n    }\n\n    /**\n     * \u83b7\u53d6\u6240\u6709\u7684 key\n     *\n     * @return key \u96c6\u5408\n     */\n    public List&lt;K&gt; keys() {\n        List&lt;K&gt; keys = new ArrayList&lt;&gt;(size);\n        // \u5143\u7d20\u4ece\u7d22\u5f15 1 \u5f00\u59cb\n        for (int i = 1; i &lt;= size; i++) {\n            keys.add(getKey(i));\n        }\n        return keys;\n    }\n\n    /**\n     * \u83b7\u53d6\u6307\u5b9a\u4f4d\u7f6e\u7684 key\n     *\n     * @param index \u7d22\u5f15\n     * @return key\n     */\n    public K getKey(int index) {\n        return getEntry(index).key;\n    }\n\n    /**\n     * \u83b7\u53d6\u6240\u6709\u7684\u5b50\u8282\u70b9\n     * &lt;p&gt;\n     * \u6ce8\u610f\uff1a\u662f\u6240\u6709\u53ef\u80fd\u7684\u5b50\u8282\u70b9\uff0c\u4e5f\u5305\u62ec\u4e86 null \u5b50\u8282\u70b9\n     *\n     * @return \u5b50\u8282\u70b9\u96c6\u5408\n     */\n    public List&lt;BPTNode&lt;K, V&gt;&gt; children() {\n        List&lt;BPTNode&lt;K, V&gt;&gt; children = new ArrayList&lt;&gt;(size + 1);\n        // \u5b50\u8282\u70b9\u4ece\u7d22\u5f15 0 \u5f00\u59cb\n        for (int i = 0; i &lt;= size; i++) {\n            children.add(getChild(i));\n        }\n        return children;\n    }\n\n    /**\n     * \u8fd4\u56de\u7b2c\u4e00\u4e2a\u5b50\u8282\u70b9\n     * &lt;p&gt;\n     * \u6ce8\u610f\uff1a\u4e0d\u662f\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5b50\u8282\u70b9\uff0c\u800c\u662f\u7b2c 1 \u4e2a\u5143\u7d20\u7684\u5de6\u5b50\u8282\u70b9\n     *\n     * @return \u7b2c\u4e00\u4e2a\u5b50\u8282\u70b9\n     */\n    public BPTNode&lt;K, V&gt; firstChild() {\n        return getChild(0);\n    }\n\n    /**\n     * \u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5b50\u8282\u70b9\n     * &lt;p&gt;\n     * \u6ce8\u610f\uff1a\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u975e\u7a7a\u5b50\u8282\u70b9\uff0c\u800c\u662f\u6700\u540e 1 \u4e2a\u5143\u7d20\u7684\u53f3\u5b50\u8282\u70b9\n     *\n     * @return \u6700\u540e\u4e00\u4e2a\u5b50\u8282\u70b9\n     */\n    public BPTNode&lt;K, V&gt; lastChild() {\n        return getChild(size);\n    }\n\n    /**\n     * \u83b7\u53d6\u6307\u5b9a\u4f4d\u7f6e\u7684\u4e0b\u4e00\u5c42\u5b50\u8282\u70b9\n     *\n     * @param index \u6307\u5b9a\u4f4d\u7f6e\n     * @return \u4e0b\u4e00\u5c42\u5b50\u6811\u6839\u8282\u70b9\n     */\n    public BPTNode&lt;K, V&gt; getChild(int index) {\n        return getEntry(index).pointer;\n    }\n\n    /**\n     * \u66f4\u65b0\u6307\u5b9a\u4f4d\u7f6e\u7684\u5b50\u8282\u70b9\n     *\n     * @param index \u7d22\u5f15\n     * @param node  \u5b50\u8282\u70b9\n     */\n    public void setChild(int index, BPTNode&lt;K, V&gt; node) {\n        getEntry(index).pointer = node;\n    }\n\n    /**\n     * \u67e5\u627e\u6307\u5b9a key \u7684\u4f4d\u7f6e\n     * &lt;p&gt;\n     * \u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e key \u7684\u4f4d\u7f6e\n     *\n     * @param key key\n     * @return key \u7684\u4f4d\u7f6e\n     */\n    public int findIndex(K key) {\n        // \u7b2c 0 \u4f4d\u662f\u5360\u4f4d\u5143\u7d20\uff0c\u8fd8\u6ca1\u7b97\u5728\u5185\n        return 1 + binaryle(keys(), key);\n    }\n\n    /**\n     * \u4e8c\u5206\u67e5\u627e\uff0c\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e key \u7684\u4f4d\u7f6e\n     *\n     * @param keys key \u96c6\u5408\n     * @param key  \u6307\u5b9a key\n     * @return \u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e key \u7684\u4f4d\u7f6e/-1\n     */\n    protected int binaryle(List&lt;K&gt; keys, K key) {\n        int size = keys.size();\n        int l = 0, r = size - 1;\n        while (l &lt;= r) {\n            int m = l + (r - l) / 2;\n            K k = keys.get(m);\n            if (k.compareTo(key) &lt;= 0) {\n                if (m == size - 1 || keys.get(m + 1).compareTo(key) &gt; 0) {\n                    return m;\n                }\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * \u83b7\u53d6\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\n     *\n     * @param index \u7d22\u5f15\n     * @return \u5143\u7d20\n     */\n    protected Entry&lt;K, V&gt; getEntry(int index) {\n        return (Entry&lt;K, V&gt;) elements[index];\n    }\n\n    /**\n     * \u66f4\u65b0\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\n     * &lt;p&gt;\n     * \u8981\u6c42\u539f\u59cb\u5143\u7d20\u5fc5\u987b\u5b58\u5728\uff0c\u5426\u5219\u5e94\u8be5\u4f7f\u7528 {@code insertEntry()}\n     *\n     * @param index \u7d22\u5f15\n     * @param entry \u5143\u7d20\n     */\n    protected void setEntry(int index, Entry&lt;K, V&gt; entry) {\n        Entry&lt;K, V&gt; oldEntry = getEntry(index);\n        if (oldEntry == null || index == 0) {\n            throw new IllegalStateException(String.format(\"index: %d, size: %d\", index, size));\n        }\n\n        // \u4fdd\u7559\u5b50\u8282\u70b9\uff0c\u53ea\u66ff\u6362\u5143\u7d20\u7684 key-value\n        elements[index] = entry;\n        entry.pointer = oldEntry.pointer;\n    }\n\n    /**\n     * \u8ffd\u52a0\u65b0\u5143\u7d20\n     * &lt;p&gt;\n     * \u6b64\u65b9\u6cd5\u4e0d\u4f1a\u4ea7\u751f\u8282\u70b9\u5206\u88c2\uff0c\u9700\u8981\u5206\u88c2\u65f6\u5e94\u8c03\u7528 {@code overflow()} \u65b9\u6cd5\n     *\n     * @param entry \u5143\u7d20\n     */\n    protected void addEntry(Entry&lt;K, V&gt; entry) {\n        if (isFull()) {\n            throw new IllegalStateException(String.format(\"size: %d\", size));\n        }\n\n        elements[++size] = entry;\n    }\n\n    /**\n     * \u63d2\u5165\u65b0\u5143\u7d20\n     * &lt;p&gt;\n     * \u6b64\u65b9\u6cd5\u4e0d\u4f1a\u4ea7\u751f\u8282\u70b9\u5206\u88c2\uff0c\u9700\u8981\u5206\u88c2\u65f6\u5e94\u8c03\u7528 {@code overflow()} \u65b9\u6cd5\n     *\n     * @param index \u63d2\u5165\u7d22\u5f15\n     * @param entry \u5143\u7d20\n     */\n    protected void insertEntry(int index, Entry&lt;K, V&gt; entry) {\n        if (isFull() || index == 0) {\n            throw new IllegalStateException(String.format(\"index: %d, size: %d\", index, size));\n        }\n\n        if (size &gt;= index) {\n            System.arraycopy(elements, index, elements, index + 1, size - index + 1);\n            elements[index] = entry;\n            size++;\n        } else {\n            elements[index] = entry;\n            size = index;\n        }\n    }\n\n    /**\n     * \u79fb\u9664\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\n     *\n     * @param index \u7d22\u5f15\n     */\n    protected void removeEntry(int index) {\n        if (isEmpty() || index == 0) {\n            throw new IllegalStateException(String.format(\"index: %d, size: %d\", index, size));\n        }\n\n        if (size &gt; index) {\n            System.arraycopy(elements, index + 1, elements, index, size - index);\n        }\n        elements[size] = null;\n        size--;\n    }\n\n    @Override\n    public String toString() {\n        String[] s = new String[size];\n        for (int i = 1; i &lt;= size; i++) {\n            s[i - 1] = elements[i].toString();\n        }\n        return \"[\" + String.join(\", \", s) + \"]\";\n    }\n\n    /**\n     * \u5355\u4e2a\u5143\u7d20\n     */\n    public static class Entry&lt;K extends Comparable&lt;K&gt;, V&gt; {\n        /**\n         * key\n         */\n        K key;\n        /**\n         * value\n         */\n        V value;\n        /**\n         * \u53f3\u5b50\u8282\u70b9\u6307\u9488\uff0c\u5373\u5927\u4e8e key \u7684\u5b50\u6811\n         */\n        BPTNode&lt;K, V&gt; pointer;\n\n        public Entry(K key, V value) {\n            this.key = key;\n            this.value = value;\n            pointer = null;\n        }\n\n        @Override\n        public String toString() {\n            return \"{\" + key + \" : \" + value + \"}\";\n        }\n    }\n\n}\n</code></pre>"},{"location":"ch05_tree/bplus_tree/#b_7","title":"B+ \u6811\u5185\u90e8\u8282\u70b9","text":"<pre><code>/**\n * B+\u6811\u5185\u90e8\u8282\u70b9\n *\n * @author weijiaduo\n * @since 2023/1/10\n */\npublic class BPTInternal&lt;K extends Comparable&lt;K&gt;, V&gt; extends BPTNode&lt;K, V&gt; {\n\n    public BPTInternal(int m) {\n        super(m);\n    }\n\n    @Override\n    public boolean isLeaf() {\n        return false;\n    }\n\n    /**\n     * \u8282\u70b9\u4e0a\u6ea2\u5904\u7406\n     * &lt;p&gt;\n     * \u5b50\u6811\u6dfb\u52a0\u65b0\u5143\u7d20\u540e\uff0c\u53ef\u80fd\u4f1a\u5206\u88c2\u6210\u65b0\u8282\u70b9\uff0c\u66ff\u4ee3\u539f\u6709\u7684\u5b50\u8282\u70b9\n     *\n     * @param index \u7d22\u5f15\n     * @param node  \u65b0\u8282\u70b9\n     * @return \u6dfb\u52a0\u540e\u7684\u5f53\u524d\u8282\u70b9\n     */\n    public BPTNode&lt;K, V&gt; overflow(int index, BPTNode&lt;K, V&gt; node) {\n        if (node == null || node.isEmpty()) {\n            return this;\n        }\n\n        // \u8fd8\u662f\u65e7\u8282\u70b9\uff0c\u8bf4\u660e\u5b50\u8282\u70b9\u6ca1\u6709\u4e0a\u6ea2\uff0c\u65e0\u9700\u5904\u7406\n        BPTNode&lt;K, V&gt; cur = getChild(index);\n        if (cur == node) {\n            return this;\n        }\n\n        // 1. \u5f53\u524d\u7a7a\u95f4\u8db3\u591f\uff0c\u53ef\u4ee5\u76f4\u63a5\u63d2\u5165\u65b0\u8282\u70b9\n        if (size + node.size() &lt; m) {\n            // \u65b0\u5b50\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u66ff\u4ee3\u65e7\u5b50\u8282\u70b9\u7684\u4f4d\u7f6e\n            setChild(index, node.firstChild());\n            for (Entry&lt;K, V&gt; entry : node.entries()) {\n                insertEntry(++index, entry);\n            }\n            return this;\n        }\n\n        // 2. \u5f53\u524d\u7a7a\u95f4\u4e0d\u591f\uff0c\u9700\u8981\u5206\u88c2\u6210 3 \u4e2a\u8282\u70b9\n        return splitNodes(index, node);\n    }\n\n    /**\n     * \u5b50\u8282\u70b9\u4e0a\u6ea2\u540e\uff0c\u7236\u8282\u70b9\u5df2\u6ee1\uff0c\u5219\u9700\u8981\u5206\u88c2\u8282\u70b9\uff0c\u5c06 1 \u4e2a\u8282\u70b9\u62c6\u5206\u6210 3 \u4e2a\u8282\u70b9\n     *\n     * @param index   \u4e0a\u6ea2\u5b50\u8282\u70b9\u7684\u7236\u5143\u7d20\u7d22\u5f15\n     * @param newNode \u4e0a\u6ea2\u7684\u5b50\u8282\u70b9\n     * @return \u5206\u88c2\u540e\u65b0\u7684\u7236\u8282\u70b9\n     */\n    private BPTNode&lt;K, V&gt; splitNodes(int index, BPTNode&lt;K, V&gt; newNode) {\n        // \u65b0\u5b50\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u66ff\u4ee3\u65e7\u5b50\u8282\u70b9\u7684\u4f4d\u7f6e\n        setChild(index, newNode.firstChild());\n\n        int newSize = size + newNode.size();\n        List&lt;Entry&lt;K, V&gt;&gt; allEntries = new ArrayList&lt;&gt;(newSize);\n        List&lt;Entry&lt;K, V&gt;&gt; curEntries = entries();\n        for (int i = 0; i &lt; index &amp;&amp; i &lt; size; i++) {\n            allEntries.add(curEntries.get(i));\n        }\n        allEntries.addAll(newNode.entries());\n        for (int i = index; i &lt; size; i++) {\n            allEntries.add(curEntries.get(i));\n        }\n\n        // \u6839\u8282\u70b9\n        int mid = newSize / 2;\n        BPTInternal&lt;K, V&gt; root = new BPTInternal&lt;&gt;(m);\n        for (int i = mid; i &lt;= mid; i++) {\n            root.addEntry(allEntries.get(i));\n        }\n        // \u5de6\u5b50\u8282\u70b9\n        BPTInternal&lt;K, V&gt; left = new BPTInternal&lt;&gt;(m);\n        for (int i = 0; i &lt; mid; i++) {\n            left.addEntry(allEntries.get(i));\n        }\n        // \u53f3\u5b50\u8282\u70b9\uff08\u548c\u53f6\u5b50\u8282\u70b9\u4e0d\u540c\uff0c\u53f3\u5b50\u8282\u70b9\u4e0d\u5305\u62ec\u6839\u8282\u70b9\u5143\u7d20\uff09\n        BPTInternal&lt;K, V&gt; right = new BPTInternal&lt;&gt;(m);\n        for (int i = mid + 1; i &lt; newSize; i++) {\n            right.addEntry(allEntries.get(i));\n        }\n\n        // \u66f4\u65b0\u8fb9\u754c\u6307\u9488\n        left.setChild(0, firstChild());\n        right.setChild(0, root.lastChild());\n        root.setChild(0, left);\n        root.setChild(root.size, right);\n        return root;\n    }\n\n    /**\n     * \u8282\u70b9\u4e0b\u6ea2\u5904\u7406\n     * &lt;p&gt;\n     * \u5b58\u5728\u975e\u6cd5\u5b50\u8282\u70b9\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u5bf9\u7236\u8282\u70b9\u8fdb\u884c\u4e0b\u6ea2\u64cd\u4f5c\n     *\n     * @param index \u7236\u8282\u70b9\u7d22\u5f15\n     * @return \u6839\u8282\u70b9\n     */\n    public BPTNode&lt;K, V&gt; underflow(int index) {\n        // \u9a8c\u8bc1\u5b50\u8282\u70b9\u662f\u5426\u5408\u6cd5\uff0c\u5408\u6cd5\u5c31\u4e0d\u7528\u4e0b\u6ea2\n        BPTNode&lt;K, V&gt; cur = getChild(index);\n        if (cur == null || cur.isLegal()) {\n            return this;\n        }\n\n        // 1. \u4ece\u5144\u5f1f\u8282\u70b9\u501f\u4e00\u4e2a\u5143\u7d20\n        BPTNode&lt;K, V&gt; left = null;\n        if (index &gt; 0) {\n            left = getChild(index - 1);\n            if (left != null &amp;&amp; left.canBorrow()) {\n                return borrowLeft(index);\n            }\n        }\n        BPTNode&lt;K, V&gt; right = null;\n        if (index &lt; size) {\n            right = getChild(index + 1);\n            if (right != null &amp;&amp; right.canBorrow()) {\n                return borrowRight(index);\n            }\n        }\n        if (left == null &amp;&amp; right == null) {\n            return this;\n        }\n\n        // 2. \u5408\u5e76\u7236\u5143\u7d20 + \u5de6\u53f3\u5b50\u8282\u70b9\n        // \u59cb\u7ec8\u628a\u5f53\u524d\u8282\u70b9\u4f5c\u4e3a\u5408\u5e76\u65f6\u7684\u53f3\u5b50\u8282\u70b9\n        return mergeNodes(left != null ? index : index + 1);\n    }\n\n    /**\n     * \u501f\u7528\u5de6\u5b50\u8282\u70b9\u7684\u503c\n     * &lt;p&gt;\n     * \u5b9e\u9645\u5c31\u662f\u53f3\u65cb\uff0c\u5c06\u7236\u8282\u70b9\u8f6c\u5230\u53f3\u5b50\u8282\u70b9\uff0c\u5de6\u5b50\u8282\u70b9\u7684\u5143\u7d20\u8f6c\u5230\u7236\u8282\u70b9\n     *\n     * @param index \u7236\u8282\u70b9\u7d22\u5f15\n     */\n    private BPTNode&lt;K, V&gt; borrowLeft(int index) {\n        BPTNode&lt;K, V&gt; left = getChild(index - 1);\n        BPTNode&lt;K, V&gt; right = getChild(index);\n        if (left.isLeaf()) {\n            // \u53f6\u5b50\u8282\u70b9\uff0c\u7236\u5143\u7d20\u4e0d\u662f\u6570\u636e\uff0c\u4e0d\u80fd\u65cb\u8f6c\u5230\u53f6\u5b50\u8282\u70b9\u91cc\u9762\n            // \u5de6\u53f6\u5b50\u8282\u70b9\u8f6c\u79fb\u5230\u53f3\u53f6\u5b50\u8282\u70b9\uff08\u53f6\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u90fd\u4e3a\u7a7a\uff0c\u4e0d\u9700\u8981\u66f4\u65b0\uff09\n            Entry&lt;K, V&gt; leftEntry = left.getEntry(left.size);\n            left.removeEntry(left.size);\n            right.insertEntry(1, leftEntry);\n            // \u66f4\u65b0\u7236\u8282\u70b9\u7d22\u5f15\n            setEntry(index, new Entry&lt;&gt;(leftEntry.key, null));\n            setChild(index, right);\n        } else {\n            // \u5185\u90e8\u8282\u70b9\uff0c\u90fd\u662f\u7d22\u5f15\u5143\u7d20\uff0c\u76f4\u63a5\u65cb\u8f6c\n            Entry&lt;K, V&gt; parentEntry = getEntry(index);\n            Entry&lt;K, V&gt; leftEntry = left.getEntry(left.size);\n            BPTNode&lt;K, V&gt; leftRight = left.lastChild();\n\n            // \u7236\u8282\u70b9\u8f6c\u5230\u53f3\u5b50\u8282\u70b9\n            right.insertEntry(1, parentEntry);\n            right.setChild(1, right.firstChild());\n            // \u5de6\u5b50\u8282\u70b9\u8f6c\u5230\u7236\u8282\u70b9\n            left.removeEntry(left.size);\n            setEntry(index, leftEntry);\n            setChild(index, right);\n            right.setChild(0, leftRight);\n        }\n        return this;\n    }\n\n    /**\n     * \u501f\u7528\u53f3\u5b50\u8282\u70b9\u7684\u503c\n     * &lt;p&gt;\n     * \u5b9e\u9645\u5c31\u662f\u5de6\u65cb\uff0c\u5c06\u7236\u5143\u7d20\u8f6c\u5230\u5de6\u5b50\u8282\u70b9\uff0c\u53f3\u5b50\u8282\u70b9\u7684\u5143\u7d20\u8f6c\u5230\u7236\u8282\u70b9\n     *\n     * @param index \u7236\u8282\u70b9\u7d22\u5f15\n     */\n    private BPTNode&lt;K, V&gt; borrowRight(int index) {\n        BPTNode&lt;K, V&gt; right = getChild(index + 1);\n        BPTNode&lt;K, V&gt; left = getChild(index);\n        if (right.isLeaf()) {\n            // \u53f6\u5b50\u8282\u70b9\uff0c\u7236\u5143\u7d20\u4e0d\u662f\u6570\u636e\uff0c\u4e0d\u80fd\u65cb\u8f6c\u5230\u53f6\u5b50\u8282\u70b9\u91cc\u9762\n            // \u53f3\u53f6\u5b50\u8282\u70b9\u8f6c\u79fb\u5230\u5de6\u53f6\u5b50\u5b50\u8282\u70b9\uff08\u53f6\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u90fd\u4e3a\u7a7a\uff0c\u4e0d\u9700\u8981\u66f4\u65b0\uff09\n            Entry&lt;K, V&gt; rightEntry = right.getEntry(1);\n            right.removeEntry(1);\n            left.addEntry(rightEntry);\n            // \u66f4\u65b0\u7236\u8282\u70b9\u7d22\u5f15\n            Entry&lt;K, V&gt; newRightEntry = right.getEntry(1);\n            setEntry(index + 1, new Entry&lt;&gt;(newRightEntry.key, null));\n            setChild(index + 1, right);\n        } else {\n            // \u5185\u90e8\u8282\u70b9\uff0c\u90fd\u662f\u7d22\u5f15\u5143\u7d20\uff0c\u76f4\u63a5\u65cb\u8f6c\n            Entry&lt;K, V&gt; parentEntry = getEntry(index + 1);\n            Entry&lt;K, V&gt; rightEntry = right.getEntry(1);\n            BPTNode&lt;K, V&gt; rightLeft = right.firstChild();\n\n            // \u7236\u8282\u70b9\u8f6c\u5230\u5de6\u5b50\u8282\u70b9\n            left.addEntry(parentEntry);\n            // \u53f3\u5b50\u8282\u70b9\u8f6c\u5230\u7236\u8282\u70b9\n            right.setChild(0, right.getChild(1));\n            right.removeEntry(1);\n            setEntry(index + 1, rightEntry);\n            setChild(index + 1, right);\n            left.setChild(left.size, rightLeft);\n        }\n        return this;\n    }\n\n    /**\n     * \u7236\u8282\u70b9\u5143\u7d20 + \u53f3\u5b50\u8282\u70b9\uff0c\u5168\u90fd\u5408\u5e76\u5230\u5de6\u5b50\u8282\u70b9\n     * &lt;p&gt;\n     * \u56e0\u4e3a\u7236\u8282\u70b9\u5143\u7d20\u548c\u53f3\u5b50\u8282\u70b9\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u6240\u4ee5\u90fd\u662f\u6309\u7167\u201c\u7236 + \u53f3 --&gt; \u5de6\u201d\u8fdb\u884c\u5408\u5e76\n     * &lt;p&gt;\n     * \u65b9\u4fbf\u540c\u65f6\u5220\u9664\u7236\u8282\u70b9\u5143\u7d20\u548c\u53f3\u5b50\u8282\u70b9\n     *\n     * @param index \u7236\u8282\u70b9\u7d22\u5f15\n     */\n    private BPTNode&lt;K, V&gt; mergeNodes(int index) {\n        BPTNode&lt;K, V&gt; left = getChild(index - 1);\n        BPTNode&lt;K, V&gt; right = getChild(index);\n\n        // \u7236\u8282\u70b9\u5143\u7d20\u5408\u5e76\u5230\u5de6\u5b50\u8282\u70b9\n        if (!left.isLeaf()) {\n            // \u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u65f6\uff0c\u5408\u5e76\u4e0d\u8981\u52a0\u4e0a\u7236\u5143\u7d20\n            Entry&lt;K, V&gt; parentEntry = getEntry(index);\n            left.addEntry(parentEntry);\n        }\n\n        // \u53f3\u5b50\u8282\u70b9\u5408\u5e76\u5230\u5de6\u5b50\u8282\u70b9\n        left.setChild(left.size, right.firstChild());\n        for (Entry&lt;K, V&gt; entry : right.entries()) {\n            left.addEntry(entry);\n        }\n\n        // \u79fb\u9664\u7236\u8282\u70b9\u5143\u7d20\n        removeEntry(index);\n\n        // \u66f4\u65b0\u53f6\u5b50\u8282\u70b9\u53cc\u5411\u94fe\u8868\u7684\u6307\u9488\n        if (left.isLeaf()) {\n            BPTLeaf&lt;K, V&gt; leftLeaf = (BPTLeaf&lt;K, V&gt;) left;\n            BPTLeaf&lt;K, V&gt; rightLeaf = (BPTLeaf&lt;K, V&gt;) right;\n            BPTLeaf&lt;K, V&gt; rightNext = rightLeaf.getNext();\n            if (rightNext != null) {\n                rightNext.setPrev(leftLeaf);\n            }\n            leftLeaf.setNext(rightNext);\n        }\n        return this;\n    }\n\n}\n</code></pre>"},{"location":"ch05_tree/bplus_tree/#b_8","title":"B+ \u6811\u53f6\u5b50\u8282\u70b9","text":"<pre><code>/**\n * B+\u6811\u53f6\u5b50\u8282\u70b9\n *\n * @author weijiaduo\n * @since 2023/1/10\n */\npublic class BPTLeaf&lt;K extends Comparable&lt;K&gt;, V&gt; extends BPTNode&lt;K, V&gt; {\n\n    /**\n     * \u53cc\u5411\u94fe\u8868\uff0c\u4e0a\u4e00\u4e2a\u8282\u70b9\n     */\n    private BPTLeaf&lt;K, V&gt; prev;\n    /**\n     * \u53cc\u5411\u94fe\u8868\uff0c\u4e0b\u4e00\u4e2a\u8282\u70b9\n     */\n    private BPTLeaf&lt;K, V&gt; next;\n\n    public BPTLeaf(int m) {\n        super(m);\n    }\n\n    @Override\n    public boolean isLeaf() {\n        return true;\n    }\n\n    /**\n     * \u6dfb\u52a0\u65b0\u5143\u7d20\n     *\n     * @param key   key\n     * @param value value\n     */\n    public BPTNode&lt;K, V&gt; add(K key, V value) {\n        int index = findIndex(key);\n\n        // 1. \u7a7a\u95f4\u8db3\u591f\uff0c\u53ef\u4ee5\u76f4\u63a5\u63d2\u5165\u65b0\u5143\u7d20\n        if (!this.isFull()) {\n            insertEntry(index + 1, new Entry&lt;&gt;(key, value));\n            return this;\n        }\n\n        // 2. \u7a7a\u95f4\u4e0d\u8db3\uff0c\u9700\u8981\u5206\u88c2\u8282\u70b9\n        return splitNodes(index, new Entry&lt;&gt;(key, value));\n    }\n\n    /**\n     * \u53f6\u5b50\u8282\u70b9\u5df2\u6ee1\uff0c\u65e0\u6cd5\u63d2\u5165\u65b0\u5143\u7d20\u65f6\uff0c\u9700\u5206\u88c2\u6210 3 \u4e2a\u8282\u70b9\n     *\n     * @param index    \u5143\u7d20\u63d2\u5165\u4f4d\u7f6e\n     * @param newEntry \u65b0\u5143\u7d20\n     * @return \u5206\u88c2\u540e\u7684\u7236\u8282\u70b9\n     */\n    private BPTNode&lt;K, V&gt; splitNodes(int index, Entry&lt;K, V&gt; newEntry) {\n        List&lt;Entry&lt;K, V&gt;&gt; curEntries = entries();\n        curEntries.add(index, newEntry);\n        int newSize = curEntries.size();\n        int mid = newSize / 2;\n\n        // \u6839\u8282\u70b9\uff08\u5185\u90e8\u8282\u70b9\u53ea\u9700\u8981\u7d22\u5f15\u5c31\u591f\u4e86\uff0c\u4e0d\u9700\u8981\u6570\u636e\uff09\n        BPTNode&lt;K, V&gt; root = new BPTInternal&lt;&gt;(m);\n        Entry&lt;K, V&gt; entry = curEntries.get(mid);\n        root.addEntry(new Entry&lt;&gt;(entry.key, null));\n        // \u5de6\u5b50\u8282\u70b9\n        BPTLeaf&lt;K, V&gt; left = new BPTLeaf&lt;&gt;(m);\n        for (int i = 0; i &lt; mid; i++) {\n            left.addEntry(curEntries.get(i));\n        }\n        // \u53f3\u5b50\u8282\u70b9\uff08\u548c\u5185\u90e8\u8282\u70b9\u4e0d\u540c\uff0c\u53f3\u5b50\u8282\u70b9\u5305\u62ec\u4e86\u6839\u8282\u70b9\u5143\u7d20\uff09\n        BPTLeaf&lt;K, V&gt; right = new BPTLeaf&lt;&gt;(m);\n        for (int i = mid; i &lt; newSize; i++) {\n            right.addEntry(curEntries.get(i));\n        }\n        // \u8bbe\u7f6e\u7236\u5b50\u8282\u70b9\u5173\u7cfb\n        root.setChild(0, left);\n        root.setChild(root.size, right);\n\n        // \u66f4\u65b0\u53f6\u5b50\u8282\u70b9\u53cc\u5411\u94fe\u8868\u6307\u9488\n        left.prev = this.prev;\n        if (this.prev != null) {\n            this.prev.next = left;\n        }\n        left.next = right;\n        right.prev = left;\n        if (this.next != null) {\n            this.next.prev = right;\n        }\n        right.next = this.next;\n        this.prev = this.next = null;\n        return root;\n    }\n\n    /**\n     * \u5220\u9664\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\n     * &lt;p&gt;\n     * \u5220\u9664\u5143\u7d20\u540e\uff0c\u8282\u70b9\u53ef\u80fd\u4f1a\u4ea7\u751f\u4e0b\u6ea2\uff0c\u4ece\u800c\u8fd4\u56de\u4e86\u4e00\u4e2a\u7a7a\u5143\u7d20\u8282\u70b9\n     *\n     * @param index \u7d22\u5f15\n     * @return \u5220\u9664\u540e\u7684\u6839\u8282\u70b9\n     */\n    public BPTNode&lt;K, V&gt; delete(int index) {\n        // \u53f6\u5b50\u8282\u70b9\u76f4\u63a5\u5220\u9664\u5143\u7d20\uff0c\u5220\u9664\u540e\u53ef\u80fd\u4f1a\u53d8\u6210\u5143\u7d20\u4e3a\u7a7a\u7684\u7a7a\u8282\u70b9\n        // \u7a7a\u8282\u70b9\u4f1a\u7531\u5185\u90e8\u8282\u70b9\u5904\u7406\u6389\uff0c\u6216\u8005\u7531\u6839\u8282\u70b9\u5904\u7406\u6389\n        removeEntry(index);\n        return this;\n    }\n\n    /**\n     * \u83b7\u53d6\u6307\u5b9a\u4f4d\u7f6e\u7684 value\n     *\n     * @param index \u7d22\u5f15\n     * @return value\n     */\n    public V getValue(int index) {\n        return getEntry(index).value;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6307\u5b9a\u4f4d\u7f6e\u7684 value\n     *\n     * @param index \u7d22\u5f15\n     * @param value \u503c\n     */\n    public void setValue(int index, V value) {\n        getEntry(index).value = value;\n    }\n\n    /**\n     * @return \u4e0a\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\n     */\n    public BPTLeaf&lt;K, V&gt; getPrev() {\n        return prev;\n    }\n\n    /**\n     * @return \u4e0b\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\n     */\n    public BPTLeaf&lt;K, V&gt; getNext() {\n        return next;\n    }\n\n    /**\n     * \u66f4\u65b0\u4e0a\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\n     *\n     * @param prev \u4e0a\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\n     */\n    protected void setPrev(BPTLeaf&lt;K, V&gt; prev) {\n        this.prev = prev;\n    }\n\n    /**\n     * \u66f4\u65b0\u4e0b\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\n     *\n     * @param next \u4e0b\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\n     */\n    protected void setNext(BPTLeaf&lt;K, V&gt; next) {\n        this.next = next;\n    }\n\n}\n</code></pre>"},{"location":"ch05_tree/red_black_tree/","title":"\u7ea2\u9ed1\u6811","text":""},{"location":"ch05_tree/red_black_tree/#_2","title":"\u4e00\u3001\u4ec0\u4e48\u662f\u7ea2\u9ed1\u6811\uff1f","text":"<p>\u7ea2\u9ed1\u6811\u662f\u4e00\u68f5\u53ea\u6709\u7ea2\u8272\u8282\u70b9\u548c\u9ed1\u8272\u8282\u70b9\u7684\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\u3002</p> <p>\u5176\u7ed3\u6784\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>      b4\n   /      \\  \n  r2      r6\n /  \\    /  \\\nb1  b3  b5  b7\n              \\\n              r9\n</code></pre> <p>\u5176\u4e2d\uff0c<code>b</code> \u8868\u793a\u9ed1\u8272\uff0c<code>r</code> \u8868\u793a\u7ea2\u8272\u3002</p>"},{"location":"ch05_tree/red_black_tree/#11","title":"1.1 \u7ea2\u9ed1\u6811\u7684\u7279\u6027","text":"<p>\u5728\u300a\u7b97\u6cd5\u5bfc\u8bba\u300b\u91cc\uff0c\u7ea2\u9ed1\u6811\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\uff1a</p> <ol> <li>\u6bcf\u4e2a\u7ed3\u70b9\u6216\u662f\u7ea2\u8272\u7684\uff0c\u6216\u662f\u9ed1\u8272\u7684</li> <li>\u6839\u8282\u70b9\u662f\u9ed1\u8272\u7684</li> <li>\u6bcf\u4e2a\u53f6\u7ed3\u70b9\uff08NIL\uff09\u662f\u9ed1\u8272\u7684</li> <li>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\u7684\uff0c\u5219\u5b83\u7684\u4e24\u4e2a\u513f\u5b50\u90fd\u662f\u9ed1\u8272\u7684</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u4ece\u8be5\u7ed3\u70b9\u5230\u5176\u5b50\u5b59\u7ed3\u70b9\u7684\u6240\u6709\u8def\u5f84\u4e0a\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8272\u7ed3\u70b9</li> </ol> <p>\u524d 4 \u70b9\u597d\u7406\u89e3\uff0c\u7b2c 5 \u70b9\u9700\u8981\u8bf4\u660e\u4e00\u4e0b\uff0c\u5b83\u7684\u610f\u601d\u662f\uff1a</p> <ul> <li>\u4ece\u4efb\u4e00\u8282\u70b9\u5230\u5176\u6bcf\u4e2a\u53f6\u5b50\u7684\u6240\u6709\u8def\u5f84\u90fd\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8272\u8282\u70b9</li> </ul> <p>\u5176\u4e2d\uff0c\u9ed1\u8282\u70b9\u7684\u6570\u76ee\u79f0\u4e3a\u9ed1\u9ad8\uff08<code>black-height</code>\uff09\u3002</p> <p>\u6bd4\u5982\u4e0a\u9762\u7684\u7ea2\u9ed1\u6811\uff0c\u4ece <code>b4</code> \u8282\u70b9\u5f00\u59cb\u7684\u8def\u5f84\u6709 4 \u6761\uff1a</p> <ul> <li><code>b4 -&gt; r2 -&gt; b1</code>\uff1a2 \u4e2a\u9ed1\u8272\u8282\u70b9 <code>[b4, b1]</code></li> <li><code>b4 -&gt; r2 -&gt; b3</code>\uff1a2 \u4e2a\u9ed1\u8272\u8282\u70b9 <code>[b4, b3]</code></li> <li><code>b4 -&gt; r6 -&gt; b5</code>\uff1a2 \u4e2a\u9ed1\u8272\u8282\u70b9 <code>[b4, b5]</code></li> <li><code>b4 -&gt; r6 -&gt; b7</code>\uff1a2 \u4e2a\u9ed1\u8272\u8282\u70b9 <code>[b4, b7]</code></li> </ul> <p>\u6bcf\u6761\u8def\u5f84\u5305\u542b\u7684\u9ed1\u8272\u8282\u70b9\u6570\u91cf\u662f\u4e00\u6837\u7684\u3002\u6240\u4ee5\uff0c</p> <ul> <li>\u7ea2\u9ed1\u6811\u5e76\u4e0d\u662f\u201c\u9ad8\u5ea6\u201d\u5e73\u8861\u7684\u4e8c\u53c9\u6811\uff0c\u800c\u662f\u201c\u9ed1\u9ad8\u201d\u5e73\u8861\u7684\u4e8c\u53c9\u6811</li> </ul> <p>\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u662f\u201c\u9ed1\u9ad8\u201d\u5e73\u8861\uff0c\u8fd9\u548c\u7ea2\u9ed1\u6811\u7684\u8d77\u6e90\u6709\u5173\u3002</p>"},{"location":"ch05_tree/red_black_tree/#_3","title":"\u4e8c\u3001\u7ea2\u9ed1\u6811\u7684\u8d77\u6e90","text":""},{"location":"ch05_tree/red_black_tree/#21-4-b-","title":"2.1 \u4e0e 4-\u9636 B-\u6811\u7684\u5173\u7cfb","text":"<p>\u7ea2\u9ed1\u6811\u672c\u8d28\u4e0a\u662f\u7531 4 \u9636 B-\u6811\u6f14\u5316\u800c\u6765\u7684\uff0c\u8282\u70b9\u4e4b\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\u662f\uff1a</p> <p>1\uff09\u8282\u70b9\u6709 1 \u4e2a\u5143\u7d20</p> <pre><code>4 \u9636 B-\u6811\u8282\u70b9                \u7ea2\u9ed1\u6811\u8282\u70b9\n\n ___ ___ ___\n| 1 |   |   |      =&gt;           b1\n</code></pre> <p>2\uff09\u8282\u70b9\u6709 2 \u4e2a\u5143\u7d20</p> <pre><code>4 \u9636 B-\u6811\u8282\u70b9                \u7ea2\u9ed1\u6811\u8282\u70b9\n\n ___ ___ ___                    b1                b2\n| 1 | 2 |   |      =&gt;            \\       \u6216       / \n                                 r2              r1\n</code></pre> <p>3\uff09\u8282\u70b9\u6709 3 \u4e2a\u5143\u7d20</p> <pre><code>4 \u9636 B-\u6811\u8282\u70b9                \u7ea2\u9ed1\u6811\u8282\u70b9\n\n ___ ___ ___                    b2\n| 1 | 2 | 3 |      =&gt;          /  \\\n                              r1  r3\n</code></pre> <p>\u9700\u8981\u8bf4\u660e\u7684\u662f\uff1a</p> <ul> <li>1 \u4e2a 4 \u9636 B-\u6811\u8282\u70b9\u5bf9\u5e94\u7684\u7ea2\u9ed1\u6811\u7ed3\u6784\uff0c\u53ea\u4f1a\u6709 1 \u4e2a\u9ed1\u8272\u8282\u70b9</li> <li>4 \u9636 B-\u6811\u8282\u70b9\u6709 3 \u4e2a\u5143\u7d20\u65f6\uff0c\u5bf9\u5e94\u7684\u7ea2\u9ed1\u6811\u8282\u70b9\u53ea\u6709 1 \u79cd\u60c5\u51b5</li> <li>\u5408\u6cd5\u7684 4 \u9636 B-\u6811 3 \u5143\u7d20\u8282\u70b9\u5bf9\u5e94\u7684\u7ea2\u8272\u8282\u70b9\u53ea\u80fd\u5728\u5de6\u53f3\u5b50\u8282\u70b9\u4e2d</li> </ul> <p>\u6240\u4ee5\u4e0b\u9762\u8fd9\u4e9b\u60c5\u51b5\u90fd\u662f\u4e0d\u5408\u6cd5\u7684\uff1a</p> <pre><code>    b3       b3       b1        b1            \n    /        /         \\         \\\n  r2        r1          r3        r2 \n  /          \\          /          \\\nr1            r2       r2           r3\n</code></pre> <p>\u7b80\u5355\u70b9\u8bf4\uff0c\u5c31\u662f\uff1a</p> <ul> <li>\u5148\u6709\u9ed1\u8272\u8282\u70b9\uff0c\u624d\u6709\u7ea2\u8272\u8282\u70b9</li> <li>\u7ea2\u8272\u8282\u70b9\u4e0d\u80fd\u5355\u72ec\u5b58\u5728\uff0c\u603b\u662f\u4e0e\u9ed1\u8272\u8282\u70b9\u7ed1\u5b9a\u7684</li> <li>\u7ea2\u8272\u8282\u70b9\u7684\u7236\u8282\u70b9\u53ea\u80fd\u662f\u9ed1\u8272</li> <li>2 \u4e2a\u7ea2\u8272\u8282\u70b9\u4e0d\u80fd\u591f\u76f8\u90bb</li> </ul> <p>\u8fd9\u4e9b\u5168\u90fd\u662f\u7ea2\u9ed1\u6811\u7684\u7279\u6027\uff0c\u603b\u4e4b\u5c31\u662f\uff1a</p> <ul> <li>\u5c06\u7ea2\u8272\u8282\u70b9\u548c\u5b83\u7684\u9ed1\u8272\u7236\u8282\u70b9\uff0c\u770b\u6210\u662f 1 \u4e2a\u8282\u70b9\u5c31\u884c\u4e86</li> <li>1 \u4e2a\u8282\u70b9\u6700\u591a\u5e26\u6709 3 \u4e2a\u5143\u7d20\uff0c\u6700\u591a\u65f6\u53ea\u80fd\u662f\u201c1\u9ed1\u8272 + 2\u7ea2\u8272\u201d</li> </ul> <p>\u4e0a\u9762\u8bf4\u7ea2\u9ed1\u6811\u662f\u201c\u9ed1\u9ad8\u201d\u5e73\u8861\u7684\uff0c\u662f\u56e0\u4e3a 1 \u4e2a 4 \u9636 B-\u6811\u8282\u70b9\u5bf9\u5e94\u5230\u7ea2\u9ed1\u6811\u4e0a\u53ea\u4f1a\u6709 1 \u4e2a\u9ed1\u8272\u8282\u70b9\u3002</p> <p>\u800c B-\u6811\u662f\u9ad8\u5ea6\u5e73\u8861\u7684\uff0c\u6240\u4ee5\u5bf9\u5e94\u5230\u7ea2\u9ed1\u6811\u65f6\uff0c\u5c31\u53d8\u6210\u4e86\u201c\u9ed1\u9ad8\u201d\u5e73\u8861\u3002</p>"},{"location":"ch05_tree/red_black_tree/#22-4-b-","title":"2.2 \u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u7528 4 \u9636 B-\u6811\uff1f","text":"<p>\u5b9e\u9645\u4e0a\uff0c\u76f8\u5bf9\u4e8e 4 \u9636 B-\u6811\uff0c\u7ea2\u9ed1\u6811\u4f1a\u6709\u4e00\u4e9b\u4f18\u52bf\uff1a</p> <ul> <li>\u7a7a\u95f4\u5229\u7528\u7387<ul> <li>B-\u6811\u6709\u7a7a\u95f4\u6d6a\u8d39\uff0c\u7a7a\u95f4\u5229\u7528\u7387\u4e0d\u9ad8</li> <li>\u7ea2\u9ed1\u6811\u7684\u7a7a\u95f4\u5229\u7528\u7387\u603b\u662f 100%</li> </ul> </li> <li>\u4e8c\u5206\u67e5\u627e<ul> <li>B-\u6811\u662f\u591a\u53c9\u6811\uff0c\u91c7\u7528\u7684\u662f\u591a\u8def\u641c\u7d22\uff0c\u6ca1\u6709\u4e8c\u5206\u67e5\u627e\u90a3\u4e48\u65b9\u4fbf</li> <li>\u7ea2\u9ed1\u6811\u672c\u8eab\u5c31\u662f\u4e8c\u53c9\u641c\u7d22\u6811</li> </ul> </li> </ul> <p>\u6bd4\u5982\uff0c\u4e0a\u9762\u7684 1 \u5143\u7d20\u8282\u70b9\uff1a</p> <pre><code>4 \u9636 B-\u6811\u8282\u70b9                \u7ea2\u9ed1\u6811\u8282\u70b9\n\n ___ ___ ___\n| 1 |   |   |      =&gt;           b1\n</code></pre> <p>\u5bf9\u4e8e B-\u6811\u800c\u8a00\uff0c\u7a7a\u95f4\u5229\u7528\u7387\u53ea\u6709 33%\uff0c\u800c\u7ea2\u9ed1\u6811\u7684\u7a7a\u95f4\u5229\u7528\u7387\u5c31\u662f 100%\u3002</p> <p>\u9664\u4e86\u8fd9\u4e9b\u4f18\u70b9\uff0c\u8fd8\u6709\u4e00\u70b9\uff1a</p> <ul> <li>B-\u6811\u662f\u591a\u53c9\u6811\uff0c\u4ee3\u7801\u5b9e\u73b0\u6bd4\u7ea2\u9ed1\u6811\u8981\u590d\u6742\u5f97\u591a</li> <li>\u7ea2\u9ed1\u6811\u672c\u8eab\u662f\u4e8c\u53c9\u6811\uff0c\u4ee3\u7801\u518d\u590d\u6742\u4e5f\u4e0d\u4f1a\u6bd4\u591a\u53c9\u6811\u590d\u6742</li> </ul> <p>\u7efc\u5408\u5404\u79cd\u60c5\u51b5\uff0c\u8fd8\u662f\u7ea2\u9ed1\u6811\u4f1a\u6bd4 4\u9636 B-\u6811\u66f4\u4f18\u4e00\u4e9b\u3002</p>"},{"location":"ch05_tree/red_black_tree/#23","title":"2.3 \u4e3a\u4ec0\u4e48\u662f\u7ea2\u8272\u548c\u9ed1\u8272\uff1f","text":"<p>\u4e3a\u4ec0\u4e48\u662f\u7ea2\u9ed1\u6811\uff0c\u800c\u4e0d\u662f\u9ed1\u767d\u6811\uff1f\u9ec4\u7eff\u6811\uff1f</p> <p>\u76ee\u524d\u53d1\u73b0\u6709 2 \u79cd\u8bf4\u6cd5\uff1a</p> <ul> <li>\u7ea2\u8272\u548c\u9ed1\u8272\u662f\u6fc0\u5149\u6253\u5370\u673a\u6700\u597d\u627e\u5230\u7684\u989c\u8272</li> <li>\u7ea2\u8272\u548c\u9ed1\u8272\u662f\u6700\u5bb9\u6613\u83b7\u5f97\u7684\u7b14\u8272</li> </ul> <p>\u4e0d\u7ba1\u662f\u54ea\u79cd\u8bf4\u6cd5\u90fd\u5dee\u4e0d\u591a\uff0c\u5927\u6982\u5c31\u662f\uff1a</p> <ul> <li>\u56e0\u4e3a\u5e73\u65f6\u5e38\u7528\u7ea2\u8272\u548c\u9ed1\u8272\u6765\u4f5c\u56fe\uff0c\u6240\u4ee5\u624d\u79f0\u4e4b\u4e3a\u7ea2\u9ed1\u6811</li> </ul> <p>\u7ea2\u9ed1\u8272\u7684\u6765\u6e90\u786e\u5b9e\u8d34\u8fd1\u751f\u6d3b\uff0c\u7b26\u5408\u5b9e\u9645\u3002</p>"},{"location":"ch05_tree/red_black_tree/#_4","title":"\u4e09\u3001\u4e3a\u4ec0\u4e48\u7528\u7ea2\u9ed1\u6811\uff1f","text":"<p>\u7ea2\u9ed1\u6811\u7684\u4f18\u7565\u52bf\uff1a</p> <ul> <li>\u76f8\u6bd4\u4e8e BST \u6811\uff0c\u7ea2\u9ed1\u6811\u7ed3\u6784\u66f4\u52a0\u5e73\u8861\uff0c\u7a33\u5b9a\u6027\u66f4\u597d</li> <li>\u76f8\u6bd4\u4e8e AVL \u6811\uff0c\u7ea2\u9ed1\u6811\u5728\u63d2\u5165\u548c\u5220\u9664\u8fc7\u7a0b\u4e2d\u7684\u65cb\u8f6c\u66f4\u5c11</li> <li>\u76f8\u6bd4\u4e8e B-\u6811\uff0c\u7ea2\u9ed1\u6811\u7ed3\u6784\u66f4\u7b80\u5355\uff0c\u7a7a\u95f4\u5229\u7528\u7387\u66f4\u9ad8</li> </ul> <p>\u7ea2\u9ed1\u6811\u7684\u9002\u7528\u573a\u666f\uff1a</p> <ul> <li>\u9891\u7e41\u7684\u63d2\u5165\u3001\u5220\u9664\uff0c\u91c7\u7528\u7ea2\u9ed1\u6811</li> <li>\u9891\u7e41\u7684\u641c\u7d22\uff0c\u91c7\u7528 AVL \u6811</li> </ul>"},{"location":"ch05_tree/red_black_tree/#_5","title":"\u56db\u3001\u5982\u4f55\u5b9e\u73b0\u7ea2\u9ed1\u6811\uff1f","text":"<p>\u58f0\u660e\uff0c\u4e0b\u9762\u9ed8\u8ba4\u662f\u5c06\u7ea2\u9ed1\u6811\u8282\u70b9\u770b\u6210\u662f 4 \u9636 B-\u6811\u8282\u70b9\uff1a</p> <ul> <li>\u5c06\u7ea2\u8272\u8282\u70b9\u548c\u5b83\u7684\u9ed1\u8272\u7236\u8282\u70b9\uff0c\u770b\u6210\u662f 1 \u4e2a\u8282\u70b9</li> <li>1 \u4e2a\u8282\u70b9\u6700\u591a\u5e26\u6709 3 \u4e2a\u5143\u7d20\uff0c\u6700\u591a\u65f6\u53ea\u80fd\u662f\u201c1\u9ed1\u8272 + 2\u7ea2\u8272\u201d</li> </ul> <p>\u8fd9\u6837\u662f\u4e3a\u4e86\u7b80\u5316\u7406\u89e3\uff0c\u4ece B-\u6811\u7684\u89d2\u5ea6\u53bb\u7406\u89e3\u7ea2\u9ed1\u6811\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u8c03\u6574\u3002</p>"},{"location":"ch05_tree/red_black_tree/#41","title":"4.1 \u68c0\u7d22","text":"<p>\u7ea2\u9ed1\u6811\u672c\u8eab\u5c31\u662f BST \u6811\uff0c\u6240\u4ee5\u68c0\u7d22\u4e5f\u662f\u91c7\u7528\u7684\u4e8c\u5206\u67e5\u627e\u3002</p> <p>\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>private RBTNode get(RBTNode h, int val) {\n    // \u6ca1\u6709\u627e\u5230\n    if (h == null) {\n        return null;\n    }\n    // \u627e\u5230\u5bf9\u5e94\u7684\u8282\u70b9\n    if (h.val == val) {\n        return h;\n    }\n    if (h.val &gt; val) {\n        return get(h.left, val);\n    } else {\n        return get(h.right, val);\n    }\n}\n</code></pre> <p>\u7ea2\u9ed1\u6811\u7684\u68c0\u7d22\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(logn)\u3002</p>"},{"location":"ch05_tree/red_black_tree/#42","title":"4.2 \u63d2\u5165","text":"<p>\u7ea2\u9ed1\u6811\u662f\u4e00\u68f5\u5e73\u8861\u6811\uff0c\u6240\u4ee5\u63d2\u5165\u8282\u70b9\u540e\u53ef\u80fd\u4f1a\u9700\u8981\u8c03\u6574\uff0c\u7ef4\u6301\u5e73\u8861\u3002</p> <p>\u7ea2\u9ed1\u6811\u63d2\u5165\u65b0\u8282\u70b9\u7684\u539f\u5219\uff1a</p> <ul> <li>\u65b0\u8282\u70b9\u603b\u662f\u5728\u53f6\u5b50\u8282\u70b9\u5904\u63d2\u5165</li> <li>\u65b0\u8282\u70b9\u7684\u989c\u8272\u603b\u662f\u7ea2\u8272</li> </ul> <p>\u6839\u636e\u8fd9 2 \u4e2a\u539f\u5219\uff0c\u63d2\u5165\u65b0\u8282\u70b9\u540e\u53ef\u80fd\u51fa\u73b0\u7684\u60c5\u51b5\u6709 6 \u79cd\uff1a</p> <pre><code>\u9ed1\u8272\u7236\u8282\u70b9        \u7ea2\u8272\u7236\u8282\u70b9\n\n    b                b            \n   / \\             /   \\  \n                  r     r \n                 / \\   / \\\n</code></pre> <p>\u5176\u4e2d\uff0c\u5728\u63d2\u5165\u7ea2\u8272\u8282\u70b9\u540e\uff0c6 \u79cd\u60c5\u51b5\u91cc\uff1a</p> <ul> <li>\u7236\u8282\u70b9\u662f\u9ed1\u8272\u7684 2 \u79cd\u60c5\u51b5\uff0c\u4e0d\u5f71\u54cd\u7ea2\u9ed1\u6811\u7684\u201c\u9ed1\u9ad8\u201d\u5e73\u8861\uff0c\u4e0d\u9700\u8981\u8c03\u6574</li> <li>\u53ea\u6709\u7236\u8282\u70b9\u662f\u7ea2\u8272\u7684 4 \u79cd\u60c5\u51b5\uff0c\u9700\u8981\u8c03\u6574\u7ea2\u9ed1\u6811\u7684\u7ed3\u6784\uff0c\u4ee5\u7ef4\u6301\u5e73\u8861</li> </ul> <p>\u6240\u4ee5\uff0c\u9700\u8981\u7279\u6b8a\u5904\u7406\u7684\u53ea\u662f\u7236\u8282\u70b9\u662f\u7ea2\u8272\u7684 4 \u79cd\u60c5\u51b5\u3002</p>"},{"location":"ch05_tree/red_black_tree/#421-left-left-red","title":"4.2.1 <code>Left-Left-Red</code>","text":"<p><code>Left-Left-Red</code> \u8868\u793a\u7684\u7ea2\u9ed1\u6811\u7c7b\u4f3c\u8fd9\u6837\uff08\u65b0\u63d2\u5165\u8282\u70b9\u662f r1\uff09\uff1a</p> <pre><code>    b3          \n    /\n  r2\n  /\nr1\n</code></pre> <p>\u7531\u4e8e 2 \u4e2a\u7ea2\u8272\u8282\u70b9\u76f8\u90bb\u4e86\uff0c\u4e0d\u7b26\u5408\u7ea2\u9ed1\u6811\u7684\u5b9a\u4e49\uff0c\u9700\u8981\u8c03\u6574\u3002</p> <p>\u8c03\u6574\u65b9\u5f0f\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u505a 2 \u6b65\u5904\u7406\uff1a</p> <pre><code>                  \u7ea2\u8272\u8282\u70b9\u53f3\u65cb           \u7236\u5b50\u8282\u70b9\u53cd\u8272\n\n    b3\n    /                 b2                    r2\n  r2        =&gt;       /  \\         =&gt;       /  \\\n  /                 r1  r3                b1  b3\nr1\n</code></pre> <p>\u505a\u5b8c\u5904\u7406\u540e\uff0c\u7236\u8282\u70b9\u53d8\u6210\u4e86\u7ea2\u8272\uff0c\u6b64\u65f6\u8fd8\u53ef\u80fd\u4f1a\u51fa\u73b0\u8fde\u7eed 2 \u4e2a\u7ea2\u8272\u8282\u70b9\u7684\u60c5\u51b5\u3002</p> <ul> <li>\u7236\u8282\u70b9\u53d8\u7ea2\u540e\uff0c\u53ef\u4ee5\u5c06\u7236\u8282\u70b9 r2 \u5f53\u4f5c\u65b0\u63d2\u5165\u7684\u8282\u70b9\uff0c\u7ee7\u7eed\u5f80\u4e0a\u9012\u5f52\u8c03\u6574</li> </ul> <p>\u5f80\u4e0a\u9012\u5f52\u8c03\u6574\u4e00\u76f4\u5230\u7ed3\u6784\u5e73\u8861\uff0c\u6216\u8005\u6839\u8282\u70b9\u4e3a\u6b62\u3002</p>"},{"location":"ch05_tree/red_black_tree/#422-left-right-red","title":"4.2.2 <code>Left-Right-Red</code>","text":"<p><code>Left-Right-Red</code> \u8868\u793a\u7684\u7ea2\u9ed1\u6811\u7c7b\u4f3c\u8fd9\u6837\uff08\u65b0\u63d2\u5165\u8282\u70b9\u662f r2\uff09\uff1a</p> <pre><code>    b3      \n    /\n  r1\n   \\\n    r2\n</code></pre> <p>\u5e73\u8861\u7684\u8c03\u6574\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <pre><code>                  \u7ea2\u8272\u8282\u70b9\u5de6\u65cb \n\n    b3                b3 \n    /                 /\n  r1        =&gt;      r2\n   \\                /\n    r2            r1\n</code></pre> <p>\u65cb\u8f6c\u540e\uff0c<code>Left-Right-Red</code> \u5c31\u53d8\u6210\u4e86 <code>Left-Left-Red</code>\uff0c\u6309\u7167\u4e0a\u9762\u7684\u5904\u7406\u5373\u53ef\u3002</p>"},{"location":"ch05_tree/red_black_tree/#423-right-right-red","title":"4.2.3 <code>Right-Right-Red</code>","text":"<p><code>Right-Right-Red</code> \u8868\u793a\u7684\u7ea2\u9ed1\u6811\u7c7b\u4f3c\u8fd9\u6837\uff08\u65b0\u63d2\u5165\u8282\u70b9\u662f r3\uff09\uff1a</p> <pre><code>b1\n \\\n  r2\n   \\\n    r3\n</code></pre> <p>\u5e73\u8861\u7684\u8c03\u6574\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <pre><code>                  \u7ea2\u8272\u8282\u70b9\u5de6\u65cb           \u7236\u5b50\u8282\u70b9\u53cd\u8272\n\n    b1                                      \n     \\                 b2                    r2\n      r2     =&gt;       /  \\         =&gt;       /  \\\n       \\             r1  r3                b1  b3\n        r3\n</code></pre> <p>\u505a\u5b8c\u5904\u7406\u540e\uff0c\u7236\u8282\u70b9\u53d8\u6210\u4e86\u7ea2\u8272\uff0c\u6b64\u65f6\u8fd8\u53ef\u80fd\u4f1a\u51fa\u73b0\u8fde\u7eed 2 \u4e2a\u7ea2\u8272\u8282\u70b9\u7684\u60c5\u51b5\u3002</p> <p>\u8fd9\u4e2a\u548c <code>Left-Left-Red</code> \u5dee\u4e0d\u591a\uff0c\u56e0\u4e3a\u7ea2\u9ed1\u6811\u7684\u5bf9\u79f0\u7684\u4e8c\u53c9\u6811\uff0c\u6309\u7167\u548c\u5b83\u4e00\u6837\u7684\u65b9\u5f0f\u5904\u7406\u5373\u53ef\u3002</p>"},{"location":"ch05_tree/red_black_tree/#424-right-left-red","title":"4.2.4 <code>Right-Left-Red</code>","text":"<p><code>Left-Right-Red</code> \u8868\u793a\u7684\u7ea2\u9ed1\u6811\u7c7b\u4f3c\u8fd9\u6837\uff08\u65b0\u63d2\u5165\u8282\u70b9\u662f r2\uff09\uff1a</p> <pre><code>    b1      \n     \\\n      r3\n      /\n    r2\n</code></pre> <p>\u5e73\u8861\u7684\u8c03\u6574\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <pre><code>                  \u7ea2\u8272\u8282\u70b9\u53f3\u65cb \n\n    b1                b1 \n     \\                 \\\n      r3        =&gt;      r2\n      /                  \\\n    r2                    r3\n</code></pre> <p>\u65cb\u8f6c\u540e\uff0c<code>Right-Left-Red</code> \u5c31\u53d8\u6210\u4e86 <code>Right-Right-Red</code>\uff0c\u6309\u7167\u4e0a\u9762\u7684\u5904\u7406\u5373\u53ef\u3002</p>"},{"location":"ch05_tree/red_black_tree/#_6","title":"\u5c0f\u7ed3","text":"<p>\u7efc\u5408\u4e0a\u8ff0\u7684 6 \u79cd\u60c5\u51b5\uff0c\u63d2\u5165\u7684\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code> public void insert(int val) {\n    // \u63d2\u5165\u65b0\u8282\u70b9\n    RBTNode h = new RBTNode(val);\n    root = insertNode(root, h);\n\n    // \u8c03\u6574\u6811\u7ed3\u6784\n    balanceInsertion(h);\n\n    // \u6839\u8282\u70b9\u59cb\u7ec8\u662f\u9ed1\u8272\n    setColor(root, BLACK);\n}\n</code></pre> <p>\u63d2\u5165\u65b0\u8282\u70b9\u540e\uff0c\u8c03\u6574\u7ea2\u9ed1\u6811\u7ed3\u6784\u4ee5\u7ef4\u6301\u5e73\u8861\uff1a</p> <pre><code>private void balanceInsertion(RBTNode h) {\n    // \u7236\u8282\u70b9\u662f\u9ed1\u8272\u65f6\uff0c\u4e0d\u7528\u8c03\u6574\n    RBTNode p = parent(h);\n    if (!isRed(p)) {\n        return;\n    }\n\n    // \u7236\u8282\u70b9\u662f\u7ea2\u8272\u7684 4 \u79cd\u60c5\u51b5\n    RBTNode gp = parent(p);\n    if (p == gp.left) {\n        // Left-Right-Red\n        if (h == p.right) {\n            rotateLeft(p);\n        }\n        // Left-Left-Red\n        p = rotateRight(gp);\n    } else {\n        // Right-Left-Red\n        if (h == p.left) {\n            rotateRight(p);\n        }\n        // Right-Right-Red\n        p = rotateLeft(gp);\n    }\n\n    // \u7236\u5b50\u8282\u70b9\u53cd\u8272\n    setColor(p, RED);\n    setColor(p.left, BLACK);\n    setColor(p.right, BLACK);\n\n    // \u7236\u8282\u70b9\u9012\u5f52\u5f80\u4e0a\u5904\u7406\n    balanceInsertion(p);\n}\n</code></pre> <p>\u53e6\u5916\uff0c\u7ea2\u9ed1\u6811\u6839\u8282\u70b9\u59cb\u7ec8\u9ed1\u8272\u7684\uff0c\u4f46\u662f\u63d2\u5165\u8c03\u6574\u5f80\u4e0a\u9012\u5f52\u65f6\uff0c\u6709\u53ef\u80fd\u628a\u6839\u8282\u70b9\u53d8\u6210\u7ea2\u8272\u4e86\u3002</p> <p>\u6240\u4ee5\u5728\u6700\u7ec8\u7684\u63d2\u5165\u5b8c\u6210\u540e\uff0c\u4e00\u822c\u90fd\u8981\u5c06\u6839\u8282\u70b9\u7684\u989c\u8272\u8bbe\u7f6e\u6210\u9ed1\u8272\u3002</p>"},{"location":"ch05_tree/red_black_tree/#43","title":"4.3 \u5220\u9664","text":"<p>\u7ea2\u9ed1\u6811\u7684\u5220\u9664\u5927\u81f4\u53ef\u4ee5\u5206\u4e3a\u51e0\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li>\u66ff\u4ee3\u5220\u9664\u8282\u70b9\uff1a\u5bfb\u627e\u66ff\u4ee3\u5f53\u524d\u8282\u70b9\u7684\u8282\u70b9\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u76f4\u63a5\u5220\u9664\u5f53\u524d\u8282\u70b9</li> <li>\u5220\u9664\u5e73\u8861\u8c03\u6574\uff1a\u5220\u9664\u524d\u5148\u8c03\u6574\u6811\u7ed3\u6784\uff0c\u4fdd\u8bc1\u5220\u9664\u8282\u70b9\u540e\uff0c\u7ea2\u9ed1\u6811\u7684\u7ed3\u6784\u4f9d\u65e7\u662f\u7a33\u5b9a\u7684</li> <li>\u771f\u6b63\u5220\u9664\u8282\u70b9</li> </ol> <p>\u4e0b\u9762\u8be6\u7ec6\u8bf4\u660e\u8fd9\u51e0\u4e2a\u6b65\u9aa4\u3002</p>"},{"location":"ch05_tree/red_black_tree/#431","title":"4.3.1 \u66ff\u4ee3\u5220\u9664\u8282\u70b9","text":"<p>\u66ff\u6362\u5220\u9664\u8282\u70b9\uff0c\u662f BST \u6811\u5220\u9664\u90fd\u8981\u505a\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u8981\u4fdd\u8bc1 BST \u6811\u7684\u6709\u5e8f\u6027\u3002</p> <p>\u7ea2\u9ed1\u6811\u4e5f\u662f BST \u6811\uff0c\u6240\u4ee5\u4e00\u5f00\u59cb\u4e5f\u662f\u8981\u5bfb\u627e\u66ff\u4ee3\u7684\u8282\u70b9\uff1a</p> <pre><code>\u5220\u9664 r1 \u53f6\u5b50\u8282\u70b9             \u6ca1\u6709\u66ff\u4ee3\n\n      b2                       b2\n     /  \\         =&gt;          /  \\\n    r1  r3                   r1  r3\n</code></pre> <pre><code>\u5220\u9664 b2 \u5185\u90e8\u5355\u5b50\u8282\u70b9         b2 \u548c\u524d\u7ee7 r1 \u4ea4\u6362\n\n      b2                       b1\n     /            =&gt;          /\n    r1                       r2\n</code></pre> <pre><code>\u5220\u9664 b2 \u5185\u90e8\u5355\u5b50\u8282\u70b9         b2 \u548c\u540e\u7ee7 r3 \u4ea4\u6362\n\n      b2                       b3\n        \\         =&gt;             \\\n        r3                       r2\n</code></pre> <pre><code>\u5220\u9664 b2 \u5185\u90e8\u53cc\u5b50\u8282\u70b9       b2 \u548c\u540e\u7ee7 r3 \u4ea4\u6362\n\n      b2                       b3\n     /  \\                     /  \\\n    b1  b4        =&gt;         b1  b4\n        /                        /\n       r3                       r2\n</code></pre> <p>\u9664\u5220\u9664\u53f6\u5b50\u8282\u70b9\u5916\uff0c\u5176\u4f59\u60c5\u51b5\u90fd\u4f7f\u7528\u524d\u7ee7/\u540e\u7ee7\u8282\u70b9\u66ff\u6362\u3002</p>"},{"location":"ch05_tree/red_black_tree/#432","title":"4.3.2 \u5220\u9664\u5e73\u8861\u8c03\u6574","text":"<p>\u7ea2\u9ed1\u6811\u662f\u7531 B-\u6811\u6f14\u5316\u800c\u6765\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u53c2\u8003 B-\u6811\u7684\u5220\u9664\u5e73\u8861\u8c03\u6574\u3002</p> <p>B-\u6811\u7684\u5220\u9664\u5e73\u8861\u8c03\u6574\u53ef\u4ee5\u5206\u4e3a 3 \u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u5f53\u524d\u8282\u70b9\u5143\u7d20\u5145\u8db3\uff0c\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\uff0c\u4e14\u4e0d\u9700\u8981\u8c03\u6574\u6811\u7ed3\u6784</li> <li>\u5f53\u524d\u8282\u70b9\u5143\u7d20\u4e0d\u8db3\uff0c\u5144\u5f1f\u8282\u70b9\u6709\u591a\u4f59\u5143\u7d20\uff0c\u4ece\u5144\u5f1f\u8282\u70b9\u501f\u4e00\u4e2a\u5143\u7d20</li> <li>\u5f53\u524d\u8282\u70b9\u5143\u7d20\u4e0d\u8db3\uff0c\u5144\u5f1f\u8282\u70b9\u4e5f\u4e0d\u80fd\u501f\uff0c\u5c31\u5c06\u7236\u8282\u70b9\u4e0b\u6ea2\uff0c\u5408\u5e76\u7236\u5b50\u8282\u70b9\u4e3a\u65b0\u8282\u70b9</li> </ol> <p>\u7ea2\u9ed1\u6811\u548c B-\u6811\u662f\u5bf9\u5e94\u7684\uff0c\u7ea2\u9ed1\u6811\u7684\u5e73\u8861\u8c03\u6574\u4e5f\u53ef\u4ee5\u5206\u4e3a\u8fd9 3 \u79cd\u60c5\u51b5\u3002</p>"},{"location":"ch05_tree/red_black_tree/#4321","title":"4.3.2.1 \u7ea2\u8272\u8282\u70b9\u76f4\u63a5\u5220\u9664","text":"<p>\u5f53\u88ab\u5220\u9664\u7684 B-\u6811\u8282\u70b9\u5143\u7d20\u5145\u8db3\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\uff0c\u4e0d\u7528\u8c03\u6574\uff1a</p> <pre><code>                                                               \u65e0\u9700\u8c03\u6574\u6811\u7ed3\u6784\n\n           ___ ___ ___             remove 1                     ___ ___ ___ \n          | 1 | 2 | 3 |               =&gt;                       | 2 | 3 |   | \n</code></pre> <p>\u8fd9\u79cd\u60c5\u51b5\u5bf9\u5e94\u5230\u7ea2\u9ed1\u6811\u5c31\u662f\uff1a</p> <ul> <li>\u5220\u9664\u8282\u70b9\u662f 1 \u4e2a\u9ed1\u8272\u8282\u70b9 + 1/2 \u4e2a\u7ea2\u8272\u8282\u70b9</li> <li>\u5220\u9664\u7ea2\u9ed1\u6811\u7684\u7ea2\u8272\u8282\u70b9\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\uff0c\u4e0d\u7528\u8c03\u6574\u6811\u7ed3\u6784</li> <li>\u4f46\u4e0d\u80fd\u662f\u5220\u9664\u9ed1\u8272\u8282\u70b9\uff0c\u56e0\u4e3a\u5220\u9664\u9ed1\u8272\u8282\u70b9\u76f8\u5f53\u4e8e\u5220\u9664\u4e86\u6240\u6709\u76f8\u5173\u8282\u70b9\uff0c\u60c5\u51b5\u4e0d\u540c</li> </ul> <p>\u5220\u9664\u7ea2\u8272\u8282\u70b9\u7684\u8fc7\u7a0b\u5c31\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>\u5220\u9664\u7ea2\u8272\u8282\u70b9                  \u5220\u9664\u540e\n\n    b2       remove r1        b2\n   /  \\         =&gt;             \\\n  r1  r3                       r3\n</code></pre> <pre><code>\u5220\u9664\u7ea2\u8272\u8282\u70b9                  \u5220\u9664\u540e\n\n    b2       remove r1        \n   /            =&gt;            b2\n  r1\n</code></pre> <p>\u5220\u9664\u7ea2\u8272\u8282\u70b9\u7684\u60c5\u51b5\u5c31\u662f\u76f4\u63a5\u5220\u9664\u5373\u53ef\uff0c\u4e5f\u4e0d\u9700\u8981\u8c03\u6574\u7ed3\u6784\uff0c\u6bd4\u8f83\u7b80\u5355\u3002</p>"},{"location":"ch05_tree/red_black_tree/#4322","title":"4.3.2.2 \u4ece\u5144\u5f1f\u501f\u7ea2\u8272\u8282\u70b9","text":"<p>\u5f53\u88ab\u5220\u9664\u7684 B-\u6811\u8282\u70b9\u5143\u7d20\u4e0d\u8db3\u65f6\uff0c\u4f1a\u5148\u4ece\u5144\u5f1f\u8282\u70b9\u501f\u4e00\u4e2a\u5143\u7d20\uff1a</p> <pre><code>                                                          \u5de6\u65cb\uff0c\u4ece\u53f3\u5144\u5f1f\u501f\u4e00\u4e2a\u5143\u7d20\n\n           ___ ___ ___                                          ___ ___ ___ \n          | 2 |   |   |                                        | 3 |   |   | \n                |                                                    |\n      -------------------           remove 1                -------------------\n      |                 |              =&gt;                   |                 |\n ___ ___ ___       ___ ___ ___                         ___ ___ ___       ___ ___ ___ \n| 1 |   |   |     | 3 | 5 |   |                       | 2 |   |   |     | 5 |   |   | \n</code></pre> <p>\u8fd9\u79cd\u60c5\u51b5\u5bf9\u5e94\u5230\u7ea2\u9ed1\u6811\u5c31\u662f\uff1a</p> <ul> <li>\u5220\u9664\u8282\u70b9\u662f\u9ed1\u8272\u8282\u70b9\uff0c\u800c\u5144\u5f1f\u5219\u662f 1 \u4e2a\u9ed1\u8272\u8282\u70b9 + 1/2 \u4e2a\u7ea2\u8272\u8282\u70b9\uff08\u5b50\u8282\u70b9\uff09</li> <li>\u5220\u9664\u9ed1\u8272\u8282\u70b9\u65f6\uff0c\u5982\u679c\u5144\u5f1f\u9644\u5e26\u6709\u7ea2\u8272\u8282\u70b9\uff08\u5373\u7ea2\u8272\u5b50\u8282\u70b9\uff09\uff0c\u5c31\u53ef\u4ee5\u4ece\u5144\u5f1f\u90a3\u8fb9\u501f\u4e00\u4e2a\u7ea2\u8272\u8282\u70b9</li> </ul> <p>\u8fd9\u79cd\u60c5\u51b5\u7684\u5904\u7406\u8fc7\u7a0b\u5c31\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>  b2      borrow right       b3       remove b1         b3\n /  \\         =&gt;            /  \\         =&gt;            /  \\\nb1  b3                     b2  b5                     b2  b5\n      \\                   /\n      r5                 b1\n</code></pre> <pre><code>  b2      rotate right       b2\n /  \\         =&gt;            /  \\        =&gt;  \u6309\u7167\u4e0a\u9762\u7684\u5904\u7406\nb1  b5                     b1  b3\n    /                            \\\n   r3                            r5\n</code></pre> <p>\u5148\u4ece\u5144\u5f1f\u501f\u4e00\u4e2a\u7ea2\u8272\u8282\u70b9\uff0c\u518d\u5220\u9664\u5143\u7d20\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u635f\u574f\u6811\u5e73\u8861\u3002\u4e0d\u8fc7\uff0c</p> <ul> <li>\u5f53\u5144\u5f1f\u9644\u5e26\u6709\u7ea2\u8272\u5b50\u8282\u70b9\u65f6\u624d\u53ef\u4ee5\u501f\uff0c\u6240\u4ee5\u5144\u5f1f\u5fc5\u987b\u662f\u9ed1\u8272\u8282\u70b9\u624d\u884c</li> </ul> <p>\u5982\u679c\u5144\u5f1f\u662f\u7ea2\u8272\u8282\u70b9\uff0c\u9700\u8981\u5148\u65cb\u8f6c\u4e00\u6b21\uff0c\u5c06\u5144\u5f1f\u53d8\u6210\u9ed1\u8272\u624d\u884c\uff0c\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>     \u5220\u96641                             6 \u5de6\u65cb\n\n      b2                                b6\n   /      \\        rotate left       /      \\\n  b1      r6          =&gt;           r2       b7      =&gt;   \u6309\u7167\u4e0a\u9762\u7684\u5904\u7406\n         /  \\                     /  \\\n        b4  b7                   b1  b4\n       /  \\                         /  \\\n      r3  r5                       r3  r5 \n</code></pre> <p>\u65cb\u8f6c\u4ee5\u540e\uff0c\u5220\u9664\u8282\u70b9\u7684\u5144\u5f1f\u7531\u7ea2\u8272 r6 \u53d8\u6210\u9ed1\u8272 b4\uff0c\u6b64\u65f6\u5c31\u80fd\u4ece\u5144\u5f1f\u501f\u5143\u7d20\u4e86\u3002</p>"},{"location":"ch05_tree/red_black_tree/#4323","title":"4.3.2.3 \u7236\u8282\u70b9\u4e0b\u6ea2\u5408\u5e76","text":"<p>\u5f53\u88ab\u5220\u9664\u7684 B-\u6811\u8282\u70b9\u5143\u7d20\u4e0d\u8db3\uff0c\u5e76\u4e14\u5144\u5f1f\u4e5f\u6ca1\u529e\u6cd5\u501f\u65f6\uff0c\u7236\u8282\u70b9\u5c31\u4f1a\u4ea7\u751f\u4e0b\u6ea2\uff0c\u5e76\u548c\u5de6\u53f3\u5b50\u8282\u70b9\u5408\u5e76\uff1a</p> <pre><code>                                                        \u7236\u8282\u70b9\u4e0b\u6ea2\uff0c\u5408\u5e76\u7236\u5b50\u8282\u70b9\n\n           ___ ___ ___\n          | 2 |   |   |\n                |                                                     \n      -------------------           remove 1                  ___ ___ ___ \n      |                 |              =&gt;                    | 2 | 3 |   |\n ___ ___ ___       ___ ___ ___ \n| 1 |   |   |     | 3 |   |   |\n</code></pre> <p>\u8fd9\u79cd\u60c5\u51b5\u5bf9\u5e94\u5230\u7ea2\u9ed1\u6811\u5c31\u662f\uff1a</p> <ul> <li>\u5220\u9664\u8282\u70b9\u662f\u9ed1\u8272\u8282\u70b9\uff0c\u5e76\u4e14\u5144\u5f1f\u4e5f\u53ea\u662f 1 \u4e2a\u9ed1\u8272\u8282\u70b9</li> <li>\u5220\u9664\u9ed1\u8272\u8282\u70b9\u65f6\uff0c\u5982\u679c\u5144\u5f1f\u6ca1\u9644\u5e26\u6709\u7ea2\u8272\u8282\u70b9\uff08\u5373\u7ea2\u8272\u5b50\u8282\u70b9\uff09\uff0c\u5c31\u9700\u8981\u7236\u8282\u70b9\u4e0b\u6ea2\uff0c\u548c\u5b50\u8282\u70b9\u5408\u5e76</li> </ul> <p>\u8fd9\u79cd\u60c5\u51b5\u7684\u5904\u7406\u8fc7\u7a0b\u5c31\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>                              \u7236\u8282\u70b9\u4e0b\u6ea2\n\n      b2        remove 1         b2\n     /  \\          =&gt;              \\\n    b1  b3                         r3\n</code></pre> <p>\u4e0d\u8fc7\u7531\u4e8e\u7236\u8282\u70b9\u4e0b\u6ea2\u4e86\uff0c\u5c31\u53ef\u80fd\u4f1a\u4ea7\u751f\u65b0\u7684\u4e0d\u5e73\u8861\uff0c\u6bd4\u5982\u8fd9\u6837\uff1a</p> <pre><code>    \u8981\u5220\u96641                      2\u53d8\u9ed1\uff0c3\u53d8\u7ea2                       \u5220\u96641\n\n      b4                            b4                             b4\n   /      \\       merge b2       /      \\      remove r1        /      \\\n  b2      b6         =&gt;         b2      r6         =&gt;          b2      b6\n /  \\    /  \\                  /  \\    /  \\                      \\    /  \\\nb1  b3  b5  b7                r1  r3  b5  b7                     r3  b5  b7\n</code></pre> <p>\u5047\u5982\u8fd9\u6837\u5220\u9664 1 \u8282\u70b9\uff0c\u90a3\u4e48\u6700\u540e\u5de6\u5b50\u6811\u7684\u9ed1\u9ad8\u662f 2\uff0c\u800c\u53f3\u5b50\u6811\u7684\u9ed1\u9ad8\u662f 3\uff0c\u8fd9\u5176\u5b9e\u662f\u4e0d\u5e73\u8861\u7684\u7ed3\u6784\u3002</p> <p>\u548c B-\u6811\u7684\u4e00\u6837\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5c31\u9700\u8981\u9012\u5f52\u8c03\u6574\u4e0d\u5e73\u8861\u7ed3\u6784\uff0c\u5c06\u7236\u8282\u70b9\u5f53\u4f5c\u5220\u9664\u8282\u70b9\u518d\u5f80\u4e0a\u9012\u5f52\u8c03\u6574\uff1a</p> <pre><code>    \u8981\u5220\u96641                     2\u53d8\u9ed1\uff0c3\u53d8\u7ea2                   4\u53d8\u9ed1\uff0c6\u53d8\u7ea2                        \u5220\u96641\n\n      b4                            b4                             b4                             b4\n   /      \\       merge b2       /      \\       merge b4        /      \\      remove r1        /      \\\n  b2      b6         =&gt;         b2      r6         =&gt;          b2      r6         =&gt;          b2      r6\n /  \\    /  \\                  /  \\    /  \\                   /  \\    /  \\                      \\    /  \\\nb1  b3  b5  b7                r1  r3  b5  b7                 r1  r3  b5  b7                     r3  b5  b7\n</code></pre> <p>\u6309\u7167\u8fd9\u79cd\u65b9\u5f0f\u4e00\u76f4\u5f80\u4e0a\u9012\u5f52\uff0c\u76f4\u5230\u7ed3\u6784\u5e73\u8861\u6216\u8005\u62b5\u8fbe\u6839\u8282\u70b9\u4e3a\u6b62\u3002</p> <ul> <li>\u4e3a\u4e86\u907f\u514d\u4ea7\u751f\u7ea7\u8054\u4e0b\u6ea2\uff0c\u5e94\u8be5\u4f18\u5148\u9009\u62e9\u7ea2\u8272\u7236\u8282\u70b9\u4e0b\u6ea2</li> </ul> <p>\u6240\u4ee5\uff0c\u5982\u679c\u7236\u8282\u70b9\u6709\u7ea2\u8272\u8282\u70b9\uff08\u5373\u5144\u5f1f\u662f\u7ea2\u8272\uff09\uff0c\u5148\u5c06\u7ea2\u8272\u8282\u70b9\u8f6c\u5230\u5220\u9664\u8282\u70b9\u8fd9\u8fb9\uff0c\u7136\u540e\u518d\u64cd\u4f5c\uff1a</p> <pre><code>    \u8981\u5220\u96642                         6\u5de6\u65cb\n\n      b4                            b6\n   /      \\      rotate left     /      \\\n  b2      r6         =&gt;         r4      b7         =&gt;     \u6309\u7167\u4e0a\u9762\u7684\u5904\u7406\n         /  \\                  /  \\\n        b5  b7                b2  b5\n</code></pre> <p>\u65cb\u8f6c\u8fc7\u540e\uff0c\u5220\u9664\u8282\u70b9\u7684\u7236\u8282\u70b9\u7531\u9ed1\u8272 b4 \u53d8\u6210\u4e86\u7ea2\u8272 r4\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u4ea7\u751f\u7ea7\u8054\u4e0b\u6ea2\u4e86\u3002</p>"},{"location":"ch05_tree/red_black_tree/#433","title":"4.3.3 \u771f\u6b63\u5220\u9664\u8282\u70b9","text":"<p>\u5220\u9664\u5e73\u8861\u8c03\u6574\u5b8c\u6210\u540e\uff0c\u5c31\u5f00\u59cb\u771f\u6b63\u5730\u5220\u9664\u8282\u70b9\u4e86\u3002</p> <p>\u7531\u4e8e\u7b2c 1 \u6b65\u4f7f\u7528\u540e\u7ee7\u8282\u70b9\u66ff\u4ee3\u4e86\u5220\u9664\u8282\u70b9\uff0c\u6240\u4ee5\u6700\u540e\u88ab\u5220\u9664\u8282\u70b9\u7684\u7ed3\u6784\u662f\u5f88\u7b80\u5355\u7684\uff1a</p> <ul> <li>\u88ab\u5220\u9664\u8282\u70b9\u81f3\u591a\u53ea\u6709 1 \u4e2a\u5b50\u8282\u70b9</li> <li>\u76f4\u63a5\u5220\u9664\u8282\u70b9\uff0c\u7136\u540e\u8fd4\u56de\u5b83\u7684\u975e\u7a7a\u5b50\u8282\u70b9\u5373\u53ef</li> </ul> <p>\u6700\u540e\u7684\u5220\u9664\u8282\u70b9\u8fc7\u7a0b\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>   \u5220\u9664 b2 \u8282\u70b9           \u8fd4\u56de\u975e\u7a7a\u5b50\u8282\u70b9\n\n      b2       remove b2         \n     /            =&gt;          r1\n    r1                       \n</code></pre> <pre><code>   \u5220\u9664 b2 \u8282\u70b9           \u8fd4\u56de\u975e\u7a7a\u5b50\u8282\u70b9\n\n      b2       remove b2          \n        \\         =&gt;          r3\n        r3\n</code></pre> <pre><code>   \u5220\u9664 b2 \u8282\u70b9           \u8fd4\u56de\u975e\u7a7a\u5b50\u8282\u70b9\n\n                remove b2\n      b2          =&gt;          nil\n</code></pre> <p>\u6700\u540e\u7684\u5220\u9664\u8282\u70b9\u6700\u7b80\u5355\uff0c\u96be\u7684\u662f\u524d\u9762\u7684\u5220\u9664\u5e73\u8861\u8c03\u6574\u3002</p>"},{"location":"ch05_tree/red_black_tree/#_7","title":"\u5c0f\u7ed3","text":"<p>\u63d0\u53d6\u201c\u4ece\u5144\u5f1f\u501f\u7ea2\u8282\u70b9\u201d\u548c\u201c\u7236\u8282\u70b9\u4e0b\u6ea2\u5408\u5e76\u201d\u7684\u516c\u5171\u884c\u4e3a\uff1a</p> <ul> <li>\u5220\u9664\u8282\u70b9\u7684\u5144\u5f1f\u662f\u7ea2\u8272\uff0c\u5c31\u5148\u5c06\u7ea2\u8272\u8282\u70b9\u8f6c\u5230\u5220\u9664\u8282\u70b9\u8fd9\u4e00\u8fb9</li> </ul> <p>\u7136\u540e\u518d\u6839\u636e\u4e0a\u9762\u8bf4\u660e\u7684\u51e0\u79cd\u60c5\u51b5\uff0c\u5220\u9664\u7684\u4f2a\u4ee3\u7801\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>public void remove(int val) {\n    RBTNode h = get(root, val);\n    if (h == null) {\n        return;\n    }\n\n    // \u66ff\u6362\u8282\u70b9\uff08\u524d\u7ee7/\u540e\u7ee7\uff09\n    h = swapReplacer(h);\n\n    // \u5148\u8c03\u6574\u6811\u7ed3\u6784\n    balanceDeletion(h);\n\n    // \u771f\u6b63\u5220\u9664\u8282\u70b9\n    removeNode(h);\n\n    // \u6839\u8282\u70b9\u59cb\u7ec8\u662f\u9ed1\u8272\n    setColor(root, BLACK);\n}\n</code></pre> <p>\u5220\u9664\u524d\u8c03\u6574\u6811\u5e73\u8861\uff1a</p> <pre><code>private void balanceDeletion(RBTNode h) {\n    // 1. \u5220\u9664\u7ea2\u8272\u8282\u70b9\uff0c\u4e0d\u9700\u8981\u8c03\u6574\n    RBTNode p = parent(h);\n    if (p == null || isRed(h)) {\n        return;\n    }\n\n    // 2. \u5144\u5f1f\u662f\u7ea2\u8272\uff0c\u5148\u8f6c\u6210\u9ed1\u8272\n    RBTNode s = sibling(h);\n    if (isRed(s)) {\n        rotateOpposite(h);\n        s = sibling(h);\n    }\n\n    // 3. \u770b\u5144\u5f1f\u662f\u5426\u6709\u7ea2\u8272\u8282\u70b9\u53ef\u4ee5\u501f\u4e00\u4e2a\n    if (hasRedChild(s)) {\n        borrowSiblingRed(h);\n        return;\n    }\n\n    // 4. \u5144\u5f1f\u6ca1\u6709\u7ea2\u8272\uff0c\u7236\u8282\u70b9\u4e0b\u6ea2\u5408\u5e76\n    boolean balanced = underflow(h);\n\n    // \u89c6\u60c5\u51b5\u5f80\u4e0a\u9012\u5f52\u8c03\u6574\n    if (!balanced) {\n        balanceDeletion(p);\n    }\n}\n</code></pre> <p>\u548c\u63d2\u5165\u4e00\u6837\uff0c\u5220\u9664\u5e73\u8861\u8c03\u6574\u540e\uff0c\u6700\u540e\u4e5f\u8981\u5c06\u6839\u8282\u70b9\u91cd\u65b0\u8bbe\u4e3a\u9ed1\u8272\u3002</p>"},{"location":"ch05_tree/red_black_tree/#_8","title":"\u603b\u7ed3","text":"<p>\u7ea2\u9ed1\u6811\u7684\u5b9a\u4e49\uff1a</p> <ul> <li>\u7ea2\u9ed1\u6811\u662f\u4e00\u68f5\u53ea\u6709\u7ea2\u8272\u8282\u70b9\u548c\u9ed1\u8272\u8282\u70b9\u7684\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811<ol> <li>\u6bcf\u4e2a\u7ed3\u70b9\u6216\u662f\u7ea2\u8272\u7684\uff0c\u6216\u662f\u9ed1\u8272\u7684</li> <li>\u6839\u8282\u70b9\u662f\u9ed1\u8272\u7684</li> <li>\u6bcf\u4e2a\u53f6\u7ed3\u70b9\uff08NIL\uff09\u662f\u9ed1\u8272\u7684</li> <li>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\u7684\uff0c\u5219\u5b83\u7684\u4e24\u4e2a\u513f\u5b50\u90fd\u662f\u9ed1\u8272\u7684</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u4ece\u8be5\u7ed3\u70b9\u5230\u5176\u5b50\u5b59\u7ed3\u70b9\u7684\u6240\u6709\u8def\u5f84\u4e0a\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8272\u7ed3\u70b9</li> </ol> </li> <li>\u7ea2\u9ed1\u6811\u5e76\u4e0d\u662f\u201c\u9ad8\u5ea6\u201d\u5e73\u8861\u7684\u4e8c\u53c9\u6811\uff0c\u800c\u662f\u201c\u9ed1\u9ad8\u201d\u5e73\u8861\u7684\u4e8c\u53c9\u6811</li> </ul> <p>\u7ea2\u9ed1\u6811\u7684\u6765\u6e90\uff1a</p> <ul> <li>\u7ea2\u9ed1\u6811\u5b9e\u9645\u4e0a\u662f\u7531 4 \u9636 B-\u6811\u6f14\u5316\u800c\u6765\u7684\uff0c\u662f\u4e92\u76f8\u5bf9\u5e94\u7684</li> <li>\u56e0\u4e3a\u5e73\u65f6\u5e38\u7528\u7ea2\u8272\u548c\u9ed1\u8272\u6765\u4f5c\u56fe\uff0c\u6240\u4ee5\u624d\u79f0\u4e4b\u4e3a\u7ea2\u9ed1\u6811</li> </ul> <p>\u7ea2\u9ed1\u6811\u7684\u4f18\u7565\u52bf\uff1a</p> <ul> <li>\u76f8\u6bd4\u4e8e BST \u6811\uff0c\u7ea2\u9ed1\u6811\u7ed3\u6784\u66f4\u52a0\u5e73\u8861\uff0c\u7a33\u5b9a\u6027\u66f4\u597d</li> <li>\u76f8\u6bd4\u4e8e AVL \u6811\uff0c\u7ea2\u9ed1\u6811\u5728\u63d2\u5165\u548c\u5220\u9664\u8fc7\u7a0b\u4e2d\u7684\u65cb\u8f6c\u66f4\u5c11</li> <li>\u76f8\u6bd4\u4e8e B-\u6811\uff0c\u7ea2\u9ed1\u6811\u7ed3\u6784\u66f4\u7b80\u5355\uff0c\u7a7a\u95f4\u5229\u7528\u7387\u66f4\u9ad8</li> </ul> <p>\u7ea2\u9ed1\u6811\u7684\u9002\u7528\u573a\u666f\uff1a</p> <ul> <li>\u9891\u7e41\u7684\u63d2\u5165\u3001\u5220\u9664\uff0c\u91c7\u7528\u7ea2\u9ed1\u6811</li> <li>\u9891\u7e41\u7684\u641c\u7d22\uff0c\u91c7\u7528 AVL \u6811</li> </ul> <p>\u7ea2\u9ed1\u6811\u7684\u68c0\u7d22\uff1a</p> <ul> <li>\u91c7\u7528\u7684\u4e8c\u5206\u67e5\u627e</li> </ul> <p>\u7ea2\u9ed1\u6811\u7684\u63d2\u5165\uff1a</p> <ul> <li>\u65b0\u8282\u70b9\u603b\u662f\u5728\u53f6\u5b50\u8282\u70b9\u5904\u63d2\u5165</li> <li>\u65b0\u8282\u70b9\u7684\u989c\u8272\u603b\u662f\u7ea2\u8272</li> <li>\u63d2\u5165\u65b0\u8282\u70b9\u540e\u53ef\u80fd\u51fa\u73b0\u7684\u60c5\u51b5\u6709 6 \u79cd<ul> <li>\u7236\u8282\u70b9\u662f\u9ed1\u8272<ul> <li>\u65b0\u63d2\u5165\u8282\u70b9\u662f\u5de6\u5b50\u8282\u70b9</li> <li>\u65b0\u63d2\u5165\u8282\u70b9\u662f\u53f3\u5b50\u8282\u70b9</li> </ul> </li> <li>\u7236\u8282\u70b9\u662f\u7ea2\u8272<ul> <li>\u7236\u8282\u70b9\u662f\u5de6\u5b50\u8282\u70b9<ul> <li>\u65b0\u63d2\u5165\u8282\u70b9\u662f\u5de6\u5b50\u8282\u70b9</li> <li>\u65b0\u63d2\u5165\u8282\u70b9\u662f\u53f3\u5b50\u8282\u70b9</li> </ul> </li> <li>\u7236\u8282\u70b9\u662f\u53f3\u5b50\u8282\u70b9<ul> <li>\u65b0\u63d2\u5165\u8282\u70b9\u662f\u5de6\u5b50\u8282\u70b9</li> <li>\u65b0\u63d2\u5165\u8282\u70b9\u662f\u53f3\u5b50\u8282\u70b9</li> </ul> </li> </ul> </li> </ul> </li> <li>\u7236\u8282\u70b9\u662f\u9ed1\u8272\u7684 2 \u79cd\u60c5\u51b5\uff0c\u4e0d\u5f71\u54cd\u7ea2\u9ed1\u6811\u7684\u201c\u9ed1\u9ad8\u201d\u5e73\u8861\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u8c03\u6574</li> <li>\u53ea\u6709\u7236\u8282\u70b9\u662f\u7ea2\u8272\u7684 4 \u79cd\u60c5\u51b5\u9700\u8981\u8c03\u6574\u7ea2\u9ed1\u6811\u7ed3\u6784\uff0c\u4ee5\u7ef4\u6301\u5e73\u8861</li> </ul> <p>\u7ea2\u9ed1\u6811\u7684\u5220\u9664\uff1a</p> <ul> <li>\u901a\u7528\u7684\u5220\u9664\u6b65\u9aa4<ol> <li>\u66ff\u4ee3\u5220\u9664\u8282\u70b9\uff1a\u5bfb\u627e\u66ff\u4ee3\u5f53\u524d\u8282\u70b9\u7684\u540e\u7ee7\u8282\u70b9\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u76f4\u63a5\u5220\u9664\u5f53\u524d\u8282\u70b9</li> <li>\u5220\u9664\u5e73\u8861\u8c03\u6574\uff1a\u5220\u9664\u524d\u5148\u8c03\u6574\u6811\u7ed3\u6784\uff0c\u4fdd\u8bc1\u5220\u9664\u8282\u70b9\u540e\uff0c\u7ea2\u9ed1\u6811\u7684\u7ed3\u6784\u4f9d\u65e7\u662f\u7a33\u5b9a\u7684</li> <li>\u771f\u6b63\u5220\u9664\u8282\u70b9</li> </ol> </li> <li>\u5220\u9664\u5e73\u8861\u8c03\u6574<ul> <li>\u7ea2\u8272\u8282\u70b9\u76f4\u63a5\u5220\u9664</li> <li>\u4ece\u5144\u5f1f\u501f\u7ea2\u8272\u8282\u70b9</li> <li>\u7236\u8282\u70b9\u4e0b\u6ea2\u5408\u5e76</li> </ul> </li> </ul>"},{"location":"ch05_tree/red_black_tree/#_9","title":"\u53c2\u8003","text":"<p>\u300a\u7b97\u6cd5\u300b\uff08\u7b2c4\u7248\uff09</p> <p>\u300a\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790\uff08\u7b2c\u4e09\u7248\uff09\u300b</p> <p>https://blog.csdn.net/zzy893037505/article/details/115177354</p> <p>http://events.jianshu.io/p/48331a5a11f4</p> <p>https://wenku.baidu.com/view/225ca967cb50ad02de80d4d8d15abe23492f037b.html?wkts=1675956297191</p> <p>https://en.wikipedia.org/wiki/Red%E2%80%93black_tree</p> <p>https://www.cnblogs.com/nullzx/p/6192984.html</p> <p>https://blog.csdn.net/Sun_TTTT/article/details/65445754</p> <p>https://blog.csdn.net/cy973071263/article/details/122543826</p>"},{"location":"ch05_tree/red_black_tree/#_10","title":"\u9644\u5f55","text":""},{"location":"ch05_tree/red_black_tree/#_11","title":"\u7ea2\u9ed1\u6811\u63a5\u53e3","text":"<pre><code>/**\n * \u7ea2\u9ed1\u6811\u63a5\u53e3\n *\n * @author weijiaduo\n * @since 2022/12/21\n */\npublic interface RBTree {\n\n    /**\n     * \u83b7\u53d6\u6307\u5b9a\u503c\u7684\u8282\u70b9\n     *\n     * @param val \u6307\u5b9a\u503c\n     * @return val\u5bf9\u5e94\u7684\u8282\u70b9/null\n     */\n    Integer get(int val);\n\n    /**\n     * \u63d2\u5165\u65b0\u8282\u70b9\n     *\n     * @param val \u65b0\u503c\n     */\n    void insert(int val);\n\n    /**\n     * \u5220\u9664\u6307\u5b9a\u503c\u7684\u8282\u70b9\n     *\n     * @param val \u6307\u5b9a\u503c\n     */\n    void remove(int val);\n\n}\n</code></pre>"},{"location":"ch05_tree/red_black_tree/#_12","title":"\u7ea2\u9ed1\u6811\u5b9e\u73b0","text":"<pre><code>/**\n * \u53cc\u504f\u5411\uff08Both-Leaning\uff09\u7ea2\u9ed1\u6811\uff082-3-4\u6811\uff09\n * &lt;p&gt;\n * 1. \u7ea2\u8272\u8282\u70b9\u53ef\u4ee5\u51fa\u73b0\u5728\u5de6\u53f3\u4e24\u8fb9\n *\n * @author weijiaduo\n * @since 2023/2/2\n */\npublic class BLRBTree implements RBTree {\n\n    /**\n     * \u7ea2\u8272\n     */\n    private static final boolean RED = true;\n    /**\n     * \u9ed1\u8272\n     */\n    private static final boolean BLACK = false;\n\n    /**\n     * \u6839\u8282\u70b9\n     */\n    private RBTNode root;\n\n    @Override\n    public Integer get(int val) {\n        RBTNode node = get(root, val);\n        return node != null ? node.val : null;\n    }\n\n    /**\n     * \u67e5\u627e\u6307\u5b9a\u503c\u5bf9\u5e94\u7684\u8282\u70b9\n     *\n     * @param h   \u5f53\u524d\u8282\u70b9\n     * @param val \u6307\u5b9a\u503c\n     * @return \u6307\u5b9a\u503c\u7684\u8282\u70b9\n     */\n    private RBTNode get(RBTNode h, int val) {\n        // \u6ca1\u6709\u627e\u5230\n        if (h == null) {\n            return null;\n        }\n        // \u627e\u5230\u5bf9\u5e94\u7684\u8282\u70b9\n        if (h.val == val) {\n            return h;\n        }\n        if (h.val &gt; val) {\n            return get(h.left, val);\n        } else {\n            return get(h.right, val);\n        }\n    }\n\n    @Override\n    public void insert(int val) {\n        if (get(val) != null) {\n            return;\n        }\n\n        // \u63d2\u5165\u65b0\u8282\u70b9\n        RBTNode h = new RBTNode(val);\n        root = insertNode(root, h);\n        // \u8c03\u6574\u6811\u7ed3\u6784\n        balanceInsertion(h);\n\n        // \u6839\u8282\u70b9\u59cb\u7ec8\u662f\u9ed1\u8272\n        setColor(root, BLACK);\n    }\n\n    /**\n     * \u63d2\u5165\u65b0\u8282\u70b9\n     *\n     * @param h       \u5f53\u524d\u8282\u70b9\n     * @param newNode \u65b0\u8282\u70b9\n     * @return \u65b0\u5f53\u524d\u8282\u70b9\n     */\n    private RBTNode insertNode(RBTNode h, RBTNode newNode) {\n        if (h == null) {\n            return newNode;\n        }\n        if (newNode.val &lt; h.val) {\n            h.left = insertNode(h.left, newNode);\n            h.left.parent = h;\n        } else {\n            h.right = insertNode(h.right, newNode);\n            h.right.parent = h;\n        }\n        return h;\n    }\n\n    /**\n     * \u4fee\u6b63\u63d2\u5165\u540e\u7684\u7ea2\u9ed1\u6811\u7ed3\u6784\n     *\n     * @param h \u65b0\u63d2\u5165\u7684\u8282\u70b9\n     */\n    private void balanceInsertion(RBTNode h) {\n        // \u7236\u8282\u70b9\u662f\u9ed1\u8272\u65f6\uff0c\u4e0d\u7528\u8c03\u6574\n        RBTNode p = h.parent;\n        if (!isRed(p)) {\n            return;\n        }\n\n        // \u7236\u8282\u70b9\u662f\u7ea2\u8272\n        RBTNode gp = p.parent;\n        if (p == gp.left) {\n            // LR \u53cc\u7ea2\u8282\u70b9\n            if (h == p.right) {\n                rotateLeft(p);\n            }\n            // LL \u53cc\u7ea2\u8282\u70b9\n            p = rotateRight(gp);\n        } else {\n            // RL \u53cc\u7ea2\u8282\u70b9\n            if (h == p.left) {\n                rotateRight(p);\n            }\n            // RR \u53cc\u7ea2\u8282\u70b9\n            p = rotateLeft(gp);\n        }\n\n        // \u7236\u5b50\u53cd\u8272\n        setColor(p, RED);\n        setColor(p.left, BLACK);\n        setColor(p.right, BLACK);\n\n        // \u9012\u5f52\u5f80\u4e0a\u5904\u7406\n        balanceInsertion(p);\n    }\n\n    @Override\n    public void remove(int val) {\n        RBTNode h = get(root, val);\n        if (h == null) {\n            return;\n        }\n\n        // \u66ff\u6362\u8282\u70b9\uff08\u540e\u7ee7/\u524d\u7ee7\uff09\n        h = swapReplacer(h);\n        // \u5148\u8c03\u6574\u6811\u7ed3\u6784\n        balanceDeletion(h);\n        // \u771f\u6b63\u5220\u9664\u8282\u70b9\n        removeNode(h);\n\n        // \u6839\u8282\u70b9\u59cb\u7ec8\u662f\u9ed1\u8272\n        setColor(root, BLACK);\n    }\n\n    /**\n     * \u4ea4\u6362\u5f53\u524d\u8282\u70b9\u5230\u540e\u7ee7/\u524d\u7ee7\u8282\u70b9\n     *\n     * @param h \u5f53\u524d\u8282\u70b9\n     * @return \u66ff\u6362\u8282\u70b9\n     */\n    private RBTNode swapReplacer(RBTNode h) {\n        RBTNode replacer = h;\n        if (h.left != null &amp;&amp; h.right != null) {\n            replacer = h.right;\n            while (replacer.left != null) {\n                replacer = replacer.left;\n            }\n        } else if (h.right != null) {\n            replacer = h.right;\n        } else if (h.left != null) {\n            replacer = h.left;\n        }\n\n        // TODO: \u7b80\u5355\u70b9\uff0c\u4ec5\u66ff\u6362\u503c\uff0c\u8282\u70b9\u4e0d\u53d8\n        int val = h.val;\n        h.val = replacer.val;\n        replacer.val = val;\n        return replacer;\n    }\n\n    /**\n     * \u79fb\u9664\u8282\u70b9\uff08\u540e\u7ee7\u6700\u5c0f\u503c/\u524d\u7ee7\u6700\u5927\u503c\uff09\n     *\n     * @param h \u88ab\u79fb\u9664\u8282\u70b9\uff0c\u786e\u4fdd\u6ca1\u6709\u5b69\u5b50\u6216\u53ea\u67091\u4e2a\u5b69\u5b50\n     */\n    private void removeNode(RBTNode h) {\n        RBTNode p = h.parent;\n        if (p == null) {\n            if (h.left == null) {\n                root = h.right;\n            } else {\n                root = h.left;\n            }\n        } else {\n            if (h == p.left) {\n                // \u540e\u7ee7\u6700\u5c0f\u503c\n                p.left = h.right;\n            } else {\n                // \u524d\u7ee7\u6700\u5927\u503c\n                p.right = h.left;\n            }\n        }\n        h.parent = h.left = h.right = null;\n    }\n\n    /**\n     * \u4fee\u6b63\u5220\u9664\u8282\u70b9\u524d\u7684\u7ea2\u9ed1\u6811\u7ed3\u6784\n     *\n     * @param h \u88ab\u5220\u9664\u8282\u70b9\n     */\n    private void balanceDeletion(RBTNode h) {\n        // \u5220\u9664\u7ea2\u8272\u8282\u70b9\uff0c\u4e0d\u5f71\u54cd\u5e73\u8861\u6027\n        RBTNode p = h.parent;\n        if (p == null || isRed(h)) {\n            return;\n        }\n\n        // \u5220\u9664\u9ed1\u8272\u8282\u70b9\n        if (h == p.left) {\n            // 1. \u5144\u5f1f\u662f\u7ea2\u8272\uff0c\u5148\u8f6c\u6210\u9ed1\u8272\n            RBTNode s = p.right;\n            if (isRed(s)) {\n                rotateLeft(p);\n            }\n            // 2. \u4ece\u5144\u5f1f\u501f\u7ea2\u8272\u5b69\u5b50\n            if (borrowRight(h)) {\n                return;\n            }\n            // 3. \u7236\u8282\u70b9\u4e0b\u6ea2\u5408\u5e76\n            if (underflow(h)) {\n                return;\n            }\n        } else {\n            // \u955c\u50cf\u5904\u7406\n            RBTNode s = p.left;\n            if (isRed(s)) {\n                rotateRight(p);\n            }\n            if (borrowLeft(h)) {\n                return;\n            }\n            if (underflow(h)) {\n                return;\n            }\n        }\n\n        // \u9012\u5f52\u5411\u4e0a\u8c03\u6574\n        balanceDeletion(p);\n    }\n\n    /**\n     * \u7236\u8282\u70b9\u4e0b\u6ea2\uff0c\u7236\u5b50\u8282\u70b9\u5408\u5e76\n     *\n     * @param h \u5f53\u524d\u8282\u70b9\n     * @return true\u4e0b\u6ea2\u540e\u5df2\u5e73\u8861/false\u4e0b\u6ea2\u540e\u672a\u5e73\u8861\n     */\n    private boolean underflow(RBTNode h) {\n        RBTNode p = h.parent;\n        RBTNode s;\n        if (p.left == h) {\n            s = p.right;\n        } else {\n            s = p.left;\n        }\n        boolean balanced = isRed(p);\n        setColor(p, BLACK);\n        setColor(s, RED);\n        return balanced;\n    }\n\n    /**\n     * \u4ece\u53f3\u5144\u5f1f\u501f\u4e00\u4e2a\u7ea2\u8272\u8282\u70b9\u8fc7\u6765\n     *\n     * @param h \u5f53\u524d\u8282\u70b9\n     * @return true\u501f\u7528\u6210\u529f/false\u501f\u7528\u5931\u8d25\n     */\n    private boolean borrowRight(RBTNode h) {\n        RBTNode p = h.parent;\n        RBTNode s = p.right;\n        RBTNode sl = s.left, sr = s.right;\n        if (!isRed(sl) &amp;&amp; !isRed(sr)) {\n            // \u6ca1\u6709\u7ea2\u8272\u8282\u70b9\u53ef\u501f\n            return false;\n        }\n\n        // \u8fdc\u4f84\u5b50\u662f\u9ed1\u8272\uff0c\u8fd1\u4f84\u5b50\u662f\u7ea2\u8272\n        if (!isRed(sr)) {\n            rotateRight(s);\n        }\n        // \u8fdc\u4f84\u5b50\u662f\u7ea2\u8272\n        p = rotateLeft(p);\n        setColor(p.left, BLACK);\n        setColor(p.right, BLACK);\n        return true;\n    }\n\n    /**\n     * \u4ece\u5de6\u5144\u5f1f\u501f\u4e00\u4e2a\u7ea2\u8272\u8282\u70b9\u8fc7\u6765\n     *\n     * @param h \u5f53\u524d\u8282\u70b9\n     * @return true\u501f\u7528\u6210\u529f/false\u501f\u7528\u5931\u8d25\n     */\n    private boolean borrowLeft(RBTNode h) {\n        RBTNode p = h.parent;\n        RBTNode s = p.left;\n        RBTNode sl = s.left, sr = s.right;\n        if (!isRed(sl) &amp;&amp; !isRed(sr)) {\n            // \u6ca1\u6709\u7ea2\u8272\u8282\u70b9\u53ef\u501f\n            return false;\n        }\n\n        // \u8fdc\u4f84\u5b50\u662f\u9ed1\u8272\uff0c\u8fd1\u4f84\u5b50\u662f\u7ea2\u8272\n        if (!isRed(sl)) {\n            rotateLeft(s);\n        }\n        // \u8fdc\u4f84\u5b50\u662f\u7ea2\u8272\n        p = rotateRight(p);\n        setColor(p.left, BLACK);\n        setColor(p.right, BLACK);\n        return true;\n    }\n\n    /**\n     * \u5de6\u65cb\uff0c\u5c06\u7ea2\u8272\u8282\u70b9\u8f6c\u5230\u5de6\u8fb9\n     *\n     * @param h \u5f53\u524d\u8282\u70b9\n     * @return \u65b0\u5f53\u524d\u8282\u70b9\n     */\n    private RBTNode rotateLeft(RBTNode h) {\n        if (h == null || h.right == null) {\n            return h;\n        }\n\n        RBTNode p = h.parent;\n        RBTNode r = h.right;\n        r.parent = p;\n        if (p == null) {\n            root = r;\n            r.color = BLACK;\n        } else {\n            r.color = p.color;\n            if (h == p.left) {\n                p.left = r;\n            } else {\n                p.right = r;\n            }\n        }\n\n        h.right = r.left;\n        if (h.right != null) {\n            h.right.parent = h;\n        }\n        h.parent = r;\n        r.left = h;\n        h.color = RED;\n        return r;\n    }\n\n    /**\n     * \u53f3\u65cb\uff0c\u5c06\u7ea2\u8272\u8282\u70b9\u8f6c\u5230\u53f3\u8fb9\n     *\n     * @param h \u5f53\u524d\u8282\u70b9\n     * @return \u65b0\u5f53\u524d\u8282\u70b9\n     */\n    private RBTNode rotateRight(RBTNode h) {\n        if (h == null || h.left == null) {\n            return h;\n        }\n\n        RBTNode p = h.parent;\n        RBTNode l = h.left;\n        l.parent = p;\n        if (p == null) {\n            root = l;\n            l.color = BLACK;\n        } else {\n            l.color = p.color;\n            if (h == p.left) {\n                p.left = l;\n            } else {\n                p.right = l;\n            }\n        }\n\n        h.left = l.right;\n        if (h.left != null) {\n            h.left.parent = h;\n        }\n        h.parent = l;\n        l.right = h;\n        h.color = RED;\n        return l;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u8282\u70b9\u989c\u8272\n     *\n     * @param h     \u8282\u70b9\n     * @param color \u989c\u8272\n     */\n    private void setColor(RBTNode h, boolean color) {\n        if (h != null) {\n            h.color = color;\n        }\n    }\n\n    /**\n     * \u662f\u5426\u662f\u7ea2\u8272\n     *\n     * @param h \u8282\u70b9\n     * @return true/false\n     */\n    private boolean isRed(RBTNode h) {\n        return h != null &amp;&amp; h.color == RED;\n    }\n\n}\n</code></pre>"},{"location":"ch05_tree/segment_tree/","title":"\u7ebf\u6bb5\u6811","text":""},{"location":"ch05_tree/segment_tree/#_2","title":"\u4e00\u3001\u7ebf\u6bb5\u6811\u662f\u4ec0\u4e48\uff1f","text":"<ul> <li>\u7ebf\u6bb5\u6811\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u7f13\u5b58\uff0c\u5b83\u7f13\u5b58\u7684\u662f\u533a\u95f4\u503c</li> <li>\u7ebf\u6bb5\u6811\u4e00\u68f5\u5e73\u8861\u4e8c\u53c9\u6811</li> <li>\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u8868\u793a\u7684\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u8282\u70b9\u503c\u8868\u793a\u533a\u95f4\u503c</li> </ul>"},{"location":"ch05_tree/segment_tree/#_3","title":"\u4e8c\u3001\u4e3a\u4ec0\u4e48\u8981\u7528\u7ebf\u6bb5\u6811\uff1f","text":"<p>\u7ebf\u6bb5\u6811\u7684\u5e38\u89c1\u7528\u9014\u6709\uff1a</p> <ul> <li>\u7f13\u5b58\u533a\u95f4\u503c\uff0c\u63d0\u9ad8\u591a\u6b21\u67e5\u8be2\u533a\u95f4\u503c\u7684\u6027\u80fd</li> <li>\u61d2\u66f4\u65b0\u533a\u95f4\uff0c\u51cf\u5c11\u4fee\u6539\u7684\u6b21\u6570\uff0c\u63d0\u9ad8\u591a\u6b21\u4fee\u6539\u533a\u95f4\u7684\u6027\u80fd</li> </ul> <p>\u7b80\u5355\u70b9\u8bf4\u5c31\u662f\uff1a</p> <ul> <li>\u901a\u8fc7\u7f13\u5b58\uff0c\u63d0\u9ad8\u591a\u6b21\u533a\u95f4\u67e5\u8be2\u548c\u533a\u95f4\u4fee\u6539\u7684\u6027\u80fd</li> <li>\u91cd\u70b9\u5728\u4e8e\u591a\u6b21\uff0c\u591a\u6b21\uff0c\u591a\u6b21\uff01\uff01\uff01</li> </ul> <p>\u4e0b\u9762\u8bf4\u660e\u7ebf\u6bb5\u6811\u5982\u4f55\u901a\u8fc7\u7f13\u5b58\u63d0\u9ad8\u6027\u80fd\u3002</p> <p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5f53\u9700\u8981\u4fee\u6539\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u6240\u6709\u503c\u65f6\uff0c\u53ea\u80fd\u901a\u8fc7\u904d\u5386\u7684\u65b9\u5f0f\u5b9e\u73b0\uff1a</p> <pre><code>for (int i = start; i &lt; end; i++) {\n    nums[i] = val;\n}\n</code></pre> <p>\u5305\u62ec\u83b7\u53d6\u67e5\u8be2\u67d0\u4e2a\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u3001\u533a\u95f4\u548c\u65f6\uff0c\u4e5f\u53ea\u80fd\u904d\u5386\u6574\u4e2a\u533a\u95f4\uff1a</p> <pre><code>int sum = 0;\nfor (int i = start; i &lt; end; i++) {\n    sum += nums[i];\n}\n</code></pre> <p>\u50cf\u8fd9\u79cd\u533a\u95f4\u67e5\u8be2\u548c\u533a\u95f4\u4fee\u6539\uff0c\u6ca1\u6709\u5176\u4ed6\u529e\u6cd5\uff0c\u4e5f\u53ea\u80fd\u901a\u8fc7\u904d\u5386\u6765\u5b9e\u73b0\u4e86\u3002</p> <p>\u4f46\u662f\uff0c\u5982\u679c\u8bf4\u4f1a\u591a\u6b21\u6267\u884c\u533a\u95f4\u67e5\u8be2\uff0c\u6bcf\u6b21\u90fd\u8981\u904d\u5386\u4e00\u904d\u7684\u8bdd\uff0c\u6027\u80fd\u4f1a\u6bd4\u8f83\u5dee\u3002</p> <ul> <li>\u80fd\u4e0d\u80fd\u628a\u533a\u95f4\u67e5\u8be2\u7684\u7ed3\u679c\u7f13\u5b58\u4e0b\u6765\uff0c\u4e0b\u6b21\u67e5\u8be2\u65f6\u76f4\u63a5\u8fd4\u56de\u7f13\u5b58\uff1f</li> </ul> <p>\u6bd4\u5982\uff0c\u5728\u533a\u95f4\u4e4b\u4e0a\u7f13\u5b58\u4e00\u4e2a\u533a\u95f4\u548c\u7ed3\u679c\uff1a</p> <pre><code>             ____\n            | 28 |               -- \u7f13\u5b58\u533a\u95f4\u503c\n              |        \n   _______________________\n  |                       |\n ___ ___ ___ ___ ___ ___ ___\n| 1 | 6 | 7 | 2 | 5 | 4 | 3 |    -- \u539f\u59cb\u6570\u7ec4\uff08\u5df2\u6392\u9664\u7d22\u5f15 0\uff0c\u4ece 1 \u5f00\u59cb\uff09\n</code></pre> <p>\u4e0b\u6b21\u67e5\u8be2 <code>[1, 7]</code> \u7684\u533a\u95f4\u548c\u65f6\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u4ece\u7f13\u5b58\u8282\u70b9\u8fd4\u56de\u7ed3\u679c 28\u3002</p> <p>\u8fd9\u6837\u8c8c\u4f3c\u53ef\u884c\uff0c\u4f46\u662f\u53ea\u7f13\u5b58\u4e00\u4e2a\u591f\u4e86\u5417\uff1f\u4e0d\u591f\uff0c\u5982\u679c\u8981\u67e5\u8be2\u533a\u95f4 <code>[2 ,4]</code>\uff0c\u8fd8\u662f\u8981\u904d\u5386\u3002</p> <p>\u6240\u4ee5\u9700\u8981\u628a\u5404\u4e2a\u533a\u95f4\u7684\u7ed3\u679c\u90fd\u7f13\u5b58\u4e86\uff0c\u6700\u7ec8\u7f13\u5b58\u7ed3\u6784\u5c31\u53d8\u6210\u4e86\u4e00\u68f5\u4e8c\u53c9\u6811\uff1a</p> <pre><code>                                  ____\n                                 | 28 | ([1, 7])\n                                   |\n                  ____________________________________\n                 |                                    |\n                ____                                 ____\n               | 16 | ([1, 4])                      | 12 | ([5, 7])\n                 |                                    |\n        ___________________                     ______________\n       |                   |                   |              |\n      ___                 ___                 ___             |\n     | 7 | ([1, 2])      | 9 | ([3, 4])      | 9 | ([5, 6])   |\n       |                   |                   |              |\n   _________           _________           _________          |\n  |         |         |         |         |         |         |\n ___       ___       ___       ___       ___       ___       ___\n| 1 |     | 6 |     | 7 |     | 2 |     | 5 |     | 4 |     | 3 |\n</code></pre> <p>\u8fd9\u4e2a\u4e8c\u53c9\u6811\u7ed3\u6784\u5c31\u662f\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u4e00\u4e2a\u533a\u95f4\uff0c\u8282\u70b9\u503c\u5c31\u662f\u533a\u95f4\u503c\u3002</p> <p>\u7ebf\u6bb5\u6811\u5b9e\u9645\u5c31\u662f\u4e00\u4e2a\u4e8c\u53c9\u6811\u7f13\u5b58\u7ed3\u6784\uff0c\u4e0a\u4e00\u5c42\u7f13\u5b58\u7740\u4e0b\u4e00\u5c42\u8282\u70b9\u7684\u533a\u95f4\u503c\u3002</p> <p>\u6709\u4e86\u7ebf\u6bb5\u6811\uff0c\u533a\u95f4\u7684\u67e5\u8be2\u5c31\u53d8\u7b80\u5355\u4e86\uff0c\u6bd4\u5982\u67e5\u8be2\u533a\u95f4 <code>[3, 7]</code>\uff1a</p> <ol> <li>\u4ece\u6839\u8282\u70b9\u51fa\u53d1\uff0c\u5229\u7528\u4e8c\u5206\u6cd5\u9010\u5c42\u5f80\u4e0b\u5bfb\u627e\u67e5\u8be2\u533a\u95f4</li> <li>\u6700\u540e\u627e\u5230\u4e86\u6ee1\u8db3\u8981\u6c42\u7684\u533a\u95f4\u8282\u70b9 <code>[3, 4]</code> \u548c <code>[5, 7]</code></li> <li>\u533a\u95f4\u8282\u70b9 <code>[3, 4]</code> \u7684\u503c\u662f 9\uff0c\u533a\u95f4\u8282\u70b9 <code>[5, 7]</code> \u7684\u503c\u662f 12</li> <li>\u6240\u4ee5 <code>[3, 7]</code> \u7684\u533a\u95f4\u548c\u7b49\u4e8e <code>9 + 12 = 21</code></li> </ol> <p>\u6709\u4e86\u7ebf\u6bb5\u6811\u4ee5\u540e\uff0c\u65e0\u9700\u518d\u904d\u5386\u6240\u6709\u8282\u70b9\uff0c\u800c\u662f\u901a\u8fc7\u4e0a\u5c42\u7684\u7f13\u5b58\u8282\u70b9\u5c31\u80fd\u62ff\u5230\u7ed3\u679c\u3002</p> <ul> <li>\u533a\u95f4\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u4ece <code>O(n)</code> \u964d\u4e3a\u4e86 <code>O(logn)</code></li> </ul> <p>\u7ebf\u6bb5\u6811\u5c31\u662f\u5229\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u901a\u8fc7\u7f13\u5b58\u6765\u63d0\u9ad8\u533a\u95f4\u67e5\u8be2\u7684\u6027\u80fd\u3002</p> <ul> <li>\u7ebf\u6bb5\u6811\u672c\u8d28\u5c31\u662f\u7f13\u5b58\uff0c\u7236\u8282\u70b9\u5c31\u662f\u5b50\u8282\u70b9\u7684\u7f13\u5b58</li> </ul> <p>\u81f3\u4e8e\u7236\u8282\u70b9\u7f13\u5b58\u7684\u662f\u4ec0\u4e48\u6570\u636e\uff0c\u89c6\u60c5\u51b5\u800c\u5b9a\u3002\u6bd4\u5982\u8bf4\uff1a</p> <ul> <li>\u533a\u95f4\u6700\u5927\u503c</li> <li>\u533a\u95f4\u6700\u5c0f\u503c</li> <li>\u533a\u95f4\u548c</li> <li>...</li> </ul> <p>\u4f7f\u7528\u7ebf\u6bb5\u6811\u524d\uff0c\u5e94\u8be5\u60f3\u6e05\u695a\uff0c\u7f13\u5b58\u7684\u6570\u636e\u7a76\u7adf\u662f\u4ec0\u4e48\uff1f</p>"},{"location":"ch05_tree/segment_tree/#_4","title":"\u4e09\u3001\u7ebf\u6bb5\u6811\u5982\u4f55\u5b9e\u73b0\uff1f","text":"<p>\u7ebf\u6bb5\u6811\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e3b\u8981\u5206\u4e3a 2 \u79cd\u7c7b\u578b\uff1a</p> <ul> <li>\u9759\u6001\u7ebf\u6bb5\u6811\uff1a\u6240\u6709\u8282\u70b9\u4e00\u5f00\u59cb\u5c31\u6784\u5efa\u597d\u4e86\uff0c\u548c\u533a\u95f4\u8303\u56f4\u6709\u5173</li> <li>\u52a8\u6001\u7ebf\u6bb5\u6811\uff1a\u8282\u70b9\u662f\u52a8\u6001\u521b\u5efa\u7684\uff0c\u968f\u6570\u636e\u53d8\u5316\u800c\u53d8\u5316</li> </ul> <p>\u9759\u6001\u7ebf\u6bb5\u6811\u5305\u62ec\uff1a</p> <ul> <li>\u7b80\u5355\u7ebf\u6bb5\u6811\uff1a\u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0\u7684\u6ee1\u4e8c\u53c9\u6811\u7ed3\u6784</li> </ul> <p>\u52a8\u6001\u7ebf\u6bb5\u6811\u5305\u62ec\uff1a</p> <ul> <li>\u52a8\u6001\u4f30\u70b9\u7ebf\u6bb5\u6811\uff1a\u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0\u7684\u52a8\u6001\u4e8c\u53c9\u6811</li> <li>\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff1a\u57fa\u4e8e\u6307\u9488\u5b9e\u73b0\u7684\u52a8\u6001\u4e8c\u53c9\u6811</li> </ul> <p>\u4e0b\u9762\u5206\u522b\u4ecb\u7ecd\u8fd9\u51e0\u79cd\u7ebf\u6bb5\u6811\u3002</p>"},{"location":"ch05_tree/segment_tree/#31","title":"3.1 \u7b80\u5355\u7ebf\u6bb5\u6811","text":""},{"location":"ch05_tree/segment_tree/#311","title":"3.1.1 \u57fa\u672c\u601d\u8def","text":"<ul> <li>\u91c7\u7528\u6570\u7ec4\u5b58\u50a8\u7ebf\u6bb5\u6811\u8282\u70b9</li> <li>\u6570\u7ec4\u5b58\u50a8\u7684\u662f\u4e00\u68f5\u6ee1\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u6709\u4e9b\u8282\u70b9\u662f\u591a\u4f59\u7684</li> <li>\u6839\u8282\u70b9\u7684\u6570\u7ec4\u7d22\u5f15\u662f <code>1</code></li> <li>\u5de6\u5b50\u8282\u70b9\u7d22\u5f15 <code>2 * i</code>\uff1b\u53f3\u5b50\u8282\u70b9\u7d22\u5f15 <code>2 * i + 1</code></li> <li>\u603b\u8282\u70b9\u6570\u91cf\uff0c\u4e00\u822c\u53d6\u533a\u95f4 <code>[1, n]</code> \u7684 4 \u500d\uff0c\u5373 <code>4n</code></li> </ul>"},{"location":"ch05_tree/segment_tree/#312","title":"3.1.2 \u5b58\u50a8\u7ed3\u6784","text":"<p>\u7ebf\u6bb5\u6811\u662f\u4e00\u68f5\u5e73\u8861\u4e8c\u53c9\u6811\uff0c\u4e5f\u5c31\u662f\u5de6\u53f3\u5b50\u6811\u8282\u70b9\u6570\u91cf\u76f8\u5dee\u4e0d\u8d85\u8fc7 1\u3002</p> <p>\u4f46\u662f\u5e73\u8861\u4e8c\u53c9\u6811\u5728\u6570\u7ec4\u4e0a\u7684\u5b58\u50a8\u3001\u6784\u9020\u548c\u53d6\u6570\u90fd\u4e0d\u65b9\u4fbf\uff0c\u6240\u4ee5\u6570\u7ec4\u5b58\u50a8\u7684\u662f\u6ee1\u4e8c\u53c9\u6811\u7ed3\u6784\u3002</p> <p>\u6ee1\u4e8c\u53c9\u6811\u5728\u6570\u7ec4\u4e2d\u7684\u7236\u5b50\u8282\u70b9\u7d22\u5f15\u5173\u7cfb\u521a\u597d\u662f\uff1a</p> <ul> <li>\u6839\u8282\u70b9\u7d22\u5f15\u662f <code>1</code></li> <li>\u5de6\u5b50\u8282\u70b9\u7d22\u5f15 <code>2 * i</code></li> <li>\u53f3\u5b50\u8282\u70b9\u7d22\u5f15 <code>2 * i + 1</code></li> </ul> <p>\u5229\u7528\u6ee1\u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff0c\u5f88\u5bb9\u6613\u5728\u6570\u7ec4\u4e0a\u5b9e\u73b0\u7ebf\u6bb5\u6811\u3002</p>"},{"location":"ch05_tree/segment_tree/#313","title":"3.1.3 \u8282\u70b9\u6570\u91cf","text":"<p>\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6570\u91cf\uff0c\u4ece\u4e0a\u5f80\u4e0b\u7edf\u8ba1\u7684\u8bdd\uff1a</p> <pre><code>2 ^ 0           -- \u7b2c1\u5c42\n2 ^ 1           -- \u7b2c2\u5c42\n2 ^ 2           -- \u7b2c3\u5c42\n2 ^ 3           -- \u7b2c4\u5c42\n...\n2 ^ (h - 1)     -- \u7b2ch\u5c42\n...\n</code></pre> <p>\u5982\u679c\u533a\u95f4\u8303\u56f4 <code>n = 2 ^ k</code> \u7684\u8bdd\uff0c\u90a3\u4e48\u521a\u597d\u662f\u6ee1\u4e8c\u53c9\u6811\uff0c\u8282\u70b9\u603b\u6570\u5c31\u662f <code>S = 2n - 1</code>\u3002</p> <p>\u4f46\u5982\u679c\u533a\u95f4\u8303\u56f4\u662f <code>n = 2 ^ k + c</code> \u7684\u8bdd\uff0c\u591a\u51fa\u4e86\u51e0\u4e2a\uff0c\u4e8c\u53c9\u6811\u7684\u6700\u540e\u4e00\u5c42\u5c31\u6ca1\u6709\u6ee1\u3002</p> <ul> <li>\u6ee1\u4e8c\u53c9\u6811\u6709\u4e00\u4e2a\u7279\u70b9\uff0c\u4e0b\u4e00\u5c42\u7684\u8282\u70b9\u6570\u91cf\u7b49\u4e8e\u524d\u9762\u6240\u6709\u5c42\u7ea7\u7684\u8282\u70b9\u6570\u91cf\u603b\u548c + 1</li> </ul> <p>\u6240\u4ee5\uff0c\u5982\u679c\u586b\u6ee1\u4e86\u6700\u540e\u4e00\u5c42\u6784\u6210\u6ee1\u4e8c\u53c9\u6811\u7684\u8bdd\uff0c\u603b\u8282\u70b9\u6570\u91cf\u5c31\u6ee1\u8db3\uff1a</p> <ul> <li><code>2n - 1 &lt;= S &lt; (2n - 1) + 2n = 4n - 1</code></li> </ul> <p>\u6240\u4ee5\uff0c\u5728\u521d\u59cb\u5316\u7ebf\u6bb5\u6811\u65f6\uff1a</p> <ul> <li>\u603b\u8282\u70b9\u6570\u91cf\u4e00\u822c\u53d6\u533a\u95f4\u8303\u56f4\u7684 4 \u500d</li> </ul> <p>\u4f46\u91cc\u9762\u4e0d\u662f\u6240\u6709\u8282\u70b9\u90fd\u4f1a\u7528\u5230\uff0c\u6709\u4e9b\u591a\u4f59\u7684\u8282\u70b9\u3002</p>"},{"location":"ch05_tree/segment_tree/#314","title":"3.1.4 \u6784\u5efa\u8fc7\u7a0b","text":"<p>\u7b80\u5355\u7ebf\u6bb5\u6811\u7684\u6784\u5efa\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u8ba1\u7b97\u51fa\u533a\u95f4 <code>[1, n]</code> \u7684\u603b\u8282\u70b9\u6570\u91cf <code>4n</code></li> <li>\u521d\u59cb\u5316\u6240\u6709\u6811\u8282\u70b9</li> <li>\u9012\u5f52\u6784\u5efa\u4e8c\u53c9\u6811\u7ed3\u6784</li> </ol> <p>\u6bd4\u5982\u6784\u5efa\u201c\u533a\u95f4\u548c\u201d\u7ebf\u6bb5\u6811\u7684\u8fc7\u7a0b\uff0c\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <p>(1) \u521d\u59cb\u5316\u533a\u95f4\u8282\u70b9</p> <pre><code>public SegmentTree(int n) {\n    // \u603b\u8282\u70b9\u6570\u91cf 4n\n    tree = new Node[4 * n];\n    // \u521d\u59cb\u5316\u6240\u6709\u8282\u70b9\n    for (int i = 0; i &lt; tree.length; i++) {\n        tree[i] = new Node();\n    }\n}\n</code></pre> <p>(2) \u9012\u5f52\u6784\u5efa\u4e8c\u53c9\u6811</p> <pre><code>public void buildTree(int root, int start, int end) {\n    // \u53f6\u5b50\u8282\u70b9\n    if (start == end) {\n        tree[root].val = arr[start];\n        return ;\n    }\n\n    // \u5de6\u5b50\u8282\u70b9\u7d22\u5f15\n    int left = 2 * root;\n    // \u53f3\u5b50\u8282\u70b9\u7d22\u5f15\n    int right = 2 * root + 1;\n\n    // \u9012\u5f52\u6784\u5efa\u6811\n    int mid = start + (end - start) / 2;\n    buildTree(left, start, mid);\n    buildTree(right, mid + 1, end);\n\n    // \u5411\u4e0a\u66f4\u65b0\u7236\u8282\u70b9\u7f13\u5b58\n    pushUp(node);\n}\n\nprivate void pushUp(int root) {\n    // \u5de6\u5b50\u8282\u70b9\u7d22\u5f15\n    int left = 2 * root;\n    // \u53f3\u5b50\u8282\u70b9\u7d22\u5f15\n    int right = 2 * root + 1;\n    // \u66f4\u65b0\u7236\u8282\u70b9\u7684\u533a\u95f4\u503c\n    tree[root].val = tree[left].val + tree[right].val;\n}\n</code></pre> <p>\u6bd4\u5982\uff0c\u6570\u7ec4 <code>arr = [, 1, 8, 2, 7, 4]</code>\uff08\u6ce8\u610f\u6570\u7ec4 0 \u7684\u4f4d\u7f6e\u4e0d\u7528\uff09\uff1a</p> <pre><code>                                   ____\n                                  | 18 | ([1, 5])\n                                    |\n                  _______________________________________\n                 |                                       |\n                ____                                    ___\n               | 11 | ([1, 3])                         | 7 | ([4, 5])\n                 |                                       |\n        ___________________                     ___________________\n       |                   |                   |                   |\n      ___                 ___                 ___                 ___\n     | 9 | ([1, 2])      | 2 |               | 3 |               | 4 |\n       |\n   _________       \n  |         |     \n ___       ___\n| 1 |     | 8 |\n</code></pre> <p>\u5047\u8bbe\u533a\u95f4\u8303\u56f4\u5c31\u662f <code>[1, 5]</code>\uff0c\u4e5f\u5c31\u662f <code>n = 5</code>\uff0c\u6240\u4ee5\u9700\u7533\u8bf7 <code>4 * 5 = 20</code> \u4e2a\u8282\u70b9\u7a7a\u95f4\u3002</p> <p>\u4f46\u662f\u5b9e\u9645\u4e0a\u53ea\u7528\u4e86 <code>9</code> \u4e2a\u7a7a\u95f4\uff0c\u4e0d\u8fc7\u4e3a\u4e86\u6309\u7167\u6ee1\u4e8c\u53c9\u6811\u7ed3\u6784\u5b58\u50a8\u6570\u636e\uff0c\u4e5f\u9700\u8981 <code>15</code> \u4e2a\u8282\u70b9\u4e86\u3002</p> <p>\u81f3\u4e8e\u5176\u4ed6\u8fd8\u591a\u51fa\u6765\u7684\u8282\u70b9\uff0c\u662f\u7531\u4e8e <code>4n</code> \u7684\u8bef\u5dee\u5f15\u8d77\u7684\uff0c\u6bd5\u7adf <code>4n</code> \u5e76\u4e0d\u662f\u7cbe\u786e\u7684\u8282\u70b9\u6570\u91cf\u503c\u3002</p>"},{"location":"ch05_tree/segment_tree/#32","title":"3.2 \u52a8\u6001\u4f30\u70b9\u7ebf\u6bb5\u6811","text":""},{"location":"ch05_tree/segment_tree/#321","title":"3.2.1 \u57fa\u672c\u601d\u8def","text":"<ul> <li>\u6839\u636e\u6570\u636e\u60c5\u51b5\uff0c\u9884\u4f30\u53ef\u80fd\u4f1a\u8bbf\u95ee\u5230\u7684\u533a\u95f4\u8303\u56f4\uff0c\u4ece\u800c\u4f30\u8ba1\u8282\u70b9\u6570\u91cf</li> <li>\u6839\u8282\u70b9\u7684\u6570\u7ec4\u7d22\u5f15\u662f 1</li> <li>\u5b50\u8282\u70b9\u7d22\u5f15\u4e0d\u786e\u5b9a\uff0c\u7236\u8282\u70b9\u5185\u7ef4\u62a4\u6709\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u7d22\u5f15 l \u548c r</li> <li>\u7ef4\u62a4\u6709\u4e00\u4e2a size \u5927\u5c0f\uff0c\u8868\u793a\u5f53\u524d\u8282\u70b9\u6570\u91cf\uff0c\u4e5f\u53ef\u7528\u4e8e\u8ba1\u7b97\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u7d22\u5f15</li> <li>\u52a8\u6001\u5f00\u70b9\u65f6\uff0c\u65b0\u8282\u70b9\u7684\u7d22\u5f15\u5c31\u7b49\u4e8e <code>size + 1</code>\uff0c\u6bd4\u5982  <code>node.lp = ++size</code></li> <li>\u4e0d\u7b97\u662f\u5b8c\u5168\u52a8\u6001\uff0c\u6570\u7ec4\u4e00\u5f00\u59cb\u5c31\u5df2\u7ecf\u7533\u8bf7\u597d\u7a7a\u95f4\u4e86\uff0c\u52a8\u6001\u7684\u53ea\u6709\u521b\u5efa <code>Node</code> \u8282\u70b9\u800c\u5df2</li> </ul>"},{"location":"ch05_tree/segment_tree/#322","title":"3.2.2 \u533a\u95f4\u4f30\u70b9","text":"<p>\u9759\u6001\u7ebf\u6bb5\u6811\u7684\u6570\u7ec4\u957f\u5ea6\u662f\u6309\u7167\u6ee1\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u6570\u91cf\u6765\u8bbe\u7f6e\u7684\u3002</p> <p>\u4f46\u662f\u5728\u5b9e\u9645\u4e0a\u672a\u5fc5\u4f1a\u7528\u5230\u8fd9\u4e48\u591a\u8282\u70b9\uff0c\u6240\u4ee5\u53ef\u80fd\u4f1a\u91c7\u7528\u4e00\u79cd\u4f30\u70b9\u7684\u65b9\u5f0f\u6765\u7b80\u5316\u3002</p> <ul> <li>\u4f30\u70b9\uff1a\u5c31\u662f\u4f30\u8ba1\u7ebf\u6bb5\u6811\u4f1a\u7528\u5230\u5b9e\u9645\u533a\u95f4\u8303\u56f4\uff0c\u6765\u66ff\u4ee3\u7406\u8bba\u4e0a\u7684\u533a\u95f4\u8303\u56f4</li> </ul> <p>\u6bd4\u5982\u8bf4\uff0c\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u8303\u56f4\u5b9a\u4e49\u662f <code>[1, 1000]</code>\uff0c\u4f46\u662f\u5b9e\u9645\u67e5\u8be2\u6570\u636e\u8303\u56f4\u53ea\u7528\u5230\u4e86 <code>[1, 200]</code>\u3002</p> <p>\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b8c\u5168\u6ca1\u5fc5\u8981\u4e3a\u7ebf\u6bb5\u6811\u521b\u5efa <code>4 * 1000</code> \u4e2a\u8282\u70b9\uff0c\u56e0\u4e3a\u5f88\u591a\u8282\u70b9\u5b9e\u9645\u4e0a\u6839\u672c\u8bbf\u95ee\u4e0d\u5230\u3002</p> <ul> <li>\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u6570\u636e\u7684\u67e5\u8be2\u8303\u56f4\uff0c\u4f30\u8ba1\u4e00\u4e2a\u5408\u7406\u7684\u8282\u70b9\u6570\u91cf</li> <li>\u5728\u7ebf\u6bb5\u6811\u521d\u59cb\u5316\u6570\u7ec4\u65f6\uff0c\u5c31\u91c7\u7528\u4f30\u70b9\u503c\u6765\u521d\u59cb\u5316\u6570\u7ec4\u957f\u5ea6</li> </ul> <p>\u7f51\u4e0a\u63d0\u4f9b\u4e86\u4e00\u4e9b\u516c\u5f0f\uff0c\u6bd4\u5982 <code>6 * m * logn</code>\uff0c\u5176\u4e2d\uff0cm \u662f\u67e5\u8be2\u6b21\u6570\uff0cn \u662f\u533a\u95f4\u503c\u57df\u5927\u5c0f\u3002</p>"},{"location":"ch05_tree/segment_tree/#323","title":"3.2.3 \u52a8\u6001\u5efa\u70b9","text":"<p>\u52a8\u6001\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u662f\u52a8\u6001\u521b\u5efa\u7684\uff0c\u6240\u4ee5\u4e0d\u518d\u7ef4\u62a4\u6ee1\u4e8c\u53c9\u6811\u7684\u7ed3\u6784\u4e86\u3002</p> <ul> <li>\u65b0\u521b\u5efa\u7684\u8282\u70b9\u90fd\u653e\u5728\u6570\u7ec4\u672b\u5c3e</li> <li>\u7236\u8282\u70b9\u5185\u4fdd\u5b58\u6307\u5411\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u7d22\u5f15</li> </ul> <p>\u8282\u70b9\u7684\u7ed3\u6784\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>class Node {\n    int val;   // \u533a\u95f4\u503c\n    int left;  // \u5de6\u5b50\u8282\u70b9\u7d22\u5f15\n    int right; // \u53f3\u5b50\u8282\u70b9\u7d22\u5f15\n}\n</code></pre> <p>\u65b0\u8282\u70b9\u7684\u521b\u5efa\u5c31\u7c7b\u4f3c\u8fd9\u6837\uff0c\u6dfb\u52a0\u5230\u6570\u7ec4\u672b\u5c3e\uff1a</p> <pre><code>// \u66f4\u65b0\u7236\u8282\u70b9\u4e2d\u7684\u5de6\u5b50\u8282\u70b9\u7d22\u5f15\nnode.left = ++size;\n// \u521b\u5efa\u5de6\u5b50\u8282\u70b9\ntree[node.left] = new Node();\n</code></pre>"},{"location":"ch05_tree/segment_tree/#324","title":"3.2.4 \u6784\u5efa\u8fc7\u7a0b","text":"<p>\u52a8\u6001\u4f30\u70b9\u7ebf\u6bb5\u6811\u7684\u6784\u5efa\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u4f30\u8ba1\u533a\u95f4\u8282\u70b9\u8303\u56f4</li> <li>\u6839\u636e\u4f30\u70b9\u503c\u521d\u59cb\u5316\u6570\u7ec4\u957f\u5ea6</li> <li>\u521d\u59cb\u5316\u6839\u8282\u70b9</li> <li>\u8bbf\u95ee\u65f6\u52a8\u6001\u521b\u5efa\u5176\u4ed6\u8282\u70b9</li> </ol> <p>\u6bd4\u5982\u6784\u5efa\u201c\u533a\u95f4\u548c\u201d\u7ebf\u6bb5\u6811\u7684\u8fc7\u7a0b\uff0c\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <p>(1) \u533a\u95f4\u4f30\u70b9 + \u521d\u59cb\u5316</p> <pre><code>public SegmentTree(int low, int high) {\n    // \u7406\u8bba\u4e0a\u7684\u533a\u95f4\u8303\u56f4\n    this.low = low;\n    this.high = high;\n\n    // \u4f30\u70b9\u533a\u95f4\u8303\u56f4 6 * m * logn\n    int n = (int) (6 * 10000 * Math.log(high));\n    // \u6309\u7167\u4f30\u70b9\u521b\u5efa\u6570\u7ec4\n    tree = new Node[n];\n\n    // \u521d\u59cb\u5316\u6839\u8282\u70b9\n    tree[1] = new Node();\n}\n</code></pre> <p>(2) \u8bbf\u95ee\u8282\u70b9\u65f6\u52a8\u6001\u5efa\u70b9</p> <pre><code>public int query(Node node, int start, int end, int l, int r) {\n    ...\n\n    // \u8bbf\u95ee\u8282\u70b9\u524d\uff0c\u5148\u5411\u4e0b\u63a8\u9001\u66f4\u65b0\n    pushDown(node, start, end);\n\n    ...\n}\n\npublic int update(Node node, int start, int end, int l, int r) {\n    ...\n\n    // \u8bbf\u95ee\u8282\u70b9\u524d\uff0c\u5148\u5411\u4e0b\u63a8\u9001\u66f4\u65b0\n    pushDown(node, start, end);\n\n    ...\n}\n\nprivate void pushDown(Node node, int start, int end) {\n    // \u52a8\u6001\u5f00\u70b9\uff0c\u65b0\u8282\u70b9\u603b\u662f\u6dfb\u52a0\u5230\u6570\u7ec4\u672b\u5c3e\n    if (node.left == 0) {\n        node.left = ++size;\n        tree[node.left] = new Node();\n    }\n    if (node.right == 0) {\n        node.right = ++size;\n        tree[node.right] = new Node();\n    }\n\n    ...\n}\n</code></pre>"},{"location":"ch05_tree/segment_tree/#33","title":"3.3 \u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811","text":""},{"location":"ch05_tree/segment_tree/#331","title":"3.3.1 \u57fa\u672c\u601d\u8def","text":"<ul> <li>\u7236\u5b50\u8282\u70b9\u95f4\u91c7\u7528\u6307\u9488\u8fdb\u884c\u94fe\u63a5</li> <li>\u7ef4\u62a4\u6709\u4e00\u4e2a\u6839\u8282\u70b9</li> <li>\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u6709\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u6307\u9488 <code>left</code> \u548c <code>right</code></li> <li>\u52a8\u6001\u5f00\u70b9\u65f6\uff0c\u76f4\u63a5\u521b\u5efa\u65b0\u8282\u70b9\uff0c\u6bd4\u5982 <code>node.left = new Node()</code></li> </ul>"},{"location":"ch05_tree/segment_tree/#332","title":"3.3.2 \u52a8\u6001\u5efa\u70b9","text":"<p>\u57fa\u4e8e\u6307\u9488\u7684\u52a8\u6001\u5efa\u70b9\u518d\u7b80\u5355\u4e0d\u8fc7\u4e86\uff0c\u5c31\u662f\u5e73\u5e38\u7684\u6811\u7ed3\u6784\uff1a</p> <pre><code>class Node {\n    int val;     // \u533a\u95f4\u503c\n    Node left;   // \u5de6\u5b50\u8282\u70b9\n    Node right;  // \u53f3\u5b50\u8282\u70b9\n}\n</code></pre> <p>\u5728\u8bbf\u95ee\u5230\u8282\u70b9\u524d\uff0c\u52a8\u6001\u521b\u5efa\u8282\u70b9\uff1a</p> <pre><code>// \u521b\u5efa\u5de6\u5b50\u8282\u70b9\nnode.left = new Node();\n</code></pre>"},{"location":"ch05_tree/segment_tree/#333","title":"3.3.3 \u6784\u5efa\u8fc7\u7a0b","text":"<p>\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7684\u6784\u5efa\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u521d\u59cb\u5316\u6839\u8282\u70b9</li> <li>\u8bbf\u95ee\u65f6\u52a8\u6001\u521b\u5efa\u5176\u4ed6\u8282\u70b9</li> </ol> <p>\u6bd4\u5982\u6784\u5efa\u201c\u533a\u95f4\u548c\u201d\u7ebf\u6bb5\u6811\u7684\u8fc7\u7a0b\uff0c\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <p>(1) \u521d\u59cb\u5316\u6839\u8282\u70b9 + \u521d\u59cb\u5316\u533a\u95f4</p> <pre><code>public SegmentTree(int low, int high) {\n    this.root = new Node();\n    this.low = low;\n    this.high = high;\n}\n</code></pre> <p>(2) \u8bbf\u95ee\u65f6\u52a8\u6001\u521b\u5efa\u5176\u4ed6\u8282\u70b9</p> <pre><code>public int query(Node node, int start, int end, int l, int r) {\n    ...\n\n    // \u52a8\u6001\u5411\u4e0b\u66f4\u65b0\n    pushDown(node, start, end);\n\n    ...\n}\n\npublic int update(Node node, int start, int end, int l, int r) {\n    ...\n\n    // \u52a8\u6001\u5411\u4e0b\u66f4\u65b0\n    pushDown(node, start, end);\n\n    ...\n}\n\nprivate void pushDown(Node node, int start, int end) {\n    // \u52a8\u6001\u5f00\u70b9\n    if (node.left == null) {\n        node.left = new Node();\n    }\n    if (node.right == null) {\n        node.right = new Node();\n    }\n\n    ...\n}\n</code></pre>"},{"location":"ch05_tree/segment_tree/#34","title":"3.4 \u5c0f\u7ed3","text":"<p>\u9759\u6001\u7ebf\u6bb5\u6811\u7684\u7279\u70b9\uff1a</p> <ul> <li>\u4e00\u5f00\u59cb\u5c31\u8981\u7533\u8bf7\u5168\u90e8\u7a7a\u95f4\uff0c\u4ee5\u53ca\u6784\u5efa\u597d\u7ebf\u6bb5\u6811\u7ed3\u6784</li> <li>\u5360\u7528\u7a7a\u95f4\u6bd4\u8f83\u5927\uff0c\u521d\u59cb\u5316\u4f1a\u6bd4\u8f83\u6162</li> <li>\u6709\u4e9b\u8282\u70b9\u672a\u5fc5\u4f1a\u8bbf\u95ee\u5230\uff0c\u7a7a\u95f4\u5229\u7528\u7387\u4f4e</li> </ul> <p>\u6240\u4ee5\u53c8\u5f15\u7533\u51fa\u4e86\u52a8\u6001\u7ebf\u6bb5\u6811\uff1a</p> <ul> <li>\u7528\u5230\u8fd9\u4e2a\u8282\u70b9\u65f6\uff0c\u518d\u7533\u8bf7\u8282\u70b9\u7a7a\u95f4\u4ee5\u53ca\u521d\u59cb\u5316</li> </ul> <p>\u52a8\u6001\u7ebf\u6bb5\u6811\u7684\u5b9e\u73b0\u65b9\u5f0f\u6709 2 \u79cd\uff1a</p> <ul> <li>\u52a8\u6001\u4f30\u70b9\uff1a\u57fa\u4e8e\u6570\u7ec4</li> <li>\u52a8\u6001\u5f00\u70b9\uff1a\u57fa\u4e8e\u6307\u9488</li> </ul> <p>\u89c6\u4e0d\u540c\u7684\u60c5\u51b5\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684\u7ebf\u6bb5\u6811\u3002</p>"},{"location":"ch05_tree/segment_tree/#_5","title":"\u56db\u3001\u7ebf\u6bb5\u6811\u7684\u4f18\u5316","text":""},{"location":"ch05_tree/segment_tree/#41","title":"4.1 \u61d2\u6807\u8bb0\u66f4\u65b0","text":""},{"location":"ch05_tree/segment_tree/#411","title":"4.1.1 \u61d2\u66f4\u65b0\u5f15\u5165","text":"<p>\u7ebf\u6bb5\u6811\u672c\u8d28\u662f\u4e00\u68f5\u7f13\u5b58\u6811\uff0c\u5728\u6570\u636e\u6ca1\u6709\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\uff0c\u67e5\u8be2\u6027\u80fd\u786e\u5b9e\u9ad8\u3002</p> <p>\u4f46\u662f\u5982\u679c\u9891\u7e41\u5bf9\u533a\u95f4\u6570\u636e\u8fdb\u884c\u4fee\u6539\uff0c\u5c31\u53ef\u80fd\u4f1a\u5bf9\u6027\u80fd\u9020\u6210\u5f71\u54cd\u3002</p> <p>\u6bd4\u5982\u8bf4\uff0c\u8981\u628a\u533a\u95f4 <code>[1, 5]</code> \u5185\u7684\u503c\u90fd\u66f4\u65b0\u4e3a 1\uff0c\u4e14\u6b64\u65f6\u5728\u7ebf\u6bb5\u6811\u4e2d\u627e\u5230\u4e86 <code>[1, 3]</code> \u548c <code>[4, 5]</code> \u8fd9 2 \u4e2a\u533a\u95f4\u3002</p> <p>\u6309\u6b63\u5e38\u903b\u8f91\uff0c\u9700\u8981\u628a\u4ee5 <code>[1, 3]</code> \u548c <code>[4, 5]</code> \u4e3a\u6839\u8282\u70b9\u7684 2 \u68f5\u5b50\u6811\u7684\u6240\u6709\u8282\u70b9\u503c\u90fd\u66f4\u65b0\u4e3a 1\u3002</p> <p>\u4f46\u662f\u5b50\u6811\u91cc\u9762\u5305\u62ec\u4e86\u5f88\u591a\u8282\u70b9\uff0c\u6bd4\u5982 <code>[1, 1]</code>\u3001<code>[2, 2]</code>\u3001<code>[1, 2]</code> ... <code>[5, 5]</code> \u7b49\u7b49\u3002</p> <ul> <li>\u8fd9\u4e9b\u8282\u70b9\u4e0d\u4e00\u5b9a\u90fd\u4f1a\u88ab\u8bbf\u95ee\u5230\uff0c\u4e5f\u8bb8\u6c38\u8fdc\u6ca1\u4eba\u8bbf\u95ee\uff0c\u767d\u66f4\u65b0\u4e86</li> <li>\u6bcf\u6b21\u66f4\u65b0\u533a\u95f4\u90fd\u628a\u6240\u6709\u76f8\u5173\u5b50\u8282\u70b9\u90fd\u66f4\u65b0\u4e00\u904d\u7684\u8bdd\uff0c\u52bf\u5fc5\u4f1a\u5f71\u54cd\u6027\u80fd</li> </ul> <p>\u4e3a\u6b64\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u61d2\u66f4\u65b0\u7684\u65b9\u5f0f\uff1a</p> <ul> <li>\u66f4\u65b0\u533a\u95f4\u65f6\uff0c\u5148\u6807\u8bb0\u6839\u8282\u70b9\u88ab\u66f4\u65b0\u4e86\uff0c\u4f46\u662f\u6682\u65f6\u4e0d\u8981\u540c\u6b65\u5230\u5b50\u8282\u70b9\u91cc\u9762</li> <li>\u4e0b\u6b21\u8bbf\u95ee\u5b50\u8282\u70b9\u524d\uff0c\u5148\u4ece\u7236\u8282\u70b9\u4e0a\u628a\u4e0a\u6b21\u7684\u6570\u636e\u540c\u6b65\u5230\u5b50\u8282\u70b9\u91cc\u9762</li> </ul> <p>\u4f7f\u7528\u61d2\u66f4\u65b0\u540e\uff0c\u53ea\u9700\u8981\u66f4\u65b0 <code>[1, 3]</code> \u548c <code>[4, 5]</code> \u8fd9 2 \u4e2a\u8282\u70b9\u5c31\u591f\u4e86\uff0c\u901f\u5ea6\u5c31\u5f88\u5feb\u3002</p> <p>\u7b49\u5230\u4e0b\u6b21\u67e5\u8be2\u533a\u95f4 <code>[1, 2]</code> \u65f6\uff0c\u624d\u4f1a\u4ece <code>[1, 3]</code> \u533a\u95f4\u4e0a\u540c\u6b65\u4e4b\u524d\u7684\u66f4\u65b0\u4e0b\u6765\u3002</p>"},{"location":"ch05_tree/segment_tree/#412","title":"4.1.2 \u61d2\u6807\u8bb0\u5b9e\u73b0","text":"<p>\u5728\u8282\u70b9\u4e2d\u5f15\u5165\u61d2\u6807\u8bb0\uff0c\u540c\u65f6\u7528\u4e8e\u4fdd\u5b58\u66f4\u65b0\u503c\uff1a</p> <pre><code>class Node {\n    int val;     // \u533a\u95f4\u503c\n    Node left;   // \u5de6\u5b50\u8282\u70b9\n    Node right;  // \u53f3\u5b50\u8282\u70b9\n    int add;     // \u61d2\u6807\u8bb0\uff0c0 \u65f6\u8868\u793a\u65e0\u66f4\u65b0\uff0c\u5176\u4ed6\u8868\u793a\u6709\u66f4\u65b0\n}\n</code></pre> <p>\u7136\u540e\u5728\u66f4\u65b0\u533a\u95f4\u65f6\uff0c\u53ea\u9700\u8981\u66f4\u65b0\u7236\u8282\u70b9\u5c31\u884c\u4e86\u3002</p> <p>\u7b49\u4e0b\u6b21\u8bbf\u95ee\u5b50\u8282\u70b9\u524d\uff0c\u518d\u4ece\u7236\u8282\u70b9\u540c\u6b65\u6570\u636e\u5230\u5b50\u8282\u70b9\u4e2d\uff1a</p> <pre><code>public void update(Node node, int start, int end, int l, int r, int val) {\n    if (l &lt;= start &amp;&amp; end &lt;= r) {\n        // \u66f4\u65b0\u533a\u95f4\u8282\u70b9\u503c\n        node.val = val;\n        // \u66f4\u65b0\u61d2\u6807\u8bb0\n        node.add = val;\n        return;\n    }\n\n    // \u52a8\u6001\u5411\u4e0b\u66f4\u65b0\n    pushDown(node, start, end);\n\n    ...\n}\n\nprivate void pushDown(Node node, int start, int end) {\n    ...\n\n    // \u7236\u8282\u70b9\u6ca1\u6709\u66f4\u65b0\n    if (node.add == 0) {\n        return;\n    }\n\n    // \u540c\u6b65\u5230\u5b50\u8282\u70b9\n    node.left.val = node.add;\n    node.left.add = node.add;\n    node.right.val = node.add;\n    node.right.add = node.add;\n\n    // \u91cd\u7f6e\u7236\u8282\u70b9\u7684\u61d2\u6807\u8bb0\n    node.add = 0;\n}\n</code></pre> <p>\u539f\u7406\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5c3d\u91cf\u4e0d\u5f80\u4e0b\u9762\u66f4\u65b0\uff0c\u51cf\u5c11\u66f4\u65b0\u65f6\u95f4\u3002</p>"},{"location":"ch05_tree/segment_tree/#_6","title":"\u4e94\u3001\u7ebf\u6bb5\u6811\u6a21\u677f","text":"<p>\u7ebf\u6bb5\u6811\u6709 2 \u4e2a\u4e3b\u8981\u64cd\u4f5c\uff1a</p> <ul> <li>\u533a\u95f4\u67e5\u8be2</li> <li>\u533a\u95f4\u66f4\u65b0</li> </ul> <p>\u56e0\u6b64\u63a5\u53e3\u53ea\u5b9a\u4e49\u4e86\u8fd9 2 \u4e2a\u3002</p>"},{"location":"ch05_tree/segment_tree/#51","title":"5.1 \u63a5\u53e3\u5b9a\u4e49","text":"<pre><code>public interface SegmentTree {\n\n    /**\n     * \u67e5\u8be2\u6307\u5b9a\u533a\u95f4\u7684\u503c\n     *\n     * @param l \u76ee\u6807\u533a\u95f4[l, r]\u7684\u5de6\u8fb9\u754c\n     * @param r \u76ee\u6807\u533a\u95f4[l, r]\u7684\u53f3\u8fb9\u754c\n     * @return \u533a\u95f4\u503c\n     */\n    int query(int l, int r);\n\n    /**\n     * \u66f4\u65b0\u6307\u5b9a\u533a\u95f4\u7684\u503c\n     *\n     * @param l   \u76ee\u6807\u533a\u95f4[l, r]\u7684\u5de6\u8fb9\u754c\n     * @param r   \u76ee\u6807\u533a\u95f4[l, r]\u7684\u53f3\u8fb9\u754c\n     * @param val \u66f4\u65b0\u7684\u503c\n     */\n    void update(int l, int r, int val);\n\n}\n</code></pre>"},{"location":"ch05_tree/segment_tree/#51_1","title":"5.1 \u52a8\u6001\u4f30\u70b9\uff08\u6570\u7ec4\uff09","text":"<pre><code>public abstract class ArraySegmentTree implements SegmentTree {\n\n    public static class Node {\n        /**\n         * \u8282\u70b9\u503c\n         */\n        public int val;\n        /**\n         * \u61d2\u60f0\u6807\u8bb0\n         */\n        public int add;\n        /**\n         * \u5de6\u53f3\u8282\u70b9\u6570\u7ec4\u4e0b\u6807\n         */\n        public int left, right;\n    }\n\n    /**\n     * \u6811\u8282\u70b9\u6570\u7ec4\n     */\n    protected final Node[] tree;\n    /**\n     * \u533a\u95f4\u6700\u5c0f\u503c\n     */\n    protected final int low;\n    /**\n     * \u533a\u95f4\u6700\u5927\u503c\n     */\n    protected final int high;\n    /**\n     * \u5f53\u524d\u8282\u70b9\u6570\u91cf\n     */\n    protected int size;\n\n    public ArraySegmentTree(int low, int high) {\n        this.low = low;\n        this.high = high;\n\n        // \u533a\u95f4\u4f30\u70b9 4n\n        int n = 4 * high;\n        tree = new Node[n];\n\n        // \u521d\u59cb\u5316\u6839\u8282\u70b9\n        tree[1] = new Node();\n        size = 1;\n    }\n\n    @Override\n    public int query(int l, int r) {\n        return query(tree[1], low, high, l, r);\n    }\n\n    /**\n     * \u67e5\u8be2\u6307\u5b9a\u533a\u95f4\u7684\u503c\n     *\n     * @param node  \u5f53\u524d\u8282\u70b9\n     * @param start \u5f53\u524d\u533a\u95f4[start, end]\u7684\u5de6\u8fb9\u754c\n     * @param end   \u5f53\u524d\u533a\u95f4[start, end]\u7684\u53f3\u8fb9\u754c\n     * @param l     \u76ee\u6807\u533a\u95f4[l, r]\u7684\u5de6\u8fb9\u754c\n     * @param r     \u76ee\u6807\u533a\u95f4[l, r]\u7684\u53f3\u8fb9\u754c\n     * @return \u533a\u95f4\u503c\n     */\n    protected int query(Node node, int start, int end, int l, int r) {\n        if (l &lt;= start &amp;&amp; end &lt;= r) {\n            return node.val;\n        }\n\n        // \u8bbf\u95ee\u8282\u70b9\u524d\uff0c\u5148\u5411\u4e0b\u63a8\u9001\u66f4\u65b0\n        pushDown(node, start, end);\n\n        // \u5206\u522b\u53d6\u5de6\u53f3\u5b50\u533a\u95f4\u7684\u503c\n        Integer lResult = null, rResult = null;\n        int mid = middle(start, end);\n        if (l &lt;= mid) {\n            lResult = query(tree[node.left], start, mid, l, r);\n        }\n        if (r &gt; mid) {\n            rResult = query(tree[node.right], mid + 1, end, l, r);\n        }\n\n        // \u5408\u5e76\u5b50\u533a\u95f4\u7684\u67e5\u8be2\u7ed3\u679c\n        return mergeQuery(node, start, end, lResult, rResult);\n    }\n\n    @Override\n    public void update(int l, int r, int val) {\n        update(tree[1], low, high, l, r, val);\n    }\n\n    /**\n     * \u66f4\u65b0\u6307\u5b9a\u533a\u95f4\u7684\u503c\n     *\n     * @param node  \u5f53\u524d\u8282\u70b9\n     * @param start \u5f53\u524d\u533a\u95f4[start, end]\u7684\u5de6\u8fb9\u754c\n     * @param end   \u5f53\u524d\u533a\u95f4[start, end]\u7684\u53f3\u8fb9\u754c\n     * @param l     \u76ee\u6807\u533a\u95f4[l, r]\u7684\u5de6\u8fb9\u754c\n     * @param r     \u76ee\u6807\u533a\u95f4[l, r]\u7684\u53f3\u8fb9\u754c\n     * @param val   \u66f4\u65b0\u7684\u503c\n     */\n    protected void update(Node node, int start, int end, int l, int r, int val) {\n        if (l &lt;= start &amp;&amp; end &lt;= r) {\n            // \u66f4\u65b0\u7b26\u5408\u533a\u95f4\u8981\u6c42\u7684\u8282\u70b9\u503c\n            writeDown(node, start, end, val);\n            return;\n        }\n\n        // \u8bbf\u95ee\u8282\u70b9\u524d\uff0c\u5148\u5411\u4e0b\u63a8\u9001\u66f4\u65b0\n        pushDown(node, start, end);\n\n        // \u9012\u5f52\u66f4\u65b0\u5de6\u53f3\u5b50\u533a\u95f4\n        int mid = middle(start, end);\n        if (l &lt;= mid) {\n            update(tree[node.left], start, mid, l, r, val);\n        }\n        if (r &gt; mid) {\n            update(tree[node.right], mid + 1, end, l, r, val);\n        }\n\n        // \u5b50\u8282\u70b9\u66f4\u65b0\u540e\uff0c\u5411\u4e0a\u63a8\u9001\u66f4\u65b0\n        pushUp(node, start, end);\n    }\n\n    /**\n     * \u5b50\u8282\u70b9\u7684\u503c\u4e0a\u63a8\u5230\u7236\u8282\u70b9\n     *\n     * @param node  \u7236\u8282\u70b9\n     * @param start \u5f53\u524d\u533a\u95f4[start, end]\u7684\u5de6\u8fb9\u754c\n     * @param end   \u5f53\u524d\u533a\u95f4[start, end]\u7684\u53f3\u8fb9\u754c\n     */\n    protected void pushUp(Node node, int start, int end) {\n        writeUp(node, start, end);\n    }\n\n    /**\n     * \u7236\u8282\u70b9\u7684\u503c\u4e0b\u63a8\u5230\u5b50\u8282\u70b9\n     *\n     * @param node  \u5f53\u524d\u8282\u70b9\n     * @param start \u5f53\u524d\u533a\u95f4[start, end]\u7684\u5de6\u8fb9\u754c\n     * @param end   \u5f53\u524d\u533a\u95f4[start, end]\u7684\u53f3\u8fb9\u754c\n     */\n    protected void pushDown(Node node, int start, int end) {\n        // \u52a8\u6001\u5f00\u70b9\uff0c\u65b0\u8282\u70b9\u603b\u662f\u6dfb\u52a0\u5230\u6570\u7ec4\u672b\u5c3e\n        if (node.left == 0) {\n            node.left = ++size;\n            tree[node.left] = new Node();\n        }\n        if (node.right == 0) {\n            node.right = ++size;\n            tree[node.right] = new Node();\n        }\n\n        // \u6ca1\u6709\u61d2\u6807\u8bb0\uff0c\u65e0\u9700\u518d\u5f80\u4e0b\u63a8\n        if (node.add == 0) {\n            return;\n        }\n\n        // \u628a\u61d2\u6807\u8bb0\u4e0b\u63a8\u7ed9\u5b50\u8282\u70b9\n        int mid = middle(start, end);\n        writeDown(tree[node.left], start, mid, node.add);\n        writeDown(tree[node.right], mid + 1, end, node.add);\n\n        // \u61d2\u6807\u8bb0\u5df2\u5904\u7406\n        node.add = 0;\n    }\n\n    /**\n     * \u5408\u5e76\u6307\u5b9a\u533a\u95f4\u7684\u67e5\u8be2\u7ed3\u679c\n     *\n     * @param node  \u5f53\u524d\u8282\u70b9\n     * @param start \u5f53\u524d\u533a\u95f4[start, end]\u7684\u5de6\u8fb9\u754c\n     * @param end   \u5f53\u524d\u533a\u95f4[start, end]\u7684\u53f3\u8fb9\u754c\n     * @param lVal  \u5de6\u533a\u95f4\u7684\u67e5\u8be2\u7ed3\u679c\n     * @param rVal  \u53f3\u533a\u95f4\u7684\u67e5\u8be2\u7ed3\u679c\n     * @return \u533a\u95f4\u503c\n     */\n    protected abstract int mergeQuery(Node node, int start, int end, Integer lVal, Integer rVal);\n\n    /**\n     * \u5411\u4e0a\u66f4\u65b0\u8282\u70b9\u7684\u503c\n     *\n     * @param node  \u5f53\u524d\u8282\u70b9\n     * @param start \u5f53\u524d\u533a\u95f4[start, end]\u7684\u5de6\u8fb9\u754c\n     * @param end   \u5f53\u524d\u533a\u95f4[start, end]\u7684\u53f3\u8fb9\u754c\n     */\n    protected abstract void writeUp(Node node, int start, int end);\n\n    /**\n     * \u5411\u4e0b\u66f4\u65b0\u8282\u70b9\u7684\u503c\n     *\n     * @param node  \u5f53\u524d\u8282\u70b9\n     * @param start \u5f53\u524d\u533a\u95f4[start, end]\u7684\u5de6\u8fb9\u754c\n     * @param end   \u5f53\u524d\u533a\u95f4[start, end]\u7684\u53f3\u8fb9\u754c\n     * @param val   \u66f4\u65b0\u7684\u503c\n     */\n    protected abstract void writeDown(Node node, int start, int end, int val);\n\n    /**\n     * \u5212\u5206\u5de6\u53f3\u533a\u95f4\u7684\u4e2d\u70b9\n     *\n     * @param start \u5de6\u8fb9\u754c[start, end]\n     * @param end   \u53f3\u8fb9\u754c[start, end]\n     * @return \u4e2d\u70b9\n     */\n    protected int middle(int start, int end) {\n        return start + (end - start) / 2;\n    }\n\n}\n</code></pre>"},{"location":"ch05_tree/segment_tree/#53","title":"5.3 \u52a8\u6001\u5f00\u70b9\uff08\u6307\u9488\uff09","text":"<pre><code>public abstract class LinkSegmentTree implements SegmentTree {\n\n    public static class Node {\n        /**\n         * \u8282\u70b9\u503c\n         */\n        public int val;\n        /**\n         * \u61d2\u60f0\u6807\u8bb0\n         */\n        public int add;\n        /**\n         * \u5de6\u53f3\u8282\u70b9\n         */\n        public Node left, right;\n    }\n\n    /**\n     * \u6839\u8282\u70b9\n     */\n    protected final Node root;\n    /**\n     * \u533a\u95f4\u6700\u5c0f\u503c\n     */\n    protected final int low;\n    /**\n     * \u533a\u95f4\u6700\u5927\u503c\n     */\n    protected final int high;\n\n    public LinkSegmentTree(int low, int high) {\n        this.low = low;\n        this.high = high;\n        this.root = new Node();\n    }\n\n    /**\n     * \u67e5\u8be2\u6307\u5b9a\u533a\u95f4\u7684\u503c\n     *\n     * @param l \u76ee\u6807\u533a\u95f4[l, r]\u7684\u5de6\u8fb9\u754c\n     * @param r \u76ee\u6807\u533a\u95f4[l, r]\u7684\u53f3\u8fb9\u754c\n     * @return \u533a\u95f4\u503c\n     */\n    @Override\n    public int query(int l, int r) {\n        return query(root, low, high, l, r);\n    }\n\n    /**\n     * \u67e5\u8be2\u6307\u5b9a\u533a\u95f4\u7684\u503c\n     *\n     * @param node  \u5f53\u524d\u8282\u70b9\n     * @param start \u5f53\u524d\u533a\u95f4[start, end]\u7684\u5de6\u8fb9\u754c\n     * @param end   \u5f53\u524d\u533a\u95f4[start, end]\u7684\u53f3\u8fb9\u754c\n     * @param l     \u76ee\u6807\u533a\u95f4[l, r]\u7684\u5de6\u8fb9\u754c\n     * @param r     \u76ee\u6807\u533a\u95f4[l, r]\u7684\u53f3\u8fb9\u754c\n     * @return \u533a\u95f4\u503c\n     */\n    protected int query(Node node, int start, int end, int l, int r) {\n        if (l &lt;= start &amp;&amp; end &lt;= r) {\n            return node.val;\n        }\n\n        // \u8bbf\u95ee\u8282\u70b9\u524d\uff0c\u5148\u5411\u4e0b\u63a8\u9001\u66f4\u65b0\n        pushDown(node, start, end);\n\n        // \u5206\u522b\u53d6\u5de6\u53f3\u5b50\u533a\u95f4\u7684\u503c\n        Integer lResult = null, rResult = null;\n        int mid = middle(start, end);\n        if (l &lt;= mid) {\n            lResult = query(node.left, start, mid, l, r);\n        }\n        if (r &gt; mid) {\n            rResult = query(node.right, mid + 1, end, l, r);\n        }\n\n        // \u5408\u5e76\u5b50\u533a\u95f4\u7684\u67e5\u8be2\u7ed3\u679c\n        return mergeQuery(node, start, end, lResult, rResult);\n    }\n\n    /**\n     * \u66f4\u65b0\u6307\u5b9a\u533a\u95f4\u7684\u503c\n     *\n     * @param l   \u76ee\u6807\u533a\u95f4[l, r]\u7684\u5de6\u8fb9\u754c\n     * @param r   \u76ee\u6807\u533a\u95f4[l, r]\u7684\u53f3\u8fb9\u754c\n     * @param val \u66f4\u65b0\u7684\u503c\n     */\n    @Override\n    public void update(int l, int r, int val) {\n        update(root, low, high, l, r, val);\n    }\n\n    /**\n     * \u66f4\u65b0\u6307\u5b9a\u533a\u95f4\u7684\u503c\n     *\n     * @param node  \u5f53\u524d\u8282\u70b9\n     * @param start \u5f53\u524d\u533a\u95f4[start, end]\u7684\u5de6\u8fb9\u754c\n     * @param end   \u5f53\u524d\u533a\u95f4[start, end]\u7684\u53f3\u8fb9\u754c\n     * @param l     \u76ee\u6807\u533a\u95f4[l, r]\u7684\u5de6\u8fb9\u754c\n     * @param r     \u76ee\u6807\u533a\u95f4[l, r]\u7684\u53f3\u8fb9\u754c\n     * @param val   \u66f4\u65b0\u7684\u503c\n     */\n    protected void update(Node node, int start, int end, int l, int r, int val) {\n        if (l &lt;= start &amp;&amp; end &lt;= r) {\n            // \u66f4\u65b0\u7b26\u5408\u533a\u95f4\u8981\u6c42\u7684\u8282\u70b9\u503c\n            writeDown(node, start, end, val);\n            return;\n        }\n\n        // \u8bbf\u95ee\u8282\u70b9\u524d\uff0c\u5148\u5411\u4e0b\u63a8\u9001\u66f4\u65b0\n        pushDown(node, start, end);\n\n        // \u9012\u5f52\u66f4\u65b0\u5de6\u53f3\u5b50\u533a\u95f4\n        int mid = middle(start, end);\n        if (l &lt;= mid) {\n            update(node.left, start, mid, l, r, val);\n        }\n        if (r &gt; mid) {\n            update(node.right, mid + 1, end, l, r, val);\n        }\n\n        // \u5b50\u8282\u70b9\u66f4\u65b0\u540e\uff0c\u5411\u4e0a\u63a8\u9001\u66f4\u65b0\n        pushUp(node, start, end);\n    }\n\n    /**\n     * \u5b50\u8282\u70b9\u7684\u503c\u4e0a\u63a8\u5230\u7236\u8282\u70b9\n     *\n     * @param node  \u7236\u8282\u70b9\n     * @param start \u5f53\u524d\u533a\u95f4[start, end]\u7684\u5de6\u8fb9\u754c\n     * @param end   \u5f53\u524d\u533a\u95f4[start, end]\u7684\u53f3\u8fb9\u754c\n     */\n    protected void pushUp(Node node, int start, int end) {\n        writeUp(node, start, end);\n    }\n\n    /**\n     * \u7236\u8282\u70b9\u7684\u503c\u4e0b\u63a8\u5230\u5b50\u8282\u70b9\n     *\n     * @param node  \u5f53\u524d\u8282\u70b9\n     * @param start \u5f53\u524d\u533a\u95f4[start, end]\u7684\u5de6\u8fb9\u754c\n     * @param end   \u5f53\u524d\u533a\u95f4[start, end]\u7684\u53f3\u8fb9\u754c\n     */\n    protected void pushDown(Node node, int start, int end) {\n        // \u52a8\u6001\u5f00\u70b9\uff0c\u6307\u5411\u52a8\u6001\u521b\u5efa\u7684\u5bf9\u8c61\n        if (node.left == null) {\n            node.left = new Node();\n        }\n        if (node.right == null) {\n            node.right = new Node();\n        }\n\n        // \u6ca1\u6709\u61d2\u6807\u8bb0\uff0c\u65e0\u9700\u518d\u5f80\u4e0b\u63a8\n        if (node.add == 0) {\n            return;\n        }\n\n        // \u628a\u61d2\u6807\u8bb0\u4e0b\u63a8\u7ed9\u5b50\u8282\u70b9\n        int mid = middle(start, end);\n        writeDown(node.left, start, mid, node.add);\n        writeDown(node.right, mid + 1, end, node.add);\n\n        // \u61d2\u6807\u8bb0\u5df2\u5904\u7406\n        node.add = 0;\n    }\n\n    /**\n     * \u5408\u5e76\u6307\u5b9a\u533a\u95f4\u7684\u67e5\u8be2\u7ed3\u679c\n     *\n     * @param node  \u5f53\u524d\u8282\u70b9\n     * @param start \u5f53\u524d\u533a\u95f4[start, end]\u7684\u5de6\u8fb9\u754c\n     * @param end   \u5f53\u524d\u533a\u95f4[start, end]\u7684\u53f3\u8fb9\u754c\n     * @param lVal  \u5de6\u533a\u95f4\u7684\u67e5\u8be2\u7ed3\u679c\n     * @param rVal  \u53f3\u533a\u95f4\u7684\u67e5\u8be2\u7ed3\u679c\n     * @return \u533a\u95f4\u503c\n     */\n    protected abstract int mergeQuery(Node node, int start, int end, Integer lVal, Integer rVal);\n\n    /**\n     * \u5411\u4e0a\u66f4\u65b0\u8282\u70b9\u7684\u503c\n     *\n     * @param node  \u5f53\u524d\u8282\u70b9\n     * @param start \u5f53\u524d\u533a\u95f4[start, end]\u7684\u5de6\u8fb9\u754c\n     * @param end   \u5f53\u524d\u533a\u95f4[start, end]\u7684\u53f3\u8fb9\u754c\n     */\n    protected abstract void writeUp(Node node, int start, int end);\n\n    /**\n     * \u5411\u4e0b\u66f4\u65b0\u8282\u70b9\u7684\u503c\n     *\n     * @param node  \u5f53\u524d\u8282\u70b9\n     * @param start \u5f53\u524d\u533a\u95f4[start, end]\u7684\u5de6\u8fb9\u754c\n     * @param end   \u5f53\u524d\u533a\u95f4[start, end]\u7684\u53f3\u8fb9\u754c\n     * @param val   \u66f4\u65b0\u7684\u503c\n     */\n    protected abstract void writeDown(Node node, int start, int end, int val);\n\n    /**\n     * \u5212\u5206\u5de6\u53f3\u533a\u95f4\u7684\u4e2d\u70b9\n     *\n     * @param start \u5de6\u8fb9\u754c[start, end]\n     * @param end   \u53f3\u8fb9\u754c[start, end]\n     * @return \u4e2d\u70b9\n     */\n    protected int middle(int start, int end) {\n        return start + (end - start) / 2;\n    }\n\n}\n</code></pre>"},{"location":"ch05_tree/segment_tree/#_7","title":"\u516d\u3001\u5b9e\u9645\u6848\u4f8b","text":""},{"location":"ch05_tree/segment_tree/#61-lc-307","title":"6.1 LC 307. \u533a\u57df\u548c\u68c0\u7d22","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4 nums \uff0c\u8bf7\u4f60\u5b8c\u6210\u4e24\u7c7b\u67e5\u8be2\u3002 </p> <p>\u5176\u4e2d\u4e00\u7c7b\u67e5\u8be2\u8981\u6c42 \u66f4\u65b0 \u6570\u7ec4\u00a0nums\u00a0\u4e0b\u6807\u5bf9\u5e94\u7684\u503c</p> <p>\u53e6\u4e00\u7c7b\u67e5\u8be2\u8981\u6c42\u8fd4\u56de\u6570\u7ec4\u00a0nums\u00a0\u4e2d\u7d22\u5f15\u00a0left\u00a0\u548c\u7d22\u5f15\u00a0right\u00a0\u4e4b\u95f4\uff08\u00a0\u5305\u542b\u00a0\uff09\u7684nums\u5143\u7d20\u7684 \u548c\u00a0\uff0c\u5176\u4e2d\u00a0left &lt;= right</p> <p>\u5b9e\u73b0 NumArray \u7c7b\uff1a</p> <p>NumArray(int[] nums) \u7528\u6574\u6570\u6570\u7ec4 nums \u521d\u59cb\u5316\u5bf9\u8c61</p> <p>void update(int index, int val) \u5c06 nums[index] \u7684\u503c \u66f4\u65b0 \u4e3a val</p> <p>int sumRange(int left, int right) \u8fd4\u56de\u6570\u7ec4\u00a0nums\u00a0\u4e2d\u7d22\u5f15\u00a0left\u00a0\u548c\u7d22\u5f15\u00a0right\u00a0\u4e4b\u95f4\uff08\u00a0\u5305\u542b\u00a0\uff09\u7684&gt; nums\u5143\u7d20\u7684 \u548c\u00a0\uff08\u5373\uff0cnums[left] + nums[left + 1], ..., nums[right]</p> <p>\u63d0\u793a\uff1a</p> <ul> <li>1 &lt;= nums.length &lt;= 3 *\u00a0104</li> <li>-100 &lt;= nums[i] &lt;= 100</li> <li>0 &lt;= index &lt; nums.length</li> <li>-100 &lt;= val &lt;= 100</li> <li>0 &lt;= left &lt;= right &lt; nums.length</li> <li>\u8c03\u7528 update \u548c sumRange \u65b9\u6cd5\u6b21\u6570\u4e0d\u5927\u4e8e\u00a03 * 104\u00a0</li> </ul> <p>\u95ee\u9898\u5206\u6790</p> <p>\u95ee\u9898\u4e2d\u6d89\u53ca\u4e86 2 \u4e2a\u64cd\u4f5c\uff1a</p> <ul> <li>\u5355\u70b9\u66f4\u65b0</li> <li>\u533a\u95f4\u6c42\u548c</li> </ul> <p>\u5355\u70b9\u66f4\u65b0\uff0c\u53ef\u4ee5\u5f53\u6210\u662f\u957f\u5ea6\u4e3a 1 \u533a\u95f4\u66f4\u65b0\uff0c\u6240\u4ee5\u8fd9 2 \u79cd\u64cd\u4f5c\u90fd\u53ef\u8ba4\u4e3a\u662f\u533a\u95f4\u64cd\u4f5c\u3002</p> <p>\u7ebf\u6bb5\u6811\u6b63\u597d\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u8fd9 2 \u4e2a\u95ee\u9898\u3002</p> <p>\u9996\u5148\u5206\u6790\u4e00\u4e0b\uff1a</p> <ul> <li>\u533a\u95f4\u8282\u70b9\u9700\u8981\u7f13\u5b58\u4ec0\u4e48\u6570\u636e\uff1f</li> </ul> <p>\u4ece\u9898\u76ee\u53ef\u77e5\uff0c\u533a\u95f4\u67e5\u8be2\u7684\u7ed3\u679c\u662f\u533a\u95f4\u548c\uff0c\u6240\u4ee5\uff1a</p> <ul> <li>\u7236\u8282\u70b9\u7f13\u5b58\u7684\u5e94\u8be5\u662f\u5b50\u8282\u70b9\u7684\u533a\u95f4\u548c</li> </ul> <p>\u786e\u5b9a\u8282\u70b9\u7f13\u5b58\u7684\u6570\u636e\u4e4b\u540e\uff0c\u5957\u7528\u6a21\u677f\u4fee\u6539\u4ee3\u7801\u5373\u53ef\u3002</p> <p>\u4ee3\u7801\u5b9e\u73b0</p> <p>\u8fd9\u53ef\u80fd\u7528\u7b80\u5355\u7ebf\u6bb5\u6811\u4f1a\u597d\u4e00\u4e9b\uff0c\u56e0\u4e3a\u533a\u95f4\u8303\u56f4\u53ea\u6709 <code>3 * 10^4</code>\uff0c\u4e0d\u662f\u5f88\u5927\uff0c\u76f4\u63a5\u6784\u5efa\u7ebf\u6bb5\u6811\u4e5f\u5f88\u5feb\u3002</p> <p>\u4e0d\u8fc7\u8fd9\u91cc\u662f\u91c7\u7528\u4e86\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u6765\u4f5c\u4e3a\u4f8b\u5b50\u6f14\u793a\u3002</p> <pre><code>/**\n * \u533a\u95f4\u548c\u7ebf\u6bb5\u6811\n *\n * \u7236\u8282\u70b9\u7f13\u5b58\u7684\u662f\u5b50\u6811\u6240\u6709\u8282\u70b9\u7684\u548c\n */\npublic class SumLinkSegmentTree extends LinkSegmentTree {\n\n    public SumLinkSegmentTree(int low, int high) {\n        super(low, high);\n    }\n\n    @Override\n    protected int mergeQuery(Node node, int start, int end, Integer lVal, Integer rVal) {\n        // \u5408\u5e76\u5b50\u6811\u8282\u70b9\u7684\u533a\u95f4\u548c\n        int sum = 0;\n        if (lVal != null) {\n            sum += lVal;\n        }\n        if (rVal != null) {\n            sum += rVal;\n        }\n        return sum;\n    }\n\n    @Override\n    protected void writeUp(Node node, int start, int end) {\n        // \u5b50\u6811\u7684\u533a\u95f4\u548c\u53d1\u751f\u53d8\u5316\u540e\uff0c\u7236\u8282\u70b9\u4e5f\u8981\u66f4\u65b0\n        node.val = node.left.val + node.right.val;\n    }\n\n    @Override\n    protected void writeDown(Node node, int start, int end, int val) {\n        // end - start + 1 \u8868\u793a\u5b50\u6811\u4e2d\u53f6\u5b50\u8282\u70b9\u7684\u6570\u91cf\n        // \u533a\u95f4\u5185\u6240\u6709\u53f6\u5b50\u8282\u70b9\u90fd\u8bbe\u4e3a val \u7684\u8bdd\n        // \u90a3\u4e48\u7236\u8282\u70b9\u5e94\u8be5\u7b49\u4e8e\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684 val \u603b\u548c\n        node.val = (end - start + 1) * val;\n        node.add = val;\n    }\n\n}\n</code></pre> <p>\u533a\u95f4\u548c\u7ebf\u6bb5\u6811\u5b9e\u73b0\u597d\u4e86\uff0c\u4e0b\u9762\u76f4\u63a5\u6309\u9898\u76ee\u8981\u6c42\u8c03\u7528\uff1a</p> <pre><code>class NumArray {\n\n    SumSegmentTree segmentTree;\n    int low = 0;\n    int high = (int) 3e4;\n\n    public NumArray(int[] nums) {\n        segmentTree = new SumSegmentTree(low, high);\n        for (int i = 0; i &lt; nums.length; i++) {\n            this.update(i, nums[i]);\n        }\n    }\n\n    public void update(int index, int val) {\n        segmentTree.update(index, index, val);\n    }\n\n    public int sumRange(int left, int right) {\n        return segmentTree.query(left, right);\n    }\n}\n</code></pre> <p>\u8fd9\u9053\u9898\u7684\u89e3\u51b3\u65b9\u6848\u8fd8\u6709\u5176\u4ed6\u65b9\u6cd5\uff0c\u7ebf\u6bb5\u6811\u7684\u6027\u80fd\u5e76\u4e0d\u662f\u6700\u4f18\u7684\u3002</p> <p>\u8fd9\u91cc\u53ea\u662f\u4e3e\u4f8b\u5b50\u8bf4\u660e\u4e00\u4e0b\u7ebf\u6bb5\u6811\u7684\u7528\u9014\u3002</p>"},{"location":"ch05_tree/segment_tree/#62-lc-699","title":"6.2 LC 699. \u6389\u843d\u7684\u65b9\u5757","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684 x \u8f74\u4e0a\uff0c\u653e\u7f6e\u7740\u4e00\u4e9b\u65b9\u5757\u3002</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4 positions \uff0c\u5176\u4e2d positions[i] = [lefti, sideLengthi] \u8868\u793a\uff1a\u7b2c i \u4e2a\u65b9\u5757\u8fb9\u957f\u4e3a sideLengthi \uff0c\u5176\u5de6\u4fa7\u8fb9\u4e0e x \u8f74\u4e0a\u5750\u6807\u70b9\u00a0lefti \u5bf9\u9f50\u3002</p> <p>\u6bcf\u4e2a\u65b9\u5757\u90fd\u4ece\u4e00\u4e2a\u6bd4\u76ee\u524d\u6240\u6709\u7684\u843d\u5730\u65b9\u5757\u66f4\u9ad8\u7684\u9ad8\u5ea6\u6389\u843d\u800c\u4e0b\u3002\u65b9\u5757\u6cbf y \u8f74\u8d1f\u65b9\u5411\u4e0b\u843d\uff0c\u76f4\u5230\u7740\u9646\u5230 \u53e6\u4e00\u4e2a\u6b63\u65b9\u5f62\u7684\u9876\u8fb9 \u6216\u8005\u662f x \u8f74\u4e0a \u3002\u4e00\u4e2a\u65b9\u5757\u4ec5\u4ec5\u662f\u64e6\u8fc7\u53e6\u4e00\u4e2a\u65b9\u5757\u7684\u5de6\u4fa7\u8fb9\u6216\u53f3\u4fa7\u8fb9\u4e0d\u7b97\u7740\u9646\u3002\u4e00\u65e6\u7740\u9646\uff0c\u5b83\u5c31\u4f1a\u56fa\u5b9a\u5728\u539f\u5730\uff0c\u65e0\u6cd5\u79fb\u52a8\u3002</p> <p>\u5728\u6bcf\u4e2a\u65b9\u5757\u6389\u843d\u540e\uff0c\u4f60\u5fc5\u987b\u8bb0\u5f55\u76ee\u524d\u6240\u6709\u5df2\u7ecf\u843d\u7a33\u7684 \u65b9\u5757\u5806\u53e0\u7684\u6700\u9ad8\u9ad8\u5ea6 \u3002</p> <p>\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 ans \uff0c\u5176\u4e2d ans[i] \u8868\u793a\u5728\u7b2c i \u5757\u65b9\u5757\u6389\u843d\u540e\u5806\u53e0\u7684\u6700\u9ad8\u9ad8\u5ea6\u3002</p> <p>\u63d0\u793a\uff1a</p> <ul> <li>1 &lt;= positions.length &lt;= 1000</li> <li>1 &lt;= lefti &lt;= 108</li> <li>1 &lt;= sideLengthi &lt;= 106</li> </ul> <p>\u95ee\u9898\u5206\u6790</p> <p>\u95ee\u9898\u4e2d\u51fa\u73b0\u7684 2 \u4e2a\u884c\u4e3a\uff1a</p> <ul> <li>\u65b9\u5757\u6389\u843d\u5728\u5750\u6807\u8f74\u4e0a\uff0c\u5360\u7528\u4e86\u4e00\u4e2a\u533a\u95f4\uff0c\u8fd9\u5b9e\u9645\u4e0a\u5c31\u662f\u533a\u95f4\u66f4\u65b0</li> <li>\u67e5\u8be2\u6240\u6709\u65b9\u5757\u5806\u53e0\u7684\u6700\u9ad8\u9ad8\u5ea6\uff0c\u5b9e\u9645\u5c31\u662f\u5728\u67e5\u627e\u533a\u95f4\u5185\u7684\u6700\u5927\u503c</li> </ul> <p>\u6240\u4ee5\u4e5f\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u5b9e\u73b0\u533a\u95f4\u66f4\u65b0\u548c\u533a\u95f4\u6c42\u6700\u5927\u503c\u3002</p> <p>\u9996\u5148\u5206\u6790\u4e00\u4e0b\uff1a</p> <ul> <li>\u533a\u95f4\u8282\u70b9\u9700\u8981\u7f13\u5b58\u4ec0\u4e48\u6570\u636e\uff1f</li> </ul> <p>\u4ece\u9898\u76ee\u53ef\u77e5\uff0c\u67e5\u8be2\u7684\u662f\u533a\u95f4\u6700\u5927\u503c\uff0c\u6240\u4ee5\uff1a</p> <ul> <li>\u7236\u8282\u70b9\u7f13\u5b58\u7684\u5e94\u8be5\u662f\u5b50\u8282\u70b9\u7684\u533a\u95f4\u6700\u5927\u503c</li> </ul> <p>\u786e\u5b9a\u8282\u70b9\u7f13\u5b58\u7684\u6570\u636e\u4e4b\u540e\uff0c\u5f00\u59cb\u5957\u7528\u6a21\u677f\u4fee\u6539\u4ee3\u7801\u3002</p> <p>\u4ee3\u7801\u5b9e\u73b0</p> <p>\u8fd9\u91cc\u7684\u533a\u95f4\u8303\u56f4\u6709 <code>10^8</code>\uff0c\u6bd4\u8f83\u5927\uff0c\u4e0d\u9002\u5408\u7528\u7b80\u5355\u7ebf\u6bb5\u6811\uff0c\u91c7\u7528\u52a8\u6001\u5f00\u70b9\u4f1a\u66f4\u597d\u4e00\u4e9b\u3002</p> <pre><code>/**\n * \u533a\u95f4\u6700\u5927\u503c\u7ebf\u6bb5\u6811\n *\n * \u7236\u8282\u70b9\u7f13\u5b58\u7684\u662f\u5b50\u6811\u7684\u6700\u5927\u503c\n */\npublic class MaxLinkSegmentTree extends LinkSegmentTree {\n\n    public MaxLinkSegmentTree(int low, int high) {\n        super(low, high);\n    }\n\n    @Override\n    protected int mergeQuery(Node node, int start, int end, Integer lVal, Integer rVal) {\n        // \u53d6\u5de6\u53f3\u5b50\u6811\u4e2d\u7684\u6700\u5927\u503c\n        int max = Integer.MIN_VALUE;\n        if (lVal != null) {\n            max = lVal;\n        }\n        if (rVal != null) {\n            max = Math.max(rVal, max);\n        }\n        return max;\n    }\n\n    @Override\n    protected void writeUp(Node node, int start, int end) {\n        // \u5b50\u8282\u70b9\u66f4\u65b0\u540e\uff0c\u7236\u8282\u70b9\u4e5f\u8981\u66f4\u65b0\u6700\u5927\u503c\n        node.val = Math.max(node.left.val, node.right.val);\n    }\n\n    @Override\n    protected void writeDown(Node node, int start, int end, int val) {\n        // \u5b50\u8282\u70b9\u90fd\u66f4\u65b0\u4e3a val \u7684\u8bdd\uff0c\u90a3\u4e48\u6240\u6709\u503c\u90fd\u4f1a\u76f8\u7b49\n        // \u6b64\u65f6\u533a\u95f4\u6700\u5927\u503c\u5c31\u662f val\n        node.val = val;\n        node.add = val;\n    }\n\n}\n</code></pre> <p>\u63a5\u7740\u6309\u9898\u76ee\u8981\u6c42\u5b9e\u73b0\u8c03\u7528\u4ee3\u7801\u5373\u53ef\uff1a</p> <pre><code>public List&lt;Integer&gt; fallingSquares(int[][] positions) {\n    List&lt;Integer&gt; ans = new ArrayList&lt;&gt;(positions.length);\n    int low = 1, high = (int) 1e8;\n    MaxLinkSegmentTree segmentTree = new MaxLinkSegmentTree(low, high);\n    for (int[] position : positions) {\n        int x = position[0];\n        int w = position[1];\n\n        // \u627e\u5230\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\n        int maxH = segmentTree.query(x, x + w - 1);\n        // \u5806\u53e0\u65b0\u843d\u4e0b\u7684\u65b9\u5757\u9ad8\u5ea6\n        segmentTree.update(x, x + w - 1, maxH + w);\n\n        ans.add(segmentTree.query(low, high));\n    }\n    return ans;\n}\n</code></pre>"},{"location":"ch05_tree/segment_tree/#63-lc-715-range","title":"6.3 LC 715. Range \u6a21\u5757","text":"<p>\u9898\u76ee\u63cf\u8ff0</p> <p>Range\u6a21\u5757\u662f\u8ddf\u8e2a\u6570\u5b57\u8303\u56f4\u7684\u6a21\u5757\u3002</p> <p>\u8bbe\u8ba1\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u8ddf\u8e2a\u8868\u793a\u4e3a \u534a\u5f00\u533a\u95f4 \u7684\u8303\u56f4\u5e76\u67e5\u8be2\u5b83\u4eec\u3002</p> <p>\u534a\u5f00\u533a\u95f4\u00a0[left, right)\u00a0\u8868\u793a\u6240\u6709\u00a0left &lt;= x &lt; right\u00a0\u7684\u5b9e\u6570 x \u3002</p> <p>\u5b9e\u73b0 RangeModule \u7c7b:</p> <p>RangeModule()\u00a0\u521d\u59cb\u5316\u6570\u636e\u7ed3\u6784\u7684\u5bf9\u8c61\u3002</p> <p>void addRange(int left, int right) \u6dfb\u52a0 \u534a\u5f00\u533a\u95f4\u00a0[left, right)\uff0c\u8ddf\u8e2a\u8be5\u533a\u95f4\u4e2d\u7684\u6bcf\u4e2a\u5b9e\u6570\u3002\u6dfb\u52a0\u4e0e\u5f53\u524d\u8ddf\u8e2a\u7684\u6570\u5b57\u90e8\u5206\u91cd\u53e0\u7684\u533a\u95f4\u65f6\uff0c\u5e94\u5f53\u6dfb\u52a0\u5728\u533a\u95f4\u00a0[left, right)\u00a0\u4e2d\u5c1a\u672a\u8ddf\u8e2a\u7684\u4efb\u4f55\u6570\u5b57\u5230\u8be5\u533a\u95f4\u4e2d\u3002</p> <p>boolean queryRange(int left, int right)\u00a0\u53ea\u6709\u5728\u5f53\u524d\u6b63\u5728\u8ddf\u8e2a\u533a\u95f4\u00a0[left, right)\u00a0\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5b9e\u6570\u65f6\uff0c\u624d\u8fd4\u56de true\u00a0\uff0c\u5426\u5219\u8fd4\u56de false \u3002</p> <p>void removeRange(int left, int right)\u00a0\u505c\u6b62\u8ddf\u8e2a \u534a\u5f00\u533a\u95f4\u00a0[left, right)\u00a0\u4e2d\u5f53\u524d\u6b63\u5728\u8ddf\u8e2a\u7684\u6bcf\u4e2a\u5b9e\u6570\u3002</p> <p>\u63d0\u793a\uff1a</p> <ul> <li>1 &lt;= left &lt; right &lt;= 10^9</li> <li>\u5728\u5355\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u5bf9\u00a0addRange\u00a0\u3001queryRange\u00a0\u548c removeRange \u7684\u8c03\u7528\u603b\u6570\u4e0d\u8d85\u8fc7\u00a0104\u00a0\u6b21</li> </ul> <p>\u95ee\u9898\u5206\u6790</p> <p>\u95ee\u9898\u5df2\u7ecf\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u5c31\u662f\u533a\u95f4\u67e5\u8be2\u548c\u533a\u95f4\u66f4\u65b0\u3002</p> <p>\u73b0\u5728\u8fd8\u9700\u8981\u786e\u8ba4\u4e00\u4e0b\uff1a</p> <ul> <li>\u533a\u95f4\u8282\u70b9\u9700\u8981\u7f13\u5b58\u4ec0\u4e48\u6837\u7684\u6570\u636e\uff1f</li> </ul> <p>\u8ddf\u8e2a\u533a\u95f4\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u533a\u95f4\u88ab\u6807\u8bb0\u4e86\u3002\u90a3\u4e48\u53ef\u4ee5\u8fd9\u6837\u6765\u6807\u8bb0\uff1a</p> <ul> <li>\u533a\u95f4\u503c\u4e3a 1 \u65f6\uff1a\u8868\u793a\u88ab\u8ddf\u8e2a\u4e86</li> <li>\u533a\u95f4\u503c\u5c0f\u4e8e 1 \u65f6\uff1a\u8868\u793a\u672a\u8ddf\u8e2a</li> </ul> <p>\u8fd9\u4e2a\u65f6\u5019\uff0c\u53ea\u8981\u67e5\u51fa\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\uff0c\u5c31\u80fd\u77e5\u9053\u533a\u95f4\u662f\u5426\u88ab\u8ddf\u8e2a\u4e86\u3002\u6240\u4ee5\uff0c</p> <ul> <li>\u7236\u8282\u70b9\u7f13\u5b58\u7684\u5e94\u8be5\u662f\u5b50\u8282\u70b9\u7684\u533a\u95f4\u6700\u5c0f\u503c</li> </ul> <p>\u786e\u5b9a\u8282\u70b9\u7f13\u5b58\u7684\u6570\u636e\u4e4b\u540e\uff0c\u5f00\u59cb\u5957\u7528\u6a21\u677f\u4fee\u6539\u3002</p> <p>\u4ee3\u7801\u5b9e\u73b0</p> <p>\u8fd9\u91cc\u7684\u533a\u95f4\u8303\u56f4\u6709 <code>10^9</code>\uff0c\u6bd4\u8f83\u5927\uff0c\u4e0d\u9002\u5408\u7528\u7b80\u5355\u7ebf\u6bb5\u6811\uff0c\u91c7\u7528\u52a8\u6001\u5f00\u70b9\u4f1a\u66f4\u597d\u4e00\u4e9b\u3002</p> <pre><code>/**\n * \u533a\u95f4\u6700\u5c0f\u503c\u7ebf\u6bb5\u6811\n *\n * \u7236\u8282\u70b9\u7f13\u5b58\u7684\u662f\u5b50\u6811\u7684\u6700\u5c0f\u503c\n */\npublic class MaxLinkSegmentTree extends LinkSegmentTree {\n\n    public MaxLinkSegmentTree(int low, int high) {\n        super(low, high);\n    }\n\n    @Override\n    protected int mergeQuery(Node node, int start, int end, Integer lVal, Integer rVal) {\n        // \u53d6\u5de6\u53f3\u5b50\u6811\u4e2d\u7684\u6700\u5c0f\u503c\n        int min = Integer.MAX_VALUE;\n        if (lVal != null) {\n            min = lVal;\n        }\n        if (rVal != null) {\n            min = Math.min(rVal, min);\n        }\n        return min;\n    }\n\n    @Override\n    protected void writeUp(Node node, int start, int end) {\n        // \u5b50\u8282\u70b9\u66f4\u65b0\u540e\uff0c\u7236\u8282\u70b9\u4e5f\u8981\u66f4\u65b0\u6700\u5c0f\u503c\n        node.val = Math.min(node.left.val, node.right.val);\n    }\n\n    @Override\n    protected void writeDown(Node node, int start, int end, int val) {\n        // \u5b50\u8282\u70b9\u90fd\u66f4\u65b0\u4e3a val \u7684\u8bdd\uff0c\u90a3\u4e48\u6240\u6709\u503c\u90fd\u4f1a\u76f8\u7b49\n        // \u6b64\u65f6\u533a\u95f4\u6700\u5c0f\u503c\u5c31\u662f val\n        node.val = val;\n        node.add = val;\n    }\n\n}\n</code></pre> <p>\u63a5\u7740\u6309\u7167\u9898\u76ee\u8981\u6c42\uff0c\u5b9e\u73b0\u5176\u4ed6\u7684\u8c03\u7528\u4ee3\u7801\u5373\u53ef\uff1a</p> <pre><code>class RangeModule {\n\n    final int low = 1;\n    final int high = (int) 1e9;\n    MaxLinkSegmentTree segmentTree;\n\n    public RangeModule() {\n        segmentTree = new MinLinkSegmentTree(low, high);\n    }\n\n    public void addRange(int left, int right) {\n        segmentTree.update(left, right - 1, 1);\n    }\n\n    public boolean queryRange(int left, int right) {\n        int ret = segmentTree.query(left, right - 1);\n        // \u533a\u95f4\u6700\u5c0f\u503c\u5927\u4e8e 0 \u8868\u793a\u88ab\u8ddf\u8e2a\u4e86\n        return ret &gt; 0;\n    }\n\n    public void removeRange(int left, int right) {\n        // \u8fd9\u91cc\u66f4\u65b0\u7684\u503c\u5fc5\u987b\u4f7f\u7528\u5c0f\u4e8e 0 \u7684\u6574\u6570\n        // \u4e0d\u80fd\u7528 0\uff0c\u56e0\u4e3a\u61d2\u6807\u5fd7\u7528 0 \u8868\u793a\u65e0\u66f4\u65b0\u4e86\n        // \u8bbe\u6210 0 \u7684\u8bdd\u4f1a\u5bfc\u81f4\u7ebf\u6bb5\u6811\u4e0d\u66f4\u65b0\u6570\u636e\n        // \u76f8\u5f53\u4e8e 0 \u5df2\u7ecf\u88ab\u61d2\u6807\u5fd7\u5360\u7528\u4e86\uff0c\u4f7f\u7528 0 \u4f1a\u9020\u6210\u51b2\u7a81\n        segmentTree.update(left, right - 1, -1);\n    }\n}\n</code></pre>"},{"location":"ch05_tree/segment_tree/#64","title":"6.4 \u5c0f\u7ed3","text":"<p>\u4e0a\u9762\u5217\u4e3e\u4e86\u51e0\u79cd\u7ebf\u6bb5\u6811\u7684\u51e0\u79cd\u5e38\u89c1\u4f7f\u7528\u573a\u666f\uff1a</p> <ul> <li>\u533a\u95f4\u548c</li> <li>\u533a\u95f4\u6700\u5927\u503c</li> <li>\u533a\u95f4\u6700\u5c0f\u503c</li> </ul> <p>\u7ebf\u6bb5\u6811\u672c\u8d28\u5c31\u662f\u533a\u95f4\u7f13\u5b58\uff0c\u6240\u4ee5\u5bf9\u4e8e\uff1a</p> <ul> <li>\u591a\u6b21\u533a\u95f4\u67e5\u8be2</li> <li>\u591a\u6b21\u533a\u95f4\u66f4\u65b0</li> </ul> <p>\u5c31\u6bd4\u8f83\u9002\u7528\uff0c\u4e0d\u8fc7\u5177\u4f53\u7528\u54ea\u79cd\uff0c\u89c6\u60c5\u51b5\u800c\u5b9a\u3002</p>"},{"location":"ch05_tree/segment_tree/#_8","title":"\u603b\u7ed3","text":"<p>\u4ec0\u4e48\u662f\u7ebf\u6bb5\u6811\uff1f</p> <ul> <li>\u7ebf\u6bb5\u6811\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u7f13\u5b58\uff0c\u5b83\u7f13\u5b58\u7684\u662f\u533a\u95f4\u503c</li> <li>\u7236\u8282\u70b9\u5c31\u662f\u5b50\u8282\u70b9\u7684\u7f13\u5b58</li> </ul> <p>\u4e3a\u4ec0\u4e48\u8981\u7528\u7ebf\u6bb5\u6811\uff1f</p> <ul> <li>\u901a\u8fc7\u7f13\u5b58\uff0c\u63d0\u9ad8\u591a\u6b21\u533a\u95f4\u67e5\u8be2\u548c\u533a\u95f4\u4fee\u6539\u7684\u6027\u80fd</li> <li>\u91cd\u70b9\u5728\u4e8e\u591a\u6b21\uff0c\u591a\u6b21\uff0c\u591a\u6b21\uff01\uff01\uff01</li> </ul> <p>\u7ebf\u6bb5\u6811\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1f</p> <ul> <li>\u9759\u6001\u7ebf\u6bb5\u6811\uff1a\u4e00\u5f00\u59cb\u5c31\u521b\u5efa\u597d\u6240\u6709\u8282\u70b9\u548c\u6784\u5efa\u6811\u7ed3\u6784</li> <li>\u52a8\u6001\u7ebf\u6bb5\u6811\uff1a\u533a\u95f4\u8bbf\u95ee\u8fc7\u7a0b\u4e2d\u52a8\u6001\u521b\u5efa\u8282\u70b9\u548c\u521d\u59cb\u5316</li> </ul> <p>\u9759\u6001\u7ebf\u6bb5\u6811\uff1a</p> <ul> <li>\u7b80\u5355\u7ebf\u6bb5\u6811\uff08\u57fa\u4e8e\u6570\u7ec4\uff09</li> </ul> <p>\u52a8\u6001\u7ebf\u6bb5\u6811\uff1a</p> <ul> <li>\u52a8\u6001\u4f30\u70b9\uff08\u57fa\u4e8e\u6570\u7ec4\uff09</li> <li>\u52a8\u6001\u5f00\u70b9\uff08\u57fa\u4e8e\u6307\u9488\uff09</li> </ul>"},{"location":"ch05_tree/segment_tree/#_9","title":"\u53c2\u8003","text":"<p>https://leetcode.cn/problems/range-sum-query-mutable/solution/by-lfool-v3x9/</p> <p>https://leetcode.cn/problems/my-calendar-iii/solution/xian-duan-shu-by-xiaohu9527-rfzj/</p> <p>https://leetcode.cn/problems/falling-squares/solution/by-ac_oier-zpf0/</p> <p>https://www.cnblogs.com/chengmf/p/16451615.html</p>"},{"location":"ch05_tree/union_find/","title":"\u5e76\u67e5\u96c6","text":""},{"location":"ch05_tree/union_find/#_2","title":"\u4e00\u3001\u4ec0\u4e48\u662f\u5e76\u67e5\u96c6\uff1f","text":"<p>\u5e76\u67e5\u96c6\u662f\u4e00\u79cd\u7b80\u5355\u7684\u96c6\u5408\u8868\u793a\u3002</p> <p>\u5b83\u652f\u6301\u4ee5\u4e0b 3 \u79cd\u64cd\u4f5c\uff1a</p> <ul> <li><code>Initial(S)</code>\uff1a\u5c06\u96c6\u5408 S \u4e2d\u7684\u6240\u6709\u5143\u7d20\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u4e2a\u5355\u5143\u7d20\u96c6\u5408</li> <li><code>Union(S, Root1, Root2)</code>\uff1a\u628a\u96c6\u5408 S \u4e2d\u7684\u5b50\u96c6\u5408 Root2 \u5e76\u5165\u5b50\u96c6\u5408 Root1 \u4e2d</li> <li><code>Find(S, x)</code>\uff1a\u67e5\u627e\u96c6\u5408 S \u4e2d\u5355\u5143\u7d20 x \u6240\u5728\u7684\u5b50\u96c6\u5408\uff0c\u5e76\u8fd4\u56de\u5b50\u96c6\u5408\u7684\u540d\u5b57</li> </ul> <p>\u901a\u5e38\u7528\u6811\u8868\u793a\u6bcf\u4e2a\u5b50\u96c6\u5408\uff0c\u5b50\u96c6\u5408\u7684\u5408\u5e76\u5c31\u662f\u6811\u7684\u5408\u5e76\u3002</p> <p>\u5b50\u96c6\u5408 Root2 \u5408\u5e76\u5230\u5b50\u96c6\u5408 Root1\uff0c\u53ea\u9700\u8981\u628a Root2 \u7684\u6839\u8282\u70b9\u6307\u5411 Root1 \u7684\u6839\u8282\u70b9\u5373\u53ef\u3002</p>"},{"location":"ch05_tree/union_find/#_3","title":"\u4e8c\u3001\u4e3a\u4ec0\u4e48\u8981\u7528\u5e76\u67e5\u96c6\uff1f","text":"<ul> <li>\u5e76\u67e5\u96c6\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3\u4e00\u4e9b\u5143\u7d20\u5206\u7ec4\u7684\u95ee\u9898</li> <li>\u5e76\u67e5\u96c6\u53ef\u7528\u4e8e\u7ba1\u7406\u4e00\u7cfb\u5217\u4e0d\u76f8\u4ea4\u7684\u96c6\u5408\uff0c\u6267\u884c\u96c6\u5408\u7684\u5408\u5e76\u4ee5\u53ca\u641c\u7d22\u5143\u7d20\u6240\u5728\u96c6\u5408</li> </ul>"},{"location":"ch05_tree/union_find/#_4","title":"\u4e09\u3001\u5982\u4f55\u5b9e\u73b0\u5e76\u67e5\u96c6\uff1f","text":""},{"location":"ch05_tree/union_find/#31-initials","title":"3.1 \u96c6\u5408\u521d\u59cb\u5316 <code>Initial(S)</code>","text":"<pre><code>void initial (int[] s) {\n    for (int i = 0; i &lt; s.length; i++) {\n        s[i] = i;\n    }\n}\n</code></pre> <p>\u521d\u59cb\u5316\u540e\u5355\u4e2a\u5143\u7d20\u5c31\u662f\u4e00\u4e2a\u96c6\u5408</p> <pre><code>\u96c6\u5408 S \u5b58\u50a8\uff1a\n\n[0, 1, 2, 3, 4]\n\n------------------------------------------\n\n\u96c6\u5408\u793a\u610f\u56fe\uff1a\n ___      ___      ___      ___      ___\n| 0 |    | 1 |    | 2 |    | 3 |    | 4 |\n</code></pre>"},{"location":"ch05_tree/union_find/#32-unions-root1-root2","title":"3.2 \u5b50\u96c6\u5408\u5408\u5e76 <code>Union(S, Root1, Root2)</code>","text":"<pre><code>void union(int[] s, int root1, int root2) {\n    s[root2] = root1;\n}\n</code></pre> <p>\u6bd4\u5982\u5408\u5e76 <code>0</code> \u548c <code>1</code> \u5f97\u5230\u5b50\u96c6\u5408 <code>0</code>\uff1a</p> <pre><code>\u96c6\u5408 S \u5b58\u50a8\uff1a\n\n[0, 0, 2, 3, 4]\n\n------------------------------------------\n\n\u96c6\u5408\u793a\u610f\u56fe\uff1a\n ___      ___      ___      ___\n| 0 |    | 2 |    | 3 |    | 4 |\n  ^\n  |\n ___\n| 1 |\n</code></pre> <p>\u518d\u5408\u5e76 <code>3</code> \u548c <code>4</code> \u5f97\u5230\u5b50\u96c6\u5408 <code>3</code>\uff1a</p> <pre><code>\u96c6\u5408 S \u5b58\u50a8\uff1a\n\n[0, 0, 2, 3, 3]\n\n------------------------------------------\n\n\u96c6\u5408\u793a\u610f\u56fe\uff1a\n ___      ___      ___\n| 0 |    | 2 |    | 3 |\n  ^                 ^\n  |                 |\n ___               ___\n| 1 |             | 4 |\n</code></pre> <p>\u8fd8\u53ef\u4ee5\u628a\u5b50\u96c6\u5408 <code>0</code> \u548c\u5b50\u96c6\u5408 <code>3</code> \u4e5f\u5408\u5e76\u8d77\u6765\uff1a</p> <pre><code>\u96c6\u5408 S \u5b58\u50a8\uff1a\n\n[0, 0, 2, 0, 3]\n\n------------------------------------------\n\n\u96c6\u5408\u793a\u610f\u56fe\uff1a\n       ___           ___\n      | 0 |         | 2 |\n        ^\n       / \\\n      /   \\\n    ___   ___\n   | 1 | | 3 |\n           ^\n           |\n          ___\n         | 4 |\n</code></pre>"},{"location":"ch05_tree/union_find/#33-finds-x","title":"3.3 \u67e5\u627e\u5b50\u96c6\u5408 <code>Find(S, x)</code>","text":"<pre><code>int find(int[] s, int x) {\n    while (s[x] != x) {\n        x = s[x];\n    }\n    return x;\n}\n</code></pre> <p>\u6bd4\u5982\u67e5\u627e <code>4</code> \u6240\u5728\u96c6\u5408\u65f6\uff0c\u8fc7\u7a0b\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>  ___________________   _____\n |                   | |     |\n v                   | v     |\n[0,     0,     2,     0,     3]\n\n</code></pre> <p>\u4e00\u76f4\u5f80\u4e0a\u627e\uff0c\u76f4\u5230\u6839\u8282\u70b9\u4e3a\u6b62\uff0c\u5c31\u80fd\u5f97\u5230 <code>4</code> \u6240\u5728\u7684\u96c6\u5408\u3002</p>"},{"location":"ch05_tree/union_find/#34-unions-x1-x2","title":"3.4 \u5143\u7d20\u5408\u5e76 <code>Union(S, X1, X2)</code>","text":"<p>\u5224\u65ad\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u4e2a\u96c6\u5408\uff0c\u53ea\u9700\u8981\u770b\u5b83\u4eec\u7684\u6839\u8282\u70b9\u662f\u5426\u76f8\u540c\u5373\u53ef\u3002</p> <ul> <li>\u5408\u5e76\u4e24\u4e2a\u5143\u7d20\u65f6\uff0c\u627e\u5230\u5b83\u4eec\u7684\u6839\u8282\u70b9\u5408\u5e76\u5373\u53ef</li> </ul> <p>\u6240\u4ee5\u4e0a\u9762\u7684\u5b50\u96c6\u5408\u5408\u5e76\u4ee3\u7801\u53ef\u4ee5\u6539\u6210\u8fd9\u6837\uff1a</p> <pre><code>void union(int[] s, int x1, int x2) {\n    s[find(x2)] = find(x1);\n}\n</code></pre>"},{"location":"ch05_tree/union_find/#_5","title":"\u56db\u3001\u8def\u5f84\u538b\u7f29","text":"<p>\u7b80\u5355\u7684\u5e76\u67e5\u96c6\uff0c\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\u7684\u6027\u80fd\u662f\u6bd4\u8f83\u5dee\u7684\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>\u94fe\u6761\u53d8\u5f97\u8d8a\u6765\u8d8a\u957f\u7684\u65f6\u5019\uff0c\u67e5\u627e\u6839\u8282\u70b9\u4e5f\u53d8\u5f97\u8d8a\u6765\u8d8a\u8017\u65f6</li> </ul> <p>\u6bd4\u5982\uff0c\u4e0b\u9762\u67e5\u627e\u5143\u7d20 5 \u6240\u5728\u7684\u5b50\u96c6\u5408\u65f6\uff0c\u6bcf\u6b21\u90fd\u9700\u8981\u7ecf\u8fc7\u597d\u51e0\u4e2a\u8282\u70b9\uff1a</p> <pre><code> ___\n| 1 |\n  ^\n  |\n ___\n| 3 |\n  ^\n  |\n ___\n| 4 |\n  ^\n  |\n ___\n| 5 |\n</code></pre> <p>\u5728\u5e76\u67e5\u96c6\u94fe\u6bd4\u8f83\u957f\u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u641c\u7d22\u5143\u7d20\u7684\u6839\u8282\u70b9\uff0c\u90fd\u6bd4\u8f83\u8017\u65f6\u3002</p> <p>\u90a3\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f</p> <ul> <li>\u5e76\u67e5\u96c6\u4e2d\u53ea\u5173\u6ce8\u6839\u8282\u70b9\uff0c\u56e0\u6b64\u53ef\u4ee5\u91c7\u7528\u8def\u5f84\u538b\u7f29\uff0c\u5c06\u5143\u7d20\u76f4\u63a5\u6307\u5411\u6839\u8282\u70b9</li> </ul> <p>\u800c\u5b9e\u73b0\u7684\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\uff1a</p> <ul> <li>\u5728\u67e5\u8be2\u65f6\uff0c\u628a\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u7684\u7236\u8282\u70b9\u90fd\u6307\u5411\u6839\u8282\u70b9</li> </ul> <p>\u4ee3\u7801\u4e0a\u5b9e\u73b0\u7684\u8bdd\uff0c\u53ef\u4ee5\u91c7\u7528\u9012\u5f52\uff0c\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>int find(int[] s, int x) {\n    if (s[x] == x) {\n        return x;\n    } else {\n        s[x] = find(s, s[x]);\n        return s[x];\n    }\n}\n</code></pre> <p>\u76f8\u5f53\u4e8e\u628a\u4e0a\u9762\u7684\u4e00\u6761\u76f4\u94fe\uff0c\u53d8\u6210\u4e86\u591a\u53c9\u6811\uff1a</p> <pre><code>       ___\n      | 1 |\n        ^\n      / | \\  \n     /  |  \\\n    /   |   \\\n ___   ___   ___\n| 3 | | 4 | | 5 |\n</code></pre> <p>\u7ecf\u8fc7\u8def\u5f84\u538b\u7f29\u540e\uff0c\u5c31\u57fa\u672c\u89e3\u51b3\u4e86\u94fe\u6761\u8fc7\u957f\u5f15\u8d77\u7684\u6027\u80fd\u95ee\u9898\u3002</p>"},{"location":"ch05_tree/union_find/#_6","title":"\u4e94\u3001\u6309\u79e9\u5408\u5e76","text":"<p>\u8def\u5f84\u538b\u7f29\u867d\u7136\u80fd\u89e3\u51b3\u67e5\u8be2\u65f6\u94fe\u6761\u8fc7\u957f\u7684\u95ee\u9898\uff0c\u4f46\u662f\u8def\u5f84\u538b\u7f29\u662f\u5728\u67e5\u8be2\u65f6\u624d\u505a\u7684\u3002</p> <ul> <li>\u5f53\u6ca1\u6709\u67e5\u8be2\u65f6\uff0c\u8def\u5f84\u4e0d\u4f1a\u538b\u7f29\uff0c\u8fd8\u662f\u4f1a\u51fa\u73b0\u94fe\u8def\u5f88\u957f\u7684\u60c5\u51b5</li> <li>\u6bcf\u6b21\u67e5\u8be2\u65f6\uff0c\u53ea\u538b\u7f29\u4e00\u6761\u8def\u5f84\uff0c\u5176\u4ed6\u8def\u5f84\u7684\u94fe\u8def\u8fd8\u662f\u5f88\u957f</li> </ul> <p>\u8fd9\u79cd\u60c5\u51b5\u8981\u5982\u4f55\u907f\u514d\u5462\uff1f</p> <p>\u5728\u4e24\u4e2a\u5b50\u96c6\u5408\u8fdb\u884c\u5408\u5e76\u65f6\uff0c\u53ea\u8981\u5c3d\u91cf\u6ee1\u8db3\uff1a</p> <ul> <li>\u628a\u7b80\u5355\u7684\u6811\u5f80\u590d\u6742\u7684\u6811\u4e0a\u5408\u5e76</li> </ul> <p>\u5c31\u80fd\u907f\u514d\u5e76\u67e5\u96c6\u7684\u6811\u6df1\u5ea6\u8fc7\u5927\uff0c\u5f71\u54cd\u67e5\u8be2\u7684\u6548\u7387\u3002</p> <p>\u6bd4\u5982\u8bf4\uff0c2 \u4e2a\u5b50\u96c6\u5408\u957f\u8fd9\u6837\uff1a</p> <pre><code> ___               ___\n| 0 |             | 3 |\n  ^\n  |\n ___\n| 1 |\n  ^\n  |\n ___ \n| 4 |\n</code></pre> <p>\u5b50\u96c6\u5408\u7684\u5408\u5e76\u53ef\u5206\u4e3a 2 \u79cd\u60c5\u51b5\uff1a</p> <ol> <li><code>3</code> \u5408\u5e76\u5230 <code>0</code>\uff0c\u6811\u6df1\u5ea6\u662f\u8fd8\u662f <code>2</code>\uff0c\u6df1\u5ea6\u4e0d\u53d8</li> <li><code>0</code> \u5408\u5e76\u5230 <code>3</code>\uff0c\u6811\u6df1\u5ea6\u53d8\u6210\u4e86 <code>3</code>\uff0c\u6df1\u5ea6\u52a0\u6df1\u4e86</li> </ol> <p>\u6240\u4ee5\u80af\u5b9a\u662f\u628a\u6df1\u5ea6\u5c0f\u7684 <code>3</code> \u5408\u5e76\u5230\u6df1\u5ea6\u5927\u7684 <code>0</code> \u66f4\u597d\u4e00\u4e9b\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u8282\u70b9\u6df1\u5ea6\u53d8\u5f97\u66f4\u5927\u3002</p> <p>\u90a3\u600e\u4e48\u77e5\u9053\u54ea\u4e2a\u96c6\u5408\u7684\u6df1\u5ea6\u66f4\u9ad8\u5462\uff1f</p> <ul> <li>\u91c7\u7528\u4e00\u4e2a\u989d\u5916\u7684\u6570\u7ec4\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u6839\u8282\u70b9\u7684\u6df1\u5ea6\uff0c\u5408\u5e76\u5b50\u96c6\u5408\u65f6\u540c\u65f6\u66f4\u65b0</li> </ul> <p>\u6bd4\u5982\u8bf4\uff0c\u91c7\u7528\u6570\u7ec4 <code>rank</code> \u8bb0\u5f55\u8282\u70b9\u6df1\u5ea6\uff1a</p> <ul> <li>\u521d\u59cb\u5316\u65f6\uff0c\u628a\u6240\u6709\u5143\u7d20\u7684 <code>rank</code>\uff08\u79e9\uff09\u8bbe\u4e3a\u9ed8\u8ba4\u503c 1</li> <li>\u5408\u5e76\u5b50\u96c6\u5408\u65f6\uff0c\u6bd4\u8f83\u4e24\u4e2a\u6839\u8282\u70b9\uff0c\u628a <code>rank</code> \u8f83\u5c0f\u5408\u5e76\u5230\u8f83\u5927\u7684\u4e0a\u9762</li> </ul> <p>\u4ee3\u7801\u5b9e\u73b0\u7684\u8bdd\u5c31\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <p>\u521d\u59cb\u5316\uff1a</p> <pre><code>void initial (int[] s, int[] rank) {\n    for (int i = 0; i &lt; s.length; i++) {\n        s[i] = i;\n        rank[i] = 1;\n    }\n}\n</code></pre> <p>\u5408\u5e76\u5b50\u96c6\u5408\uff1a</p> <pre><code>void union(int[] s, int[] rank, int x1, int x2) {\n    int root1 = find(x1);\n    int root2 = find(x2);\n    if (rank[root1] &gt;= rank[root2]) {\n        s[root2] = root1;\n        // \u4e24\u68f5\u6811\u6df1\u5ea6\u4e00\u6837\u7684\u65f6\u5019\uff0c\u5408\u5e76\u8d77\u6765\u4f1a\u52a0\u6df1\u4e00\u5c42\n        if (rank[root1] == rank[root2] &amp;&amp; root1 != root2) {\n            rank[root1]++;\n        }\n    } else {\n        s[root1] = root2;\n    }\n}\n</code></pre> <p>\u4e24\u68f5\u6811\u6df1\u5ea6\u4e00\u6837\u7684\u65f6\u5019\uff0c\u5408\u5e76\u8d77\u6765\u4f1a\u52a0\u6df1\u4e00\u5c42\uff1a</p> <pre><code> ___               ___\n| 0 |             | 3 |\n  ^                 ^\n  |                 |\n ___               ___\n| 1 |             | 4 |\n</code></pre> <pre><code>       ___\n      | 0 |\n        ^\n       / \\\n      /   \\\n    ___   ___\n   | 1 | | 3 |\n           ^\n           |\n          ___\n         | 4 |\n</code></pre> <p>\u6309\u79e9\u5408\u5e76\u548c\u8def\u5f84\u538b\u7f29\u4e00\u8d77\u7528\u7684\u65f6\u5019\uff0c\u8def\u5f84\u538b\u7f29\u4f1a\u5f71\u54cd\u5230 <code>rank</code> \u503c\uff0c\u5bfc\u81f4\u5b83\u4e0d\u51c6\u786e\u3002</p> <p>\u867d\u7136 <code>rank</code> \u503c\u4e0d\u51c6\u786e\uff0c\u4f46\u662f\u4e0d\u5f71\u54cd 2 \u8005\u7ed3\u5408\u4e00\u8d77\u7528\u3002</p>"},{"location":"ch05_tree/union_find/#_7","title":"\u603b\u7ed3","text":"<p>\u5e76\u67e5\u96c6\u662f\u4e00\u79cd\u7b80\u5355\u7684\u96c6\u5408\u8868\u793a\uff0c\u5305\u62ec 3 \u79cd\u64cd\u4f5c\uff1a</p> <ul> <li><code>Initial(S)</code>\uff1a\u5c06\u96c6\u5408 S \u4e2d\u7684\u6240\u6709\u5143\u7d20\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u4e2a\u5355\u5143\u7d20\u96c6\u5408</li> <li><code>Union(S, Root1, Root2)</code>\uff1a\u628a\u96c6\u5408 S \u4e2d\u7684\u5b50\u96c6\u5408 Root2 \u5e76\u5165\u5b50\u96c6\u5408 Root1 \u4e2d</li> <li><code>Find(S, x)</code>\uff1a\u67e5\u627e\u96c6\u5408 S \u4e2d\u5355\u5143\u7d20 x \u6240\u5728\u7684\u5b50\u96c6\u5408\uff0c\u5e76\u8fd4\u56de\u5b50\u96c6\u5408\u7684\u540d\u5b57</li> </ul> <p>\u5e76\u67e5\u96c6\u7684\u4f5c\u7528\uff1a</p> <ul> <li>\u5e76\u67e5\u96c6\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3\u4e00\u4e9b\u5143\u7d20\u5206\u7ec4\u7684\u95ee\u9898</li> <li>\u5e76\u67e5\u96c6\u53ef\u7528\u4e8e\u7ba1\u7406\u4e00\u7cfb\u5217\u4e0d\u76f8\u4ea4\u7684\u96c6\u5408\uff0c\u6267\u884c\u96c6\u5408\u7684\u5408\u5e76\u4ee5\u53ca\u641c\u7d22\u5143\u7d20\u6240\u5728\u96c6\u5408</li> </ul> <p>\u5e76\u67e5\u96c6\u6709 2 \u79cd\u65b9\u6cd5\u4f18\u5316\u65b9\u5f0f\uff1a</p> <ul> <li>\u8def\u5f84\u538b\u7f29\uff1a\u67e5\u8be2\u65f6\u538b\u7f29\u8282\u70b9\u8def\u5f84\uff0c\u76f4\u63a5\u6307\u5411\u6839\u8282\u70b9</li> <li>\u6309\u79e9\u5408\u5e76\uff1a\u5408\u5e76\u65f6\uff0c\u6df1\u5ea6\u5c0f\u7684\u5408\u5e76\u5230\u6df1\u5ea6\u5927\u7684\u6811\u4e0a\u9762</li> </ul> <p>\u6309\u79e9\u5408\u5e76\u548c\u8def\u5f84\u538b\u7f29\u4e00\u8d77\u7528\uff1a</p> <ul> <li>\u8def\u5f84\u538b\u7f29\u4f1a\u5f71\u54cd\u5230\u6309\u79e9\u5408\u5e76\u7684 <code>rank</code> \u503c\uff0c\u5bfc\u81f4\u5b83\u4e0d\u51c6\u786e</li> <li>\u867d\u7136 <code>rank</code> \u503c\u4e0d\u51c6\u786e\u4e86\uff0c\u4f46\u662f\u4e0d\u5f71\u54cd 2 \u8005\u7ed3\u5408\u4e00\u8d77\u7528</li> </ul>"},{"location":"ch05_tree/union_find/#_8","title":"\u53c2\u8003","text":"<p>\u300a\u6570\u636e\u7ed3\u6784\u300b\u738b\u9053\u8003\u7814\u7cfb\u5217</p> <p>https://zhuanlan.zhihu.com/p/93647900</p> <p>https://blog.csdn.net/weixin_38279101/article/details/112546053</p> <p>https://blog.csdn.net/qq_40378034/article/details/103224445</p> <p>https://destiny1020.blog.csdn.net/article/details/7655764</p>"},{"location":"ch05_tree/union_find/#_9","title":"\u9644\u5f55","text":""},{"location":"ch05_tree/union_find/#_10","title":"\u5b8c\u6574\u4ee3\u7801","text":"<pre><code>/**\n * \u5e76\u67e5\u96c6-\u8def\u5f84\u538b\u7f29 + \u6309\u79e9\u5408\u5e76\n */\npublic class UnionFind {\n\n    /**\n     * \u7236\u8282\u70b9\u5b58\u50a8\n     */\n    private int[] parent;\n    /**\n     * \u8282\u70b9\u6df1\u5ea6\n     */\n    private int[] rank;\n\n    public UnionFind(int n) {\n        parent = new int[n];\n        rank = new int[n];\n        init(n);\n    }\n\n    /**\n     * \u521d\u59cb\u5316\u5e76\u67e5\u96c6\n     *\n     * @param n \u5143\u7d20\u4e2a\u6570\n     */\n    private void init(int n) {\n        for (int i = 0; i &lt; n; i++) {\n            parent[i] = i;\n            rank[i] = 1;\n        }\n    }\n\n    /**\n     * \u67e5\u627e\u5143\u7d20\n     *\n     * @param x \u6307\u5b9a\u5143\u7d20\n     * @return \u5143\u7d20\u6839\u8282\u70b9\n     */\n    public int find(int x) {\n        if (parent[x] == x) {\n            return x;\n        } else {\n            // \u8def\u5f84\u538b\u7f29\uff0c\u4f1a\u5bfc\u81f4 rank \u6709\u8bef\u5dee\n            parent[x] = find(parent[x]);\n            return parent[x];\n        }\n    }\n\n    /**\n     * \u5408\u5e76\u5143\u7d20\u5b50\u96c6\u5408\n     *\n     * @param x1 \u5143\u7d20\n     * @param x2 \u5143\u7d20\n     */\n    public void union(int x1, int x2) {\n        int root1 = find(x1);\n        int root2 = find(x2);\n        if (root1 == root2) {\n            return;\n        }\n\n        // \u6309\u79e9\u5408\u5e76\n        if (rank[root1] &gt; rank[root2]) {\n            parent[root2] = root1;\n        } else if (rank[root1] &lt; rank[root2]) {\n            parent[root1] = root2;\n        } else {\n            // \u6df1\u5ea6\u4e00\u6837\u7684\u65f6\u5019\uff0c\u5408\u5e76\u8d77\u6765\u4f1a\u52a0\u6df1\u4e00\u5c42\n            parent[root2] = root1;\n            rank[root1]++;\n        }\n    }\n\n}\n</code></pre>"},{"location":"ch06_heap/","title":"\u5806","text":""},{"location":"ch06_heap/heap/","title":"\u5806","text":""},{"location":"ch06_heap/heap/#_2","title":"\u4e00\u3001\u662f\u4ec0\u4e48\uff1f","text":"<p>\u5728\u903b\u8f91\u610f\u4e49\u4e0a\uff0c\u5806\u662f\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>    \u5927\u503c\u5806                    \u5c0f\u503c\u5806\n\n      30                        14    \n   /      \\                  /      \\ \n  28      16                22      16\n    \\    /                 /       /  \n    22  12                24      26  \n</code></pre> <p>\u5806\u7684\u7279\u6027\uff1a</p> <ul> <li>\u662f\u4e00\u68f5\u4e8c\u53c9\u6811</li> <li>\u8282\u70b9\u662f\u5c40\u90e8\u6709\u5e8f\u7684\uff08\u4e0d\u50cf BST \u90a3\u6837\u6574\u4f53\u6709\u5e8f\uff09</li> </ul> <p>\u5c40\u90e8\u6709\u5e8f\u7684\u610f\u601d\u662f\uff1a</p> <ul> <li>\u5927\u503c\u5806\uff1a\u7236\u8282\u70b9\u7684\u503c\u603b\u6bd4\u5b50\u8282\u70b9\u7684\u503c\u5927</li> <li>\u5c0f\u503c\u5806\uff1a\u7236\u8282\u70b9\u7684\u503c\u603b\u6bd4\u5b50\u8282\u70b9\u7684\u503c\u5c0f</li> <li>\u5144\u5f1f\u8282\u70b9\u4e4b\u95f4\u4e0d\u5b58\u5728\u5927\u5c0f\u5173\u7cfb</li> </ul> <p>\u5373\uff0c\u5c40\u90e8\u6709\u5e8f\u662f\u6307\u7684\u7236\u5b50\u4e4b\u95f4\u6709\u5e8f\uff0c\u5144\u5f1f\u4e4b\u95f4\u65e0\u5e8f\u3002</p>"},{"location":"ch06_heap/heap/#_3","title":"\u4e8c\u3001\u4e3a\u4ec0\u4e48\uff1f","text":""},{"location":"ch06_heap/heap/#21","title":"2.1 \u573a\u666f","text":"<ul> <li>\u6bcf\u6b21\u53ea\u9700\u8981\u6700\u4f18\u5148\u7684\u6570\u636e\uff0c\u800c\u4e0d\u5fc5\u6240\u6709\u6570\u636e\u90fd\u6392\u597d\u5e8f\uff0c\u6bd4\u5982\u4efb\u52a1\u8c03\u5ea6</li> <li>\u9700\u8981\u4ece\u5927\u91cf\u6570\u636e\u4e2d\u627e\u51fa TopN \u7684\u6570\u636e</li> </ul>"},{"location":"ch06_heap/heap/#22","title":"2.2 \u76ee\u7684","text":"<ul> <li>\u60f3\u8981\u5b9e\u73b0\u4e00\u79cd\u6309\u4f18\u5148\u7ea7\u6392\u5217\u7684\u6570\u636e\u7ed3\u6784</li> <li>\u5e76\u4e14\u80fd\u4fdd\u8bc1\u8f83\u9ad8\u7684\u64cd\u4f5c\u6548\u7387\uff08\u63d2\u5165\u548c\u5220\u9664\uff09</li> </ul>"},{"location":"ch06_heap/heap/#23","title":"2.3 \u5bf9\u6bd4","text":"<ul> <li>\u6709\u5e8f\u8868\u7684\u63d2\u5165\u548c\u5220\u9664\u590d\u6742\u5ea6\u90fd\u662f O(n)\uff0c\u6027\u80fd\u8f83\u5dee</li> <li>BST \u7684\u63d2\u5165\u548c\u5220\u9664\u590d\u6742\u5ea6\u662f O(logn)\uff0c\u4f46\u7ed3\u6784\u4e0d\u7a33\u5b9a</li> <li>AVL \u548c\u7ea2\u9ed1\u6811\u53ef\u4ee5\u6ee1\u8db3\u6761\u4ef6\uff0c\u4f46\u662f\u5b9e\u73b0\u590d\u6742</li> </ul>"},{"location":"ch06_heap/heap/#_4","title":"\u4e09\u3001\u600e\u4e48\u505a\uff1f","text":""},{"location":"ch06_heap/heap/#31","title":"3.1 \u5b58\u50a8\u7ed3\u6784","text":"<p>\u5806\u662f\u4e8c\u53c9\u6811\uff0c\u6309\u7167\u4e00\u822c\u5b9e\u73b0\uff0c\u4f1a\u4f7f\u7528\u8282\u70b9\u94fe\u63a5\u7684\u65b9\u5f0f\u5b9e\u73b0\u3002</p> <ul> <li>\u4f46\u662f\u4f7f\u7528\u94fe\u63a5\u5f62\u5f0f\u7684\u4e8c\u53c9\u6811\u6765\u5b9e\u73b0\u5806\uff0c\u8fc7\u4e8e\u6d6a\u8d39\u7a7a\u95f4</li> </ul> <p>\u5982\u679c\u628a\u5806\u505a\u6210\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u90a3\u5c31\u4f1a\u76f8\u5bf9\u7b80\u5355\u5f88\u591a\uff1a</p> <ul> <li>\u4ee5\u6570\u7ec4\u4f5c\u4e3a\u5806\u7684\u5e95\u5c42\u7269\u7406\u5b58\u50a8\u7ed3\u6784</li> <li>\u5c06\u5806\u6811\u7684\u8282\u70b9\u6309\u7167\u5c42\u7ea7\u987a\u5e8f\u653e\u5165\u6570\u7ec4\u4e2d</li> </ul> <p>\u867d\u7136\u5806\u7684\u5b58\u50a8\u7ed3\u6784\u662f\u6570\u7ec4\uff0c\u4f46\u662f\u903b\u8f91\u4e0a\u662f\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\u3002</p> <p>\u4ee5\u5927\u503c\u5806\u4e3a\u4f8b\uff0c\u7269\u7406\u7ed3\u6784\u548c\u903b\u8f91\u7ed3\u6784\u7684\u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b\uff1a</p> <pre><code>                   30     \n                /      \\  \n               28      16                          -- \u903b\u8f91\u7ed3\u6784\n              /  \\    /   \n             18  22  12   \n\n   ___ ____ ____ ____ ____ ____ ____\n  |   | 30 | 28 | 16 | 18 | 22 | 12 |              -- \u7269\u7406\u7ed3\u6784\n</code></pre> <p>\u5806\u4f7f\u7528\u6570\u7ec4\u5b58\u50a8\u65f6\u7684\u6027\u8d28\uff1a</p> <ul> <li>\u5806\u8282\u70b9\u7684\u4f4d\u7f6e\u4ece\u7d22\u5f15 1 \u5f00\u59cb</li> <li>\u5de6\u5b50\u8282\u70b9\u7d22\u5f15\u662f <code>2*i</code>\uff0c\u53f3\u5b50\u8282\u70b9\u7d22\u5f15\u662f <code>2*i+1</code></li> <li>\u7236\u8282\u70b9\u7d22\u5f15\u662f <code>i/2</code></li> </ul> <p>\u7d22\u5f15\u4ece <code>1</code> \u5f00\u59cb\u662f\u4e3a\u4e86\u51cf\u5c11\u7236\u5b50\u7d22\u5f15\u8ba1\u7b97\u65f6\u7684 <code>+/-</code> \u6b21\u6570\u3002</p>"},{"location":"ch06_heap/heap/#32","title":"3.2 \u5efa\u5806","text":"<p>\u5efa\u5806\u65b9\u5f0f\uff1a</p> <ul> <li>\u65b9\u5f0f 1\uff1a\u5c06\u6bcf\u4e2a\u5143\u7d20\u9010\u4e2a\u63d2\u5165\u5806\u4e2d</li> <li>\u65b9\u5f0f 2\uff1a\u5bf9\u5206\u652f\u8282\u70b9\uff0c\u6309\u7167\u4ece\u4e0b\u5f80\u4e0a\u3001\u4ece\u53f3\u5f80\u5de6\u7684\u987a\u5e8f\u8c03\u6574</li> </ul> <p>\u4ece\u7406\u8bba\u4e0a\u8bf4\uff0c\u65b9\u6848 2 \u7684\u6548\u7387\u66f4\u9ad8\uff0c\u56e0\u4e3a\u5b83\u53ea\u9700\u8981\u5904\u7406 <code>n/2</code> \u4e2a\u5143\u7d20\u3002</p> <p>\u6bd4\u5982\uff0c\u6784\u5efa\u5927\u503c\u5806\uff0c\u6784\u5efa\u7684\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <pre><code>                            16=&gt;30                  22=&gt;28               12=&gt;30=&gt;16\n\n      12                      12                      12                     30      \n   /      \\      16        /      \\      22        /      \\      12       /      \\   \n  22      16   =====&gt;     22      30   =====&gt;     28      30   =====&gt;    28      16  \n /  \\    /               /  \\    /               /  \\    /              /  \\    /    \n18  28  30              18  28  16              18  22  16             18  22  12    \n</code></pre> <p>\u8fd9\u91cc\u7684\u6700\u540e\u4e00\u4e2a\u5206\u652f\u8282\u70b9\u662f <code>16</code>\uff0c\u6240\u4ee5\u6309\u7167 <code>16 -&gt; 22 -&gt; 12</code> \u7684\u987a\u5e8f\u6765\u8c03\u6574\u3002</p> <p>\u4ece\u6700\u540e\u4e00\u4e2a\u5206\u652f\u8282\u70b9\u5f00\u59cb\uff0c\u4ece\u4e0b\u5f80\u4e0a\u3001\u4ece\u53f3\u5f80\u5de6\u9010\u4e2a\u6267\u884c <code>sift down</code>\uff0c\u5c31\u80fd\u6784\u5efa\u51fa\u4e00\u4e2a\u5806\u3002</p>"},{"location":"ch06_heap/heap/#33","title":"3.3 \u63d2\u5165","text":"<p>\u63d2\u5165\u8fc7\u7a0b\uff1a</p> <ul> <li>\u5148\u5c06\u63d2\u5165\u5143\u7d20\u653e\u5230\u6570\u7ec4\u6700\u540e\uff0c\u5bf9\u5e94\u5230\u5806\u6811\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9</li> <li>\u7136\u540e\u5bf9\u63d2\u5165\u5143\u7d20\u4ece\u4e0b\u5f80\u4e0a\u9012\u5f52\u8c03\u6574\u7236\u5b50\u8282\u70b9\u7684\u4f4d\u7f6e</li> </ul> <p>\u6bd4\u5982\uff0c\u7ed9\u4e0b\u9762\u4f8b\u5b50\u7684\u5806\u63d2\u5165\u65b0\u5143\u7d20 <code>40</code>\uff0c\u63d2\u5165\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <pre><code>   \u8981\u63d2\u516540                 \u63d2\u516540                   40=&gt;16                 40=&gt;30\n\n      30                      30                      30                     40      \n   /      \\      40        /      \\                /      \\               /      \\   \n  28      16   =====&gt;     28      16   =====&gt;     28      40   =====&gt;    28      30  \n /  \\    /               /  \\    /  \\            /  \\    /  \\           /  \\    /  \\   \n18  22  12              18  22  12  40          18  22  12  16         18  22  12  16  \n</code></pre> <p>\u63d2\u5165\u8fc7\u7a0b\u662f\u4ece\u4e0b\u5f80\u4e0a\u6267\u884c <code>sift up</code>\uff0c\u76f4\u5230\u7ed3\u6784\u7a33\u5b9a\u6216\u62b5\u8fbe\u6839\u8282\u70b9\u4e3a\u6b62\u3002</p>"},{"location":"ch06_heap/heap/#34","title":"3.4 \u5220\u9664","text":"<p>\u5806\u7684\u5220\u9664\uff0c\u4e00\u822c\u90fd\u662f\u5220\u9664\u6839\u8282\u70b9\u3002\u6240\u4ee5\u5220\u9664\u8fc7\u7a0b\u662f\u8fd9\u6837\u7684\uff1a</p> <ul> <li>\u4ea4\u6362\u6839\u8282\u70b9\u548c\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e</li> <li>\u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff08\u539f\u6839\u8282\u70b9\uff09</li> <li>\u5bf9\u65b0\u6839\u8282\u70b9\uff08\u539f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff09\u4ece\u4e0a\u5f80\u4e0b\u8c03\u6574\u4f4d\u7f6e</li> </ul> <p>\u6bd4\u5982\uff0c\u4e0b\u9762\u4f8b\u5b50\u8981\u5220\u9664\u6839\u8282\u70b9 <code>30</code>\uff0c\u8fc7\u7a0b\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>    \u8981\u79fb\u966430               \u4ea4\u636230-12                 \u79fb\u966430                \u8c03\u657412                   \u8c03\u657412\n\n      30                      12                      12                     28                       28      \n   /      \\                /      \\                /      \\               /      \\                 /      \\   \n  28      16   =====&gt;     28      16   =====&gt;     28      16   =====&gt;    12      16     =====&gt;    22      16  \n /  \\    /               /  \\    /               /  \\                   /  \\                     /  \\       \n18  22  12              18  22  30              18  22                 18  22                   18  12        \n</code></pre> <p>\u5220\u9664\u662f\u4ece\u4e0a\u5f80\u4e0b\u6267\u884c <code>siftdown</code> \u65b9\u6cd5\uff0c\u76f4\u5230\u7ed3\u6784\u7a33\u5b9a\u6216\u62b5\u8fbe\u53f6\u5b50\u8282\u70b9\u4e3a\u6b62\u3002</p>"},{"location":"ch06_heap/heap/#_5","title":"\u56db\u3001\u5b9e\u9645\u6848\u4f8b","text":"<p>\u95ee\u9898\u63cf\u8ff0\uff1a</p> <p>TopN \u95ee\u9898\uff0c\u4ece\u4e00\u4e2a\u4e0d\u77e5\u9053\u957f\u5ea6\u7684\u6570\u636e\u6d41\u4e2d\uff0c\u7edf\u8ba1 TopN \u7684\u6570\u636e</p> <p>\u5bf9\u5e94\u7684\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>// \u521b\u5efa\u4e00\u4e2a\u6700\u5c0f\u503c\u5806\nHeap&lt;Integer&gt; minHeap = new MinHeap&lt;&gt;(n + 1);\nwhile ((num = in.readInt()) != -1) {\n   minHeap.intsert(num);\n   // \u5806\u4e2d\u53ea\u4fdd\u7559 n \u4e2a\u5143\u7d20\n   if (minHeap.size() &gt; n) {\n      // \u5220\u9664\u6700\u5c0f\u7684\u5143\u7d20\u503c\n      minHeap.removeFirst();\n   }\n}\n</code></pre> <p>\u6700\u7ec8\u5806\u91cc\u53ea\u4f1a\u4fdd\u7559 <code>n</code> \u4e2a\u6700\u5927\u503c\uff0c\u5373 <code>TopN</code> \u6570\u636e\u3002</p>"},{"location":"ch06_heap/heap/#_6","title":"\u603b\u7ed3","text":"<p>\u5806\u7684\u6027\u8d28\uff1a</p> <ul> <li>\u5806\u662f\u4e00\u68f5\u4e8c\u53c9\u6811\uff08\u4f7f\u7528\u6570\u7ec4\u5b9e\u73b0\u7684\u5806\u624d\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff09</li> <li>\u8282\u70b9\u662f\u5c40\u90e8\u6709\u5e8f\u7684\uff08\u4e0d\u50cf BST \u90a3\u6837\u6574\u4f53\u6709\u5e8f\uff09</li> <li>\u5927\u503c\u5806\uff1a\u7236\u8282\u70b9\u7684\u503c\u603b\u6bd4\u5b50\u8282\u70b9\u7684\u503c\u5927</li> <li>\u5c0f\u503c\u5806\uff1a\u7236\u8282\u70b9\u7684\u503c\u603b\u6bd4\u5b50\u8282\u70b9\u7684\u503c\u5c0f</li> <li>\u5144\u5f1f\u8282\u70b9\u4e4b\u95f4\u4e0d\u5b58\u5728\u5927\u5c0f\u5173\u7cfb</li> </ul> <p>\u5806\u7684\u5b58\u50a8\uff1a</p> <ul> <li>\u4ee5\u6570\u7ec4\u4f5c\u4e3a\u5806\u7684\u5e95\u5c42\u7269\u7406\u5b58\u50a8\u7ed3\u6784</li> <li>\u5c06\u5806\u6811\u7684\u8282\u70b9\u6309\u7167\u5c42\u7ea7\u987a\u5e8f\u653e\u5165\u6570\u7ec4\u4e2d</li> <li>\u4f7f\u7528\u6570\u7ec4\u5b58\u50a8\u7684\u5806\uff0c\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811</li> <li>\u5806\u8282\u70b9\u7684\u4f4d\u7f6e\u4ece\u7d22\u5f15 1 \u5f00\u59cb</li> <li>\u5de6\u5b50\u8282\u70b9\u7d22\u5f15\u662f <code>2*i</code>\uff0c\u53f3\u5b50\u8282\u70b9\u7d22\u5f15\u662f <code>2*i+1</code></li> <li>\u7236\u8282\u70b9\u7d22\u5f15\u662f <code>i/2</code></li> <li>\u7d22\u5f15\u4ece <code>1</code> \u5f00\u59cb\u662f\u4e3a\u4e86\u51cf\u5c11\u7236\u5b50\u7d22\u5f15\u8ba1\u7b97\u65f6\u7684 <code>+/-</code> \u6b21\u6570</li> </ul> <p>\u5806\u7684\u64cd\u4f5c\uff1a</p> <ul> <li>\u5efa\u5806\u65b9\u5f0f</li> <li>\u65b9\u5f0f 1\uff1a\u5c06\u6bcf\u4e2a\u5143\u7d20\u9010\u4e2a\u63d2\u5165\u5806\u4e2d</li> <li>\u65b9\u5f0f 2\uff08\u66f4\u597d\uff09\uff1a\u5bf9\u5206\u652f\u8282\u70b9\uff0c\u6309\u7167\u4ece\u4e0b\u5f80\u4e0a\u3001\u4ece\u53f3\u5f80\u5de6\u7684\u987a\u5e8f\u8c03\u6574</li> <li>\u63d2\u5165\u8fc7\u7a0b</li> <li>\u5148\u5c06\u63d2\u5165\u5143\u7d20\u653e\u5230\u6570\u7ec4\u6700\u540e\uff0c\u5bf9\u5e94\u5230\u5806\u6811\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9</li> <li>\u7136\u540e\u5bf9\u63d2\u5165\u5143\u7d20\u4ece\u4e0b\u5f80\u4e0a\u9012\u5f52\u8c03\u6574\u7236\u5b50\u8282\u70b9\u7684\u4f4d\u7f6e</li> <li>\u5220\u9664\u8fc7\u7a0b</li> <li>\u4ea4\u6362\u6839\u8282\u70b9\u548c\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e</li> <li>\u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff08\u539f\u6839\u8282\u70b9\uff09</li> <li>\u5bf9\u65b0\u6839\u8282\u70b9\uff08\u539f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff09\u4ece\u4e0a\u5f80\u4e0b\u8c03\u6574\u4f4d\u7f6e</li> </ul>"},{"location":"ch06_heap/heap/#_7","title":"\u53c2\u8003","text":"<p>\u300a\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u8bbe\u8ba1\uff08\u7b2c\u4e09\u7248\uff09\u300b</p> <p>\u300a\u7b97\u6cd5\uff08\u7b2c4\u7248\uff09\u300b </p>"},{"location":"ch06_heap/heap/#_8","title":"\u9644\u5f55","text":""},{"location":"ch06_heap/heap/#_9","title":"\u5806\u63a5\u53e3","text":"<pre><code>/**\n * \u5806\u63a5\u53e3\n *\n * @author weijiaduo\n * @since 2023/2/24\n */\npublic interface Heap&lt;T&gt; {\n\n    /**\n     * \u63d2\u5165\u65b0\u503c\n     *\n     * @param val \u65b0\u503c\n     */\n    void insert(T val);\n\n    /**\n     * \u79fb\u9664\u7b2c\u4e00\u4e2a\u8282\u70b9\n     *\n     * @return \u7b2c\u4e00\u4e2a\u8282\u70b9\u503c\n     */\n    T removeFirst();\n\n    /**\n     * @return \u7b2c\u4e00\u4e2a\u5143\u7d20\n     */\n    T first();\n\n    /**\n     * @return \u5143\u7d20\u6570\u91cf\n     */\n    int size();\n\n}\n</code></pre>"},{"location":"ch06_heap/heap/#_10","title":"\u5806\u5b9e\u73b0","text":"<pre><code>/**\n * \u5806\u5b9e\u73b0\n *\n * @author weijiaduo\n * @since 2023/2/24\n */\npublic class HeapImpl&lt;T extends Comparable&lt;T&gt;&gt; implements Heap&lt;T&gt; {\n\n    /**\n     * \u5806\uff0c\u4ece 1 \u5f00\u59cb\n     */\n    private final T[] elements;\n    /**\n     * \u5806\u5927\u5c0f\n     */\n    private int size;\n    /**\n     * \u503c\u6bd4\u8f83\u5668\n     */\n    private final Comparator&lt;T&gt; cmp;\n\n    public HeapImpl(int capacity) {\n        //noinspection unchecked\n        elements = (T[]) new Comparable[capacity + 1];\n        cmp = Comparator.reverseOrder();\n        size = 0;\n    }\n\n    public HeapImpl(T[] elements) {\n        this(elements, Comparator.reverseOrder());\n    }\n\n    public HeapImpl(T[] elements, Comparator&lt;T&gt; cmp) {\n        this.cmp = cmp;\n        size = elements.length;\n        //noinspection unchecked\n        this.elements = (T[]) new Comparable[size + 1];\n        System.arraycopy(elements, 0, this.elements, 1, size);\n        build();\n    }\n\n    /**\n     * \u6784\u5efa\u5806\n     */\n    private void build() {\n        for (int i = size / 2; i &gt; 0; i--) {\n            siftDown(i);\n        }\n    }\n\n    @Override\n    public void insert(T val) {\n        if (size + 1 &gt;= elements.length) {\n            throw new IllegalStateException(\"Heap isFull!\");\n        }\n\n        elements[++size] = val;\n        siftUp(size);\n    }\n\n    @Override\n    public T removeFirst() {\n        if (size &lt;= 0) {\n            throw new IllegalStateException(\"Heap isEmpty!\");\n        }\n\n        T val = elements[1];\n        swap(1, size--);\n        siftDown(1);\n        return val;\n    }\n\n    @Override\n    public T first() {\n        if (size &lt;= 0) {\n            throw new IllegalStateException(\"Heap isEmpty!\");\n        }\n        return elements[1];\n    }\n\n    @Override\n    public int size() {\n        return size;\n    }\n\n    /**\n     * \u4ece\u4e0a\u5f80\u4e0b\u8c03\u6574\n     *\n     * @param index \u6307\u5b9a\u5f00\u59cb\u7d22\u5f15\n     */\n    private void siftDown(int index) {\n        int i = index;\n        while (i &lt; size) {\n            int m = i;\n            int l = left(i);\n            if (l &lt;= size &amp;&amp; prior(l, m)) {\n                m = l;\n            }\n            int r = right(i);\n            if (r &lt;= size &amp;&amp; prior(r, m)) {\n                m = r;\n            }\n            if (m == i) {\n                break;\n            }\n            swap(i, m);\n            i = m;\n        }\n    }\n\n    /**\n     * \u4ece\u4e0b\u5f80\u4e0a\u8c03\u6574\n     *\n     * @param index \u6307\u5b9a\u5f00\u59cb\u7d22\u5f15\n     */\n    private void siftUp(int index) {\n        int i = index;\n        while (i &gt; 0) {\n            int p = parent(i);\n            if (p &gt; 0 &amp;&amp; prior(i, p)) {\n                swap(i, p);\n                i = p;\n            } else {\n                break;\n            }\n        }\n    }\n\n    /**\n     * \u7236\u8282\u70b9\u7d22\u5f15\n     *\n     * @param i \u5f53\u524d\u8282\u70b9\u7d22\u5f15\n     * @return \u7236\u8282\u70b9\u7d22\u5f15\n     */\n    private int parent(int i) {\n        return i / 2;\n    }\n\n    /**\n     * \u5de6\u5b50\u8282\u70b9\u7d22\u5f15\n     *\n     * @param i \u5f53\u524d\u8282\u70b9\u7d22\u5f15\n     * @return \u5de6\u5b50\u8282\u70b9\u7d22\u5f15\n     */\n    private int left(int i) {\n        return 2 * i;\n    }\n\n    /**\n     * \u53f3\u5b50\u8282\u70b9\u7d22\u5f15\n     *\n     * @param i \u5f53\u524d\u8282\u70b9\u7d22\u5f15\n     * @return \u53f3\u5b50\u8282\u70b9\u7d22\u5f15\n     */\n    private int right(int i) {\n        return 2 * i + 1;\n    }\n\n    /**\n     * elements[i] \u662f\u5426\u5c0f\u4e8e elements[j]\n     *\n     * @param i \u7d22\u5f15 i\n     * @param j \u7d22\u5f15 j\n     * @return true/false\n     */\n    private boolean prior(int i, int j) {\n        return cmp.compare(elements[i], elements[j]) &lt; 0;\n    }\n\n    /**\n     * \u4ea4\u63622\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\n     *\n     * @param i \u7d22\u5f15 i\n     * @param j \u7d22\u5f15 j\n     */\n    private void swap(int i, int j) {\n        if (i == j) {\n            return;\n        }\n        T t = elements[i];\n        elements[i] = elements[j];\n        elements[j] = t;\n    }\n\n    @Override\n    public String toString() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"[\");\n        for (int i = 0; i &lt;= size; i++) {\n            if (i &gt; 0) {\n                sb.append(\", \");\n            }\n            sb.append(elements[i]);\n        }\n        sb.append(\"]\");\n        return sb.toString();\n    }\n\n}\n</code></pre>"},{"location":"ch06_heap/index_heap/","title":"\u7d22\u5f15\u5806","text":""},{"location":"ch06_heap/index_heap/#_2","title":"\u4e00\u3001\u4ec0\u4e48\u662f\u7d22\u5f15\u5806\uff1f","text":"<p>\u7d22\u5f15\u5806\uff08Index Heap\uff09\u662f\u4e8c\u53c9\u5806\u7684\u4e00\u4e2a\u53d8\u79cd\uff0c\u662f\u4e8c\u53c9\u5806\u7684\u4e00\u79cd\u589e\u5f3a\u3002</p> <p>\u76f8\u6bd4\u4e8e\u4e8c\u53c9\u5806\u53ea\u80fd\u8bbf\u95ee\u5806\u9876\u5143\u7d20\uff0c\u7d22\u5f15\u5806\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee\u5806\u4e2d\u7684\u4efb\u610f\u5143\u7d20\u3002</p> <p>\u6bd4\u5982\u4e0b\u9762\u7684\u7d22\u5f15\u5806\uff1a</p> <pre><code>       1(30)      \n    /        \\   \n 4(28)       3(16)  \n    \\         /    \n   5(22)    2(12)    \n</code></pre> <p>\u9664\u4e86\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5806\u9876\u5143\u7d20 30\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee\u5176\u4ed6\u5143\u7d20\uff1a</p> <ul> <li>1: 30</li> <li>2: 12</li> <li>3: 16</li> <li>4: 28</li> <li>5: 22</li> </ul> <p>\u8fd9\u76f8\u5f53\u4e8e\u7ed9\u5806\u5143\u7d20\u589e\u52a0\u4e86\u7d22\u5f15\uff0c\u56e0\u6b64\u79f0\u4e3a\u7d22\u5f15\u5806\u3002</p>"},{"location":"ch06_heap/index_heap/#_3","title":"\u4e8c\u3001\u4e3a\u4ec0\u4e48\u7528\u7d22\u5f15\u5806\uff1f","text":"<p>\u4e8c\u53c9\u5806\uff0c\u6bcf\u6b21\u53ea\u80fd\u64cd\u4f5c\u5806\u9876\u5143\u7d20\uff0c\u6ca1\u529e\u6cd5\u64cd\u4f5c\u5176\u4ed6\u7684\u5143\u7d20\u3002</p> <p>\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u6709\u65f6\u5019\u9700\u8981\u64cd\u4f5c\u4e00\u4e0b\u975e\u5806\u9876\u7684\u5143\u7d20\uff0c\u8fd9\u79cd\u4e8c\u53c9\u5806\u5c31\u505a\u4e0d\u5230\u4e86\u3002</p> <p>\u7d22\u5f15\u5806\u5c31\u662f\u4e13\u95e8\u4e3a\u4e86\u89e3\u51b3\u64cd\u4f5c\u975e\u5806\u9876\u5143\u7d20\u95ee\u9898\u800c\u8bbe\u8ba1\u7684\u3002</p>"},{"location":"ch06_heap/index_heap/#_4","title":"\u4e09\u3001\u7d22\u5f15\u5806\u5982\u4f55\u5b9e\u73b0\uff1f","text":"<p>\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u5f0f\u662f\u7ed9\u5143\u7d20\u52a0\u4e0a\u7d22\u5f15\u5c5e\u6027\uff0c\u4f46\u662f\u8fd9\u9700\u8981\u91cd\u65b0\u5b9e\u73b0\u4e00\u5957\u65b0\u4ee3\u7801\u3002</p> <p>\u4f46\u53e6\u4e00\u79cd\u5e38\u89c1\u65b9\u5f0f\u662f\uff0c\u57fa\u4e8e\u73b0\u6709\u7684\u4e8c\u53c9\u5806\u6765\u6539\u9020\u5b9e\u73b0\uff1a</p> <ul> <li>\u4f7f\u7528\u989d\u5916\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u5143\u7d20\u7d22\u5f15\uff0c\u5c06\u7d22\u5f15\u6570\u7ec4\u5efa\u6210\u5806</li> </ul> <p>\u5176\u7ed3\u6784\u7c7b\u4f3c\u8fd9\u6837\u5b50\uff1a</p> <pre><code>                     6(30)     \n                  /        \\  \n               4(28)       3(16)                   -- \u7d22\u5f15\u5806\u7ed3\u6784\n              /    \\       /   \n            2(18) 5(22)  1(12)   \n\n   ___ ____ ____ ____ ____ ____ ____\n  |   | 6  | 4  | 3  | 2  | 5  | 1  |              -- \u7d22\u5f15\u5806\u6570\u7ec4\n\n   ___ ____ ____ ____ ____ ____ ____\n  |   | 12 | 18 | 16 | 28 | 22 | 30 |              -- \u5143\u7d20\u6570\u7ec4\n\n</code></pre> <p>\u5176\u4e2d\uff0c<code>6(30)</code> \u8868\u793a\u7d22\u5f15\u4e3a 6 \u7684\u5143\u7d20\uff0c\u5bf9\u5e94\u7684\u503c\u4e3a 30\u3002</p> <ul> <li>\u5143\u7d20\u6570\u7ec4\uff1a\u6309\u7167\u5143\u7d20\u7d22\u5f15\u4fdd\u5b58\uff0c\u5143\u7d20\u4f4d\u7f6e\u4f1a\u4e00\u76f4\u4fdd\u6301\u4e0d\u53d8</li> <li>\u7d22\u5f15\u5806\u6570\u7ec4\uff1a\u4fdd\u5b58\u7684\u662f\u5143\u7d20\u7d22\u5f15\uff0c\u4f1a\u6309\u7167\u5806\u7684\u7ed3\u6784\u6765\u8c03\u6574\u4f4d\u7f6e</li> </ul> <p>\u6709\u4e86\u8fd9\u4e24\u4e2a\u6570\u7ec4\uff0c\u5c31\u80fd\u968f\u610f\u83b7\u53d6\u5806\u91cc\u9762\u7684\u5143\u7d20\u4e86\uff1a</p> <ul> <li>\u83b7\u53d6\u5806\u9876\u5143\u7d20\u65f6\uff0c\u53ef\u901a\u8fc7\u7d22\u5f15\u5806\u6570\u7ec4\u83b7\u53d6</li> <li>\u6839\u636e\u7d22\u5f15\u83b7\u53d6\u5143\u7d20\u65f6\uff0c\u53ef\u901a\u8fc7\u5143\u7d20\u6570\u7ec4\u83b7\u53d6</li> </ul> <p>\u8fd9\u5176\u5b9e\u76f8\u5f53\u4e8e\u5728\u4e8c\u53c9\u5806\u7684\u57fa\u7840\u4e0a\uff0c\u52a0\u4e86\u4e00\u4e2a\u4e2d\u95f4\u5c42\uff0c\u7528\u7d22\u5f15\u6570\u7ec4\u6765\u66ff\u4ee3\u5143\u7d20\u6570\u7ec4\u5efa\u5806\u800c\u5df2\u3002</p> <p>\u4e0d\u8fc7\u5229\u7528\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u6539\u9020\u4e8c\u53c9\u5806\u7684\u4ee3\u7801\u6765\u5b9e\u73b0\u7d22\u5f15\u5806\u4e86\u3002</p>"},{"location":"ch06_heap/index_heap/#_5","title":"\u56db\u3001\u5b9e\u9645\u6848\u4f8b","text":"<p>\u95ee\u9898\u63cf\u8ff0\uff1a</p> <p>\u591a\u8def\u5f52\u5e76\u95ee\u9898\uff0c\u5c06\u591a\u4e2a\u6709\u5e8f\u7684\u8f93\u5165\u6d41\uff0c\u5408\u5e76\u6210\u4e00\u4e2a\u6709\u5e8f\u7684\u8f93\u51fa\u6d41\u3002</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> <p>\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u7d22\u5f15\u5806\u6765\u89e3\u51b3\u3002</p> <p>\u6bcf\u4e2a\u5806\u5143\u7d20\u8868\u793a\u4e00\u8def\u8f93\u5165\u6d41\uff0c\u5806\u9876\u5143\u7d20\u5c31\u662f\u5f53\u524d\u6700\u5c0f\u7684\u90a3\u4e00\u8def\u8f93\u5165\u6d41\u3002</p> <pre><code>// \u521b\u5efa\u4e00\u4e2a\u6700\u5c0f\u7d22\u5f15\u5806\uff08\u4f1a\u540c\u65f6\u8bb0\u5f55\u8f93\u5165\u6d41\u7684\u7d22\u5f15\u548c\u503c\uff09\nIndexHeap&lt;Integer&gt; indexHeap = new MinIndexHeap&lt;&gt;(n);\n\n// \u521d\u59cb\u5316\u591a\u8def\u6570\u636e\nfor (int i = 0; i &lt; n; i++) {\n    int num = ins[i].readInt();\n    indexHeap.insert(i, num);\n}\n\n// \u5bf9\u591a\u8def\u6570\u636e\u8fdb\u884c\u6392\u5e8f\nwhile (indexHeap.size() &gt; 0) {\n    // \u79fb\u9664\u5806\u9876\u8bb0\u5f55\uff0c\u8ffd\u52a0\u5230\u8f93\u51fa\u6d41\n    int index = indexHeap.firstIndex();\n    int num = indexHeap.removeFirst();\n    out.write(num);\n\n    // \u67d0\u4e00\u8def\u6570\u636e\u5df2\u7ecf\u8bfb\u5b8c\u4e86\n    if (ins[index] == null) {\n       continue;\n    }\n\n    // \u4ece\u88ab\u79fb\u9664\u7684\u90a3\u4e00\u8def\u8865\u5145\u6570\u636e\n    num = ins[index].readInt();\n    indexHeap.insert(index, num);\n}\n</code></pre> <p>\u5408\u5e76\u591a\u8def\u8f93\u5165\u6d41\u65f6\uff0c\u9700\u8981\u64cd\u4f5c\u975e\u5806\u9876\u7684\u5143\u7d20\u3002</p> <p>\u5982\u679c\u7528\u666e\u901a\u7684\u4e8c\u53c9\u5806\u5c31\u4e0d\u597d\u5b9e\u73b0\u4e86\uff0c\u800c\u7d22\u5f15\u5806\u5219\u6b63\u597d\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p>"},{"location":"ch06_heap/index_heap/#_6","title":"\u53c2\u8003","text":"<p>\u300a\u7b97\u6cd5\uff08\u7b2c4\u7248\uff09\u300b</p>"},{"location":"ch06_heap/index_heap/#_7","title":"\u9644\u5f55","text":""},{"location":"ch06_heap/index_heap/#_8","title":"\u7d22\u5f15\u5806\u63a5\u53e3","text":"<pre><code>/**\n * \u7d22\u5f15\u5806\u63a5\u53e3\n *\n * @author weijiaduo\n * @since 2023/2/25\n */\npublic interface IndexHeap&lt;T&gt; {\n\n    /**\n     * \u63d2\u5165\u65b0\u503c\n     *\n     * @param index \u6307\u5b9a\u7d22\u5f15\n     * @param val   \u65b0\u503c\n     */\n    void insert(int index, T val);\n\n    /**\n     * \u79fb\u9664\u7b2c\u4e00\u4e2a\u8282\u70b9\n     *\n     * @return \u7b2c\u4e00\u4e2a\u8282\u70b9\u503c\n     */\n    T removeFirst();\n\n    /**\n     * \u5220\u9664\u6307\u5b9a\u7d22\u5f15\u7684\u5143\u7d20\n     *\n     * @param index \u6307\u5b9a\u7d22\u5f15\n     * @return \u88ab\u5220\u9664\u5143\u7d20\n     */\n    T remove(int index);\n\n    /**\n     * @return \u7b2c\u4e00\u4e2a\u5143\u7d20\n     */\n    T first();\n\n    /**\n     * \u6839\u8282\u70b9\u5143\u7d20\u7684\u7d22\u5f15\n     *\n     * @return \u7d22\u5f15\n     */\n    int firstIndex();\n\n    /**\n     * \u6307\u5b9a\u7d22\u5f15\u7684\u5143\u7d20\u662f\u5426\u5b58\u5728\n     *\n     * @param index \u6307\u5b9a\u7d22\u5f15\n     * @return true/false\n     */\n    boolean containsIndex(int index);\n\n    /**\n     * @return \u5143\u7d20\u6570\u91cf\n     */\n    int size();\n\n}\n</code></pre>"},{"location":"ch06_heap/index_heap/#_9","title":"\u7d22\u5f15\u5806\u5b9e\u73b0","text":"<pre><code>/**\n * \u7d22\u5f15\u5806\n *\n * @author weijiaduo\n * @since 2023/2/25\n */\npublic class IndexHeapImpl&lt;T extends Comparable&lt;T&gt;&gt; implements IndexHeap&lt;T&gt; {\n\n    /**\n     * \u5143\u7d20\u6570\u7ec4\n     */\n    private final T[] elements;\n    /**\n     * \u5806\u6570\u7ec4\uff0c\u5806\u5143\u7d20 -&gt; \u5143\u7d20\u6570\u7ec4\u7d22\u5f15\n     * &lt;p&gt;\n     * \u53e6\u5916\uff0cheap[0] \u4e0d\u7528\n     */\n    private final int[] heap;\n    /**\n     * \u5143\u7d20\u6570\u7ec4\u7d22\u5f15 -&gt; \u5806\u6570\u7ec4\u7d22\u5f15\n     */\n    private final int[] idxMap;\n    /**\n     * \u5143\u7d20\u6bd4\u8f83\u5668\n     */\n    private final Comparator&lt;T&gt; cmp;\n    /**\n     * \u5143\u7d20\u6570\u91cf\n     */\n    private int size;\n\n    public IndexHeapImpl(int capacity) {\n        this(capacity, Comparator.reverseOrder());\n    }\n\n    public IndexHeapImpl(int capacity, Comparator&lt;T&gt; cmp) {\n        this.cmp = cmp;\n        //noinspection unchecked\n        elements = (T[]) new Comparable[capacity];\n        heap = new int[capacity + 1];\n        idxMap = new int[capacity];\n        Arrays.fill(heap, -1);\n        Arrays.fill(idxMap, -1);\n    }\n\n    @Override\n    public void insert(int idx, T val) {\n        if (idx &lt; 0 || idx &gt;= elements.length) {\n            throw new IllegalStateException(String.format(\"size: %d, index: %d\", elements.length, idx));\n        }\n\n        if (containsIndex(idx)) {\n            // \u66f4\u65b0\u5143\u7d20\n            elements[idx] = val;\n            int hp = idxMap[idx];\n            siftUp(hp);\n            siftDown(hp);\n        } else {\n            // \u63d2\u5165\u5143\u7d20\n            elements[idx] = val;\n            int hp = ++size;\n            heap[hp] = idx;\n            idxMap[idx] = hp;\n            siftUp(hp);\n        }\n    }\n\n    @Override\n    public T removeFirst() {\n        if (size &lt;= 0) {\n            throw new IllegalStateException(\"Heap isEmpty!\");\n        }\n\n        int hp = 1;\n        int idx = heap[hp];\n        T val = elements[idx];\n        swap(hp, size);\n        heap[size] = -1;\n        idxMap[idx] = -1;\n        elements[idx] = null;\n        size--;\n\n        siftDown(hp);\n        return val;\n    }\n\n    @Override\n    public T remove(int idx) {\n        if (!containsIndex(idx)) {\n            throw new IllegalStateException(String.format(\"size: %d, index: %d\", elements.length, idx));\n        }\n\n        int hp = idxMap[idx];\n        T val = elements[idx];\n        swap(hp, size);\n        heap[size] = -1;\n        idxMap[idx] = -1;\n        elements[idx] = null;\n        size--;\n\n        // \u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u65e0\u9700\u5904\u7406\n        if (hp &lt;= size) {\n            siftUp(hp);\n            siftDown(hp);\n        }\n        return val;\n    }\n\n    @Override\n    public T first() {\n        if (size &lt;= 0) {\n            throw new IllegalStateException(\"Heap isEmpty!\");\n        }\n        return elements[heap[1]];\n    }\n\n    @Override\n    public int firstIndex() {\n        if (size &lt;= 0) {\n            throw new IllegalStateException(\"Heap isEmpty!\");\n        }\n        return heap[1];\n    }\n\n    @Override\n    public boolean containsIndex(int idx) {\n        if (idx &lt; 0 || idx &gt;= elements.length) {\n            return false;\n        }\n        return idxMap[idx] != -1;\n    }\n\n    @Override\n    public int size() {\n        return size;\n    }\n\n    /**\n     * \u4ece\u4e0a\u5f80\u4e0b\u8c03\u6574\n     *\n     * @param hp \u5f53\u524d\u8282\u70b9\uff0c\u5806\u6570\u7ec4\u7d22\u5f15\n     */\n    private void siftDown(int hp) {\n        int i = hp;\n        while (i &lt; size) {\n            int m = i;\n            int l = left(i);\n            if (l &lt;= size &amp;&amp; prior(l, m)) {\n                m = l;\n            }\n            int r = right(i);\n            if (r &lt;= size &amp;&amp; prior(r, m)) {\n                m = r;\n            }\n            if (m == i) {\n                break;\n            }\n            swap(i, m);\n            i = m;\n        }\n    }\n\n    /**\n     * \u4ece\u4e0b\u5f80\u4e0a\u8c03\u6574\n     *\n     * @param hp \u5f53\u524d\u8282\u70b9\uff0c\u5806\u6570\u7ec4\u7d22\u5f15\n     */\n    private void siftUp(int hp) {\n        int i = hp;\n        while (i &gt; 1) {\n            int p = parent(i);\n            if (p &gt; 0 &amp;&amp; prior(i, p)) {\n                swap(i, p);\n                i = p;\n            } else {\n                break;\n            }\n        }\n    }\n\n    /**\n     * \u7236\u8282\u70b9\u7d22\u5f15\n     *\n     * @param hp \u5f53\u524d\u8282\u70b9\uff0c\u5806\u6570\u7ec4\u7d22\u5f15\n     * @return \u7236\u8282\u70b9\u7d22\u5f15\n     */\n    private int parent(int hp) {\n        return hp / 2;\n    }\n\n    /**\n     * \u5de6\u5b50\u8282\u70b9\u7d22\u5f15\n     *\n     * @param hp \u5f53\u524d\u8282\u70b9\uff0c\u5806\u6570\u7ec4\u7d22\u5f15\n     * @return \u5de6\u5b50\u8282\u70b9\u7d22\u5f15\n     */\n    private int left(int hp) {\n        return 2 * hp;\n    }\n\n    /**\n     * \u53f3\u5b50\u8282\u70b9\u7d22\u5f15\n     *\n     * @param hp \u5f53\u524d\u8282\u70b9\uff0c\u5806\u6570\u7ec4\u7d22\u5f15\n     * @return \u53f3\u5b50\u8282\u70b9\u7d22\u5f15\n     */\n    private int right(int hp) {\n        return 2 * hp + 1;\n    }\n\n    /**\n     * elements[heap[hp]] \u662f\u5426\u4f18\u5148\u4e8e elements[heap[hq]]\n     *\n     * @param hp \u5806\u6570\u7ec4\u7d22\u5f15 hp\n     * @param hq \u5806\u6570\u7ec4\u7d22\u5f15 hq\n     * @return true/false\n     */\n    private boolean prior(int hp, int hq) {\n        return cmp.compare(elements[heap[hp]], elements[heap[hq]]) &lt; 0;\n    }\n\n    /**\n     * \u4ea4\u6362 2 \u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\n     *\n     * @param hp \u5806\u6570\u7ec4\u7d22\u5f15 hp\n     * @param hq \u5806\u6570\u7ec4\u7d22\u5f15 hq\n     */\n    private void swap(int hp, int hq) {\n        if (hp == hq) {\n            return;\n        }\n        int t = heap[hp];\n        heap[hp] = heap[hq];\n        heap[hq] = t;\n        idxMap[heap[hp]] = hp;\n        idxMap[heap[hq]] = hq;\n    }\n\n    @Override\n    public String toString() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"[\");\n        for (int i = 1; i &lt;= size; i++) {\n            if (i &gt; 1) {\n                sb.append(\", \");\n            }\n            sb.append(\"(\")\n                    .append(heap[i])\n                    .append(\", \")\n                    .append(elements[heap[i]])\n                    .append(\")\");\n        }\n        sb.append(\"]\");\n        return sb.toString();\n    }\n\n}\n</code></pre>"},{"location":"ch06_heap/leftist_heap/","title":"\u5de6\u503e\u5806","text":""},{"location":"ch06_heap/leftist_heap/#_2","title":"\u4e00\u3001\u4ec0\u4e48\u662f\u5de6\u503e\u5806\uff1f","text":"<p>\u5de6\u503e\u5806\uff08Leftist Heap\uff09\uff0c\u4e5f\u79f0\u4e3a\u5de6\u504f\u6811\uff08Leftist Tree\uff09\u3001\u5de6\u504f\u5806\uff0c\u6700\u5de6\u5806\u7b49\u3002</p> <p>\u548c\u4e8c\u53c9\u5806\uff08\u5373\u5e38\u89c1\u7684\u5806\uff0c\u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0\u7684\u5b8c\u5168\u5806\uff09\u4e00\u6837\uff0c\u5de6\u503e\u5806\u4e5f\u662f\u4f18\u5148\u961f\u5217\u7684\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\u3002</p> <p>\u53ea\u4e0d\u8fc7\u5de6\u503e\u5806\u5177\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u6027\u8d28\uff1a</p> <ol> <li>\u5de6\u503e\u6027\uff1a\u5de6\u503e\u5806\u4e2d\u5de6\u5b50\u6811\u7684\u6df1\u5ea6\uff08\u6216\u9ad8\u5ea6\uff09\u90fd\u4e0d\u5c0f\u4e8e\u53f3\u5b50\u6811\u7684\u6df1\u5ea6</li> <li>\u6700\u5c0f\u5806\u6027\uff1a\u5de6\u503e\u5806\u901a\u5e38\u7528\u4e8e\u5b9e\u73b0\u6700\u5c0f\u5806\uff0c\u6240\u4ee5\u6839\u8282\u70b9\u901a\u5e38\u90fd\u662f\u6700\u5c0f\u503c</li> </ol> <p>\u4e3a\u4e86\u5b9e\u73b0\u5de6\u503e\u6027\uff0c\u5de6\u503e\u5806\u7684\u8282\u70b9\u90fd\u6709\u4e00\u4e2a NPL\uff08Null Path Length\uff09\u5c5e\u6027\uff1a</p> <ul> <li>NPL\uff1a\u8282\u70b9\u5230\u4e00\u4e2a\u201c\u6700\u8fd1\u7684\u4e0d\u6ee1\u8282\u70b9\u201d\u7684\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6\u3002\u7a7a\u8282\u70b9\u7684 NPL = -1</li> </ul> <p>\u5176\u4e2d\uff0c\u201c\u4e0d\u6ee1\u8282\u70b9\u201d\u662f\u6307\u5de6\u53f3\u5b50\u8282\u70b9\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u4e3a null \u7684\u8282\u70b9\u3002</p> <p>\u800c\u5de6\u503e\u5806\u7684\u7ed3\u6784\u4e2d\uff0c\u4e5f\u6709\u51e0\u4e2a\u57fa\u672c\u6027\u8d28\uff1a</p> <ol> <li>\u8282\u70b9\u7684\u952e\u503c &lt;= \u5b83\u7684\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u952e\u503c</li> <li>\u8282\u70b9\u7684\u5de6\u5b69\u5b50\u7684 NPL &gt;= \u8282\u70b9\u53f3\u5b69\u5b50\u7684 NPL</li> <li>\u8282\u70b9\u7684 NPL = \u5b83\u7684\u53f3\u5b69\u5b50\u7684 NPL + 1</li> </ol> <p>\u4e0b\u9762\u662f\u5de6\u503e\u5806\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <pre><code>        2(1)\n       /    \\\n    3(1)     4(0)\n   /    \\\n5(0)    7(0)\n       /     \n    9(0)\n</code></pre> <p>\u5176\u4e2d\uff0c\u62ec\u53f7\u4e2d\u7684\u6570\u5b57\u8868\u793a NPL\u3002</p> <p>\u50cf 4\uff0c5\uff0c7\uff0c9 \u8fd9\u51e0\u4e2a\u8282\u70b9\u90fd\u6709 null \u5b50\u8282\u70b9\uff0c\u6240\u4ee5\u5b83\u4eec\u7684 NPL \u90fd\u662f 0\u3002</p> <p>\u800c 2\uff0c3 \u7684 NPL \u5219\u7b49\u4e8e\u5b83\u4eec\u53f3\u5b69\u5b50\u7684 NPL + 1\u3002</p> <p>\u53e6\u5916\uff0c\u6709\u4e00\u70b9\u9700\u8981\u8bf4\u660e\u7684\u662f\uff1a\u6839\u8282\u70b9\u7684 NPL \u4e0d\u4e00\u5b9a\u6bd4\u5b50\u8282\u70b9\u7684\u5927\u3002</p>"},{"location":"ch06_heap/leftist_heap/#_3","title":"\u4e8c\u3001\u4e3a\u4ec0\u4e48\u7528\u5de6\u503e\u5806\uff1f","text":"<p>\u5de6\u503e\u5806\u548c\u4e8c\u53c9\u5806\u7684\u4f5c\u7528\u662f\u4e00\u6837\u7684\uff0c\u53ea\u662f\u5728\u7ed3\u6784\u4e0a\u6709\u6240\u533a\u522b\uff1a</p> <ul> <li>\u4e8c\u53c9\u5806\u662f\u7528\u6570\u7ec4\u5b9e\u73b0\uff0c\u5806\u7ed3\u6784\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811</li> <li>\u5de6\u503e\u5806\u662f\u7528\u6811\u5b9e\u73b0\uff0c\u7ed3\u6784\u5c31\u662f\u4e00\u68f5\u666e\u901a\u7684\u4e8c\u53c9\u6811</li> </ul> <p>\u4e8c\u53c9\u5806\u548c\u5de6\u503e\u5806\u90fd\u80fd\u7528\u4e8e\u4f18\u5148\u961f\u5217\u7684\u5b9e\u73b0\uff0c\u533a\u522b\u4e0d\u662f\u5f88\u5927\u3002</p> <ul> <li>\u4f46\u662f\u5728\u6d89\u53ca\u201c\u5408\u5e76\u64cd\u4f5c\u201d\u65f6\uff0c\u4e8c\u53c9\u5806\u7684\u6548\u7387\u4f1a\u6bd4\u8f83\u4f4e\uff0c\u800c\u5de6\u503e\u5806\u7684\u6027\u80fd\u66f4\u597d</li> <li>\u800c\u5de6\u503e\u5806\u4e5f\u6709\u81ea\u5df1\u7684\u7f3a\u70b9\uff0c\u5c31\u662f\u5728\u5220\u9664\u6700\u5c0f\u5143\u7d20\u64cd\u4f5c\u4e0a\u53ef\u80fd\u8868\u73b0\u7565\u5dee\u4e00\u4e9b</li> </ul> <p>\u6240\u4ee5\uff0c\u5de6\u503e\u5806\u9002\u7528\u4e8e\u67d0\u4e9b\u7279\u6b8a\u573a\u666f\u4e0b\uff0c\u7279\u522b\u662f\u9700\u8981\u9891\u7e41\u6267\u884c\u5408\u5e76\u64cd\u4f5c\u7684\u60c5\u51b5\u3002</p>"},{"location":"ch06_heap/leftist_heap/#_4","title":"\u4e09\u3001\u600e\u4e48\u5b9e\u73b0\u5de6\u503e\u5806\uff1f","text":"<p>\u5408\u5e76\u64cd\u4f5c\u662f\u5de6\u503e\u5806\u7684\u91cd\u70b9\uff0c\u5408\u5e76\u4e24\u4e2a\u5806\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u5982\u679c\u4e24\u4e2a\u5806\u4e2d\u6709\u4e00\u4e2a\u4e3a\u7a7a\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u53e6\u4e00\u4e2a\u5806</li> <li>\u5982\u679c\u4e24\u4e2a\u5806\u90fd\u4e0d\u4e3a\u7a7a\uff0c\u5219\u6bd4\u8f83\u4e24\u4e2a\u5806\u7684\u6839\u8282\u70b9\uff0c\u5c06\u8f83\u5c0f\u7684\u6839\u8282\u70b9\u4f5c\u4e3a\u65b0\u5806\u7684\u6839\u8282\u70b9</li> <li>\u5c06\u8f83\u5c0f\u6839\u8282\u70b9\u7684\u53f3\u5b50\u6811\u548c\u8f83\u5927\u6839\u8282\u70b9\u5408\u5e76\uff0c\u7136\u540e\u5c06\u5408\u5e76\u540e\u7684\u6811\u4f5c\u4e3a\u65b0\u5806\u7684\u53f3\u5b50\u6811</li> <li>\u5982\u679c\u65b0\u5806\u7684\u53f3\u5b50\u6811\u7684 NPL &gt; \u5de6\u5b50\u6811\u7684 NPL\uff0c\u5219\u4ea4\u6362\u5de6\u53f3\u5b50\u6811</li> <li>\u65b0\u5806\u7684 NPL = \u53f3\u5b50\u6811\u7684 NPL + 1</li> </ol> <p>\u6b65\u9aa4\u770b\u8d77\u6765\u633a\u591a\u7684\uff0c\u4f46\u662f\u5176\u5b9e\u903b\u8f91\u5f88\u7b80\u5355\uff0c\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>merge(h1, h2) {\n    // 1. \u8fd4\u56de\u975e\u7a7a\u5806\n    if (h1 == null) {\n        return h2;\n    }\n    if (h2 == null) {\n        return h1;\n    }\n\n    // 2. \u4ee5\u5c0f\u6839\u8282\u70b9\u4f5c\u4e3a\u65b0\u5806\u7684\u6839\u8282\u70b9\n    min = h1.val &lt; h2.val ? h1 : h2;\n    max = h1.val &gt; h2.val ? h1 : h2;\n\n    // 3. \u5c0f\u6839\u8282\u70b9\u7684\u53f3\u5b50\u8282\u70b9\u548c\u5927\u6839\u8282\u70b9\u5408\u5e76\n    min.right = merge(min.right, max);\n\n    // 4. \u4ea4\u6362\u5de6\u53f3\u5b50\u8282\u70b9\n    if (npl(min.right) &gt; npl(min.left)) {\n        swap(min.left, min.right);\n    }\n\n    // 5. \u6839\u8282\u70b9\u8ddd\u79bb = \u53f3\u5b50\u8282\u70b9\u8ddd\u79bb + 1\n    min.npl = npl(min.right) + 1;\n\n    return min;\n}\n</code></pre> <p>\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u5408\u5e76\u64cd\u4f5c\u7684\u4f8b\u5b50\uff1a</p> <pre><code>        \u58061                     \u58062\n\n        2(1)                   1(1)\n       /    \\                 /    \\\n    6(0)    4(0)           3(0)    5(0)\n</code></pre> <p>1\uff09\u9996\u5148\uff0c\u53d6\u5c0f\u6839\u8282\u70b9 1(1) \u4f5c\u4e3a\u65b0\u5806\u7684\u6839\u8282\u70b9\uff0c\u7136\u540e\u5408\u5e76\u5c0f\u6839\u53f3\u5b69\u5b50\u4e0e\u5927\u6839\u5806</p> <pre><code>        \u65b0\u58061                          \u5f85\u5408\u5e76\n\n        1(1)                      5(0)     2(1)     \n       /                                  /    \\\n    3(0)                               6(0)    4(0)\n</code></pre> <p>2\uff09\u540c\u6837\u5730\uff0c\u53d6\u5c0f\u6839\u8282\u70b9 2(1) \u4f5c\u4e3a\u65b0\u5806\u7684\u6839\u8282\u70b9\uff0c\u5408\u5e76\u5c0f\u6839\u53f3\u5b69\u5b50\u4e0e\u5927\u6839\u5806</p> <pre><code>        \u65b0\u58061       \u65b0\u58062              \u5f85\u5408\u5e76\n\n        1(1)        2(1)           5(0)    4(0)\n       /           /  \n    3(0)         6(0)\n</code></pre> <p>3\uff09\u540c\u4e0a\uff0c\u53d6\u5c0f\u6839\u8282\u70b9 4(0) \u4f5c\u4e3a\u65b0\u5806\u6839\u8282\u70b9\uff0c\u5408\u5e76\u5c0f\u6839\u53f3\u5b69\u5b50\uff08null \u8282\u70b9\uff09\u4e0e\u5927\u6839\u5806</p> <pre><code>        \u65b0\u58061       \u65b0\u58062        \u65b0\u58063\n\n        1(1)        2(1)        4(0)\n       /           /               \\\n    3(0)         6(0)              5(0)\n</code></pre> <p>4\uff09\u6b64\u65f6 <code>4</code> \u7684\u53f3\u5b69\u5b50 <code>5(0)</code> \u5927\u4e8e\u5de6\u5b69\u5b50 <code>NULL(-1)</code> \u7684 NPL\uff0c\u9700\u8981\u4ea4\u6362\u5de6\u53f3\u5b69\u5b50</p> <pre><code>        \u65b0\u58061       \u65b0\u58062        \u65b0\u58063\n\n        1(1)        2(1)        4(0)\n       /           /           /\n    3(0)         6(0)        5(0)\n</code></pre> <p>\u540c\u65f6\u66f4\u65b0 <code>4</code> \u7684 NPL = NPL(null) + 1 = -1 + 1 = 0\u3002</p> <p>5\uff09\u63a5\u7740\uff0c\u5b8c\u6210\u540e\u5f00\u59cb\u9012\u5f52\u5f80\u4e0a\u5408\u5e76\uff0c4 \u8fd4\u56de\u7ed9 2 \u7684\u53f3\u5b69\u5b50</p> <pre><code>        \u65b0\u58061       \u65b0\u58062\n\n        1(1)        2(1)\n       /           /    \\\n    3(0)         6(0)   4(0)\n                       /\n                    5(0)\n</code></pre> <p>\u7531\u4e8e <code>4(0)</code> \u5e76\u4e0d\u6bd4 <code>6(0)</code> \u7684 NPL \u5927\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u4ea4\u6362\u5de6\u53f3\u5b50\u8282\u70b9\u3002</p> <p>\u540c\u65f6\u66f4\u65b0 <code>2</code> \u7684 NPL = NPL(4) + 1 = 0 + 1 = 1\u3002</p> <p>6\uff09\u7ee7\u7eed\u5408\u5e76\u5b8c\u6210\u540e\u5f00\u59cb\u9012\u5f52\u5f80\u4e0a\uff0c2 \u8fd4\u56de\u7ed9 1 \u7684\u53f3\u5b69\u5b50</p> <pre><code>        \u65b0\u5806\n\n        1(1)\n       /    \\\n    3(0)    2(1)\n           /    \\\n        6(0)    4(0)\n               /\n            5(0)\n</code></pre> <p>7\uff09\u7531\u4e8e <code>2(1)</code> \u6bd4 <code>3(0)</code> \u7684 NPL \u5927\uff0c\u6240\u4ee5\u9700\u8981\u4ea4\u6362\u5de6\u53f3\u5b50\u8282\u70b9</p> <pre><code>        \u65b0\u5806\n\n        1(1)\n       /    \\\n    2(1)    3(0)\n   /    \\\n6(0)    4(0)\n       /\n    5(0)\n</code></pre> <p>\u540c\u65f6\u66f4\u65b0 <code>1</code> \u7684 NPL = NPL(3) + 1 = 0 + 1 = 1\u3002</p> <p>\u81f3\u6b64\uff0c\u5408\u5e76\u64cd\u4f5c\u5c31\u5b8c\u6210\u4e86\u3002</p> <p>\u81f3\u4e8e\u5176\u4ed6\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u5220\u9664\u548c\u63d2\u5165\uff0c\u5b9e\u9645\u4e0a\u90fd\u662f\u901a\u8fc7\u5408\u5e76\u64cd\u4f5c\u5b9e\u73b0\u7684\uff1a</p> <ol> <li>\u5220\u9664\u6700\u5c0f\u5143\u7d20\uff1a\u76f8\u5f53\u4e8e\u5220\u9664\u6839\u8282\u70b9\uff0c\u7136\u540e\u5408\u5e76\u5de6\u53f3\u5b50\u6811</li> <li>\u63d2\u5165\u65b0\u5143\u7d20\uff1a\u76f8\u5f53\u4e8e\u5c06\u65b0\u5143\u7d20\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684\u5de6\u503e\u5806\uff0c\u7136\u540e\u4e24\u4e2a\u5806\u5408\u5e76</li> </ol> <p>\u4e0b\u9762\u662f\u5b83\u4eec\u7684\u4f2a\u4ee3\u7801\uff1a</p> <pre><code>removeFirst() {\n    temp = root;\n    root = merge(root.left, root.right);\n    temp.left = temp.right = null;\n    return temp.val;\n}\n</code></pre> <pre><code>insert(val) {\n    root = merge(root, new Node&lt;&gt;(val));\n}\n</code></pre> <p>\u603b\u4f53\u6765\u8bf4\uff0c\u5de6\u503e\u5806\u7684\u5b9e\u73b0\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u3002</p>"},{"location":"ch06_heap/leftist_heap/#_5","title":"\u53c2\u8003","text":"<p>https://www.cnblogs.com/skywang12345/p/3638384.html</p>"},{"location":"ch06_heap/leftist_heap/#_6","title":"\u9644\u5f55","text":""},{"location":"ch06_heap/leftist_heap/#_7","title":"\u5de6\u503e\u5806\u63a5\u53e3","text":"<pre><code>/**\n * \u5de6\u503e\u5806\uff08Leftist Heap\uff09\n * &lt;p&gt;\n * \u57fa\u672c\u6027\u8d28\uff1a\n * &lt;p&gt;\n * 1. \u8282\u70b9\u7684\u952e\u503c\u5c0f\u4e8e\u6216\u7b49\u4e8e\u5b83\u7684\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u952e\u503c\n * &lt;p&gt;\n * 2. \u8282\u70b9\u7684\u5de6\u5b69\u5b50\u7684NPL &gt;= \u53f3\u5b69\u5b50\u7684NPL\n * &lt;p&gt;\n * 3. \u8282\u70b9\u7684NPL = \u5b83\u7684\u53f3\u5b69\u5b50\u7684NPL + 1\n *\n * @author weijiaduo\n * @since 2023/9/26\n */\npublic interface LeftistHeap&lt;T&gt; {\n\n    /**\n     * \u5408\u5e76\u53e6\u5916\u4e00\u4e2a\u5806\n     *\n     * @param other \u53e6\u5916\u4e00\u4e2a\u5806\n     */\n    void merge(LeftistHeap&lt;T&gt; other);\n\n    /**\n     * \u63d2\u5165\u65b0\u503c\n     *\n     * @param val \u65b0\u503c\n     */\n    void insert(T val);\n\n    /**\n     * \u79fb\u9664\u6839\u8282\u70b9\n     *\n     * @return \u6839\u8282\u70b9\u503c\n     */\n    T removeFirst();\n\n    /**\n     * \u6839\u8282\u70b9\u503c\n     *\n     * @return \u6839\u8282\u70b9\u503c\n     */\n    T first();\n\n    /**\n     * \u5806\u5927\u5c0f\n     *\n     * @return \u5806\u5927\u5c0f\n     */\n    int size();\n\n    /**\n     * \u662f\u5426\u4e3a\u7a7a\n     *\n     * @return true/false\n     */\n    boolean isEmpty();\n\n}\n</code></pre>"},{"location":"ch06_heap/leftist_heap/#_8","title":"\u5de6\u503e\u5806\u5b9e\u73b0","text":"<pre><code>/**\n * \u5de6\u503e\u5806\u8282\u70b9\n *\n * @author weijiaduo\n * @since 2023/9/26\n */\npublic class LeftistHeapNode&lt;T&gt; {\n\n    /**\n     * \u8282\u70b9\u503c\n     */\n    public T val;\n    /**\n     * \u96f6\u8ddd\u79bb\uff08Null Path Length\uff09\n     */\n    public int npl;\n    /**\n     * \u5de6\u5b50\u8282\u70b9\n     */\n    public LeftistHeapNode&lt;T&gt; left;\n    /**\n     * \u53f3\u5b50\u8282\u70b9\n     */\n    public LeftistHeapNode&lt;T&gt; right;\n\n    public LeftistHeapNode(T val) {\n        this.val = val;\n    }\n\n    @Override\n    public String toString() {\n        return val.toString() + \"(\" + npl + \")\";\n    }\n\n}\n</code></pre> <pre><code>/**\n * \u5de6\u503e\u5806\uff08Leftist Heap\uff09\u5b9e\u73b0\u7c7b\n * &lt;p&gt;\n * \u57fa\u672c\u6027\u8d28\uff1a\n * &lt;p&gt;\n * 1. \u8282\u70b9\u7684\u952e\u503c\u5c0f\u4e8e\u6216\u7b49\u4e8e\u5b83\u7684\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u952e\u503c\n * &lt;p&gt;\n * 2. \u8282\u70b9\u7684\u5de6\u5b69\u5b50\u7684NPL &gt;= \u53f3\u5b69\u5b50\u7684NPL\n * &lt;p&gt;\n * 3. \u8282\u70b9\u7684NPL = \u5b83\u7684\u53f3\u5b69\u5b50\u7684NPL + 1\n *\n * @author weijiaduo\n * @since 2023/9/26\n */\npublic class LeftistHeapImpl&lt;T extends Comparable&lt;T&gt;&gt; implements LeftistHeap&lt;T&gt; {\n\n    /**\n     * \u6839\u8282\u70b9\n     */\n    private LeftistHeapNode&lt;T&gt; root;\n\n    /**\n     * \u8282\u70b9\u6570\u91cf\n     */\n    private int size;\n\n    @Override\n    public void merge(LeftistHeap&lt;T&gt; other) {\n        if (!(other instanceof LeftistHeapImpl&lt;T&gt;)) {\n            return;\n        }\n\n        root = merge(root, ((LeftistHeapImpl&lt;T&gt;) other).root);\n        size += other.size();\n    }\n\n    @Override\n    public void insert(T val) {\n        root = merge(root, new LeftistHeapNode&lt;&gt;(val));\n        size++;\n    }\n\n    @Override\n    public T removeFirst() {\n        if (size &lt;= 0) {\n            throw new IllegalStateException(\"Heap is Empty!\");\n        }\n\n        LeftistHeapNode&lt;T&gt; node = root;\n        root = merge(root.left, root.right);\n        node.left = node.right = null;\n        size--;\n        return node.val;\n    }\n\n    @Override\n    public T first() {\n        if (size &lt;= 0) {\n            throw new IllegalStateException(\"Heap is Empty!\");\n        }\n\n        return root.val;\n    }\n\n    @Override\n    public int size() {\n        return size;\n    }\n\n    @Override\n    public boolean isEmpty() {\n        return size &lt;= 0;\n    }\n\n    /**\n     * \u5408\u5e76 2 \u4e2a\u5806\uff0c\u5e76\u8fd4\u56de\u65b0\u5806\u7684\u6839\u8282\u70b9\n     *\n     * @param h1 \u58061 \u6839\u8282\u70b9\n     * @param h2 \u58062 \u6839\u8282\u70b9\n     * @return \u65b0\u5806\u7684\u6839\u8282\u70b9\n     */\n    private LeftistHeapNode&lt;T&gt; merge(LeftistHeapNode&lt;T&gt; h1, LeftistHeapNode&lt;T&gt; h2) {\n        if (h1 == null) {\n            return h2;\n        }\n        if (h2 == null) {\n            return h1;\n        }\n\n        // \u4ee5\u5c0f\u6839\u8282\u70b9\u4f5c\u4e3a\u65b0\u5806\u7684\u6839\u8282\u70b9\n        LeftistHeapNode&lt;T&gt; min, max;\n        if (h1.val.compareTo(h2.val) &lt;= 0) {\n            min = h1;\n            max = h2;\n        } else {\n            min = h2;\n            max = h1;\n        }\n\n        // \u5c0f\u6839\u8282\u70b9\u7684\u53f3\u5b50\u8282\u70b9\u548c\u5927\u6839\u8282\u70b9\u5408\u5e76\n        min.right = merge(min.right, max);\n\n        // \u53f3\u5b50\u8282\u70b9\u8ddd\u79bb &gt; \u5de6\u5b50\u8282\u70b9\u8ddd\u79bb\uff0c\u4ea4\u6362\u5de6\u53f3\u5b50\u8282\u70b9\n        if (npl(min.right) &gt; npl(min.left)) {\n            LeftistHeapNode&lt;T&gt; tmp = min.left;\n            min.left = min.right;\n            min.right = tmp;\n        }\n\n        // \u6839\u8282\u70b9\u8ddd\u79bb = \u53f3\u5b50\u8282\u70b9\u8ddd\u79bb + 1\n        min.npl = npl(min.right) + 1;\n\n        return min;\n    }\n\n    /**\n     * \u8282\u70b9\u7684 NPL \u8ddd\u79bb\n     *\n     * @param node \u8282\u70b9\n     * @return NPL \u8ddd\u79bb\n     */\n    private int npl(LeftistHeapNode&lt;T&gt; node) {\n        // null \u8282\u70b9\u7684\u8ddd\u79bb\u4e3a -1\n        return node != null ? node.npl : -1;\n    }\n\n}\n</code></pre>"},{"location":"ch06_heap/skew_heap/","title":"\u659c\u5806","text":""},{"location":"ch06_heap/skew_heap/#_2","title":"\u4e00\u3001\u4ec0\u4e48\u662f\u659c\u5806\uff1f","text":"<p>\u659c\u5806\uff08Skew Heap\uff09\uff0c\u4e5f\u79f0\u659c\u6811\uff08Skew Tree\uff09\uff0c\u81ea\u9002\u5e94\u5806(Self-Adjusting Heap)\uff0c\u662f\u4e00\u79cd\u81ea\u5e73\u8861\u4e8c\u53c9\u5806\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u659c\u5806\u662f\u5de6\u503e\u5806\uff08Leftist Heap\uff09\u7684\u4e00\u4e2a\u53d8\u79cd\uff0c\u53ea\u662f\u659c\u5806\u7684\u8282\u70b9\u4e2d\u6ca1\u6709 NPL \u8fd9\u4e2a\u5c5e\u6027\u800c\u5df2\u3002</p> <p>\u659c\u5806\u7684\u4e3b\u8981\u7279\u70b9\u5305\u62ec\uff1a</p> <ul> <li>\u4e0d\u5e73\u8861\u6027\uff1a\u6574\u4f53\u662f\u4e0d\u5e73\u8861\u7684\uff0c\u5e76\u4e14\u5728\u4efb\u4f55\u64cd\u4f5c\u4e2d\u90fd\u4e0d\u4f1a\u663e\u5f0f\u6267\u884c\u65cb\u8f6c\u64cd\u4f5c\u6765\u7ef4\u6301\u5e73\u8861</li> <li>\u81ea\u5e73\u8861\u6027\uff1a\u6bcf\u6b21\u64cd\u4f5c\u540e\uff0c\u4ec5\u901a\u8fc7\u4e92\u6362\u5de6\u53f3\u5b50\u6811\u6765\u8c03\u6574\u7ed3\u6784\uff0c\u4ece\u800c\u8fbe\u5230\u81ea\u5e73\u8861\u7684\u6548\u679c</li> <li>\u7b80\u5355\u6027\uff1a\u56e0\u4e3a\u4e0d\u9700\u8981\u6267\u884c\u663e\u5f0f\u7684\u5e73\u8861\u64cd\u4f5c\uff0c\u6240\u4ee5\u5b9e\u73b0\u8d77\u6765\u76f8\u5bf9\u7b80\u5355</li> </ul> <p>\u659c\u5806\u6700\u4e3b\u8981\u7684\u7279\u70b9\u5c31\u662f\uff0c\u4e0d\u6267\u884c\u663e\u5f0f\u7684\u5e73\u8861\u64cd\u4f5c\uff0c\u800c\u662f\u901a\u8fc7\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\u6765\u7ef4\u62a4\u81ea\u5e73\u8861\u6027\u3002</p> <p>\u4e0b\u9762\u662f\u659c\u5806\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <pre><code>       1 \n      / \\\n     2   3\n    / \\\n   4   6\n  /\n 5\n</code></pre> <p>\u5355\u4ece\u7ed3\u6784\u4e0a\u770b\uff0c\u659c\u5806\u548c\u666e\u901a\u5806\u5dee\u4e0d\u591a\uff0c\u611f\u53d7\u4e0d\u5230\u533a\u522b\u3002</p> <p>\u4e0d\u8fc7\u5b9e\u9645\u4e0a\u5b83\u548c\u5de6\u503e\u5806\u662f\u7c7b\u4f3c\u7684\uff0c\u6574\u4f53\u7ed3\u6784\u5177\u6709\u5de6\u503e\u6027\u3002</p>"},{"location":"ch06_heap/skew_heap/#_3","title":"\u4e8c\u3001\u4e3a\u4ec0\u4e48\u7528\u659c\u5806\uff1f","text":"<p>\u659c\u5806\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u5177\u6709\u4e00\u4e9b\u7279\u5b9a\u7684\u5e94\u7528\u548c\u4f18\u70b9\uff1a</p> <ul> <li>\u5b9e\u73b0\u7b80\u5355\uff1a\u6ca1\u6709\u590d\u6742\u7684\u5e73\u8861\u64cd\u4f5c\uff0c\u5b9e\u73b0\u7b80\u5355</li> <li>\u5408\u5e76\u9ad8\u6548\uff1a\u5408\u5e76\u64cd\u4f5c\u975e\u5e38\u9ad8\u6548\uff0c\u6ca1\u6709\u989d\u5916\u7684\u5e73\u8861\u64cd\u4f5c\uff0c\u4ec5\u9700\u8981\u4e92\u6362\u5de6\u53f3\u5b50\u6811</li> <li>\u81ea\u9002\u5e94\u6027\uff1a\u7ecf\u5e38\u88ab\u8bbf\u95ee\u7684\u5143\u7d20\u4f1a\u88ab\u63d0\u5347\u5230\u6839\u8282\u70b9\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u5bf9\u8fd9\u4e9b\u5143\u7d20\u7684\u8bbf\u95ee\u901f\u5ea6</li> <li>\u7a7a\u95f4\u6548\u7387\uff1a\u8282\u70b9\u4e0d\u9700\u8981\u4fdd\u5b58\u989d\u5916\u7684\u5e73\u8861\u4fe1\u606f\uff0c\u6bd4\u5982 \u5de6\u503e\u5806\u3001AVL\u3001\u7ea2\u9ed1\u6811\u7b49</li> </ul> <p>\u5c3d\u7ba1\u659c\u5806\u5177\u6709\u4e0a\u8ff0\u4f18\u70b9\uff0c\u4f46\u5b83\u4e5f\u6709\u4e00\u4e9b\u7f3a\u70b9\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u6027\u80fd\u4e0d\u5982\u5176\u4ed6\u4e00\u4e9b\u5806\u7ed3\u6784\u3002</p> <p>\u659c\u5806\u901a\u5e38\u9002\u7528\u4e8e\u9700\u8981\u9ad8\u6548\u7684\u5408\u5e76\u64cd\u4f5c\u548c\u81ea\u9002\u5e94\u6027\u7684\u573a\u666f\uff0c\u4e14\u4e0d\u592a\u4f9d\u8d56\u6700\u574f\u60c5\u51b5\u6027\u80fd\u4fdd\u8bc1\u7684\u60c5\u51b5\u3002</p> <p>\u6bd4\u5982 Prim \u7b97\u6cd5\u3001Kruskal \u7b97\u6cd5\u3001\u4f18\u5148\u7ea7\u961f\u5217\u7b49\u9700\u8981\u9891\u7e41\u5408\u5e76\u64cd\u4f5c\u7684\u573a\u666f\u3002</p>"},{"location":"ch06_heap/skew_heap/#_4","title":"\u4e09\u3001\u600e\u4e48\u5b9e\u73b0\u659c\u5806\uff1f","text":"<p>\u5408\u5e76\u64cd\u4f5c\u662f\u659c\u5806\u7684\u91cd\u70b9\uff0c\u5408\u5e76\u4e24\u4e2a\u5806\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u5982\u679c\u4e24\u4e2a\u5806\u4e2d\u6709\u4e00\u4e2a\u4e3a\u7a7a\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u53e6\u4e00\u4e2a\u5806</li> <li>\u5982\u679c\u4e24\u4e2a\u5806\u90fd\u4e0d\u4e3a\u7a7a\uff0c\u5219\u6bd4\u8f83\u4e24\u4e2a\u5806\u7684\u6839\u8282\u70b9\uff0c\u5c06\u8f83\u5c0f\u7684\u6839\u8282\u70b9\u4f5c\u4e3a\u65b0\u5806\u7684\u6839\u8282\u70b9</li> <li>\u5c06\u8f83\u5c0f\u6839\u8282\u70b9\u7684\u53f3\u5b50\u6811\u548c\u8f83\u5927\u6839\u8282\u70b9\u5408\u5e76\uff0c\u7136\u540e\u5c06\u5408\u5e76\u540e\u7684\u6811\u4f5c\u4e3a\u65b0\u5806\u7684\u53f3\u5b50\u6811</li> <li>\u6700\u540e\u4ea4\u6362\u5de6\u53f3\u5b50\u6811</li> </ol> <p>\u5176\u5b9e\u548c\u5de6\u503e\u5806\u5dee\u4e0d\u591a\uff0c\u5c31\u662f\u5c11\u4e86 NPL \u5c5e\u6027\u5224\u65ad\u800c\u5df2\uff0c\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>merge(h1, h2) {\n    // 1. \u8fd4\u56de\u975e\u7a7a\u5806\n    if (h1 == null) {\n        return h2;\n    }\n    if (h2 == null) {\n        return h1;\n    }\n\n    // 2. \u4ee5\u5c0f\u6839\u8282\u70b9\u4f5c\u4e3a\u65b0\u5806\u7684\u6839\u8282\u70b9\n    min = h1.val &lt; h2.val ? h1 : h2;\n    max = h1.val &gt; h2.val ? h1 : h2;\n\n    // 3. \u5c0f\u6839\u8282\u70b9\u7684\u53f3\u5b50\u8282\u70b9\u548c\u5927\u6839\u8282\u70b9\u5408\u5e76\n    min.right = merge(min.right, max);\n\n    // 4. \u4ea4\u6362\u5de6\u53f3\u5b50\u8282\u70b9\n    swap(min.left, min.right);\n\n    return min;\n}\n</code></pre> <p>\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u5408\u5e76\u64cd\u4f5c\u7684\u4f8b\u5b50\uff1a</p> <pre><code>      \u58061              \u58062\n\n       2                1\n      / \\              / \\\n     6   4            3   5\n</code></pre> <p>1\uff09\u9996\u5148\uff0c\u53d6\u5c0f\u6839\u8282\u70b9 1 \u4f5c\u4e3a\u65b0\u5806\u7684\u6839\u8282\u70b9\uff0c\u7136\u540e\u5408\u5e76\u5c0f\u6839\u53f3\u5b69\u5b50\u4e0e\u5927\u6839\u5806</p> <pre><code>      \u65b0\u58061                     \u5f85\u5408\u5e76\n\n       1                       5      2     \n      /                              / \\\n     3                              6   4\n</code></pre> <p>2\uff09\u540c\u6837\u5730\uff0c\u53d6\u5c0f\u6839\u8282\u70b9 2 \u4f5c\u4e3a\u65b0\u5806\u7684\u6839\u8282\u70b9\uff0c\u5408\u5e76\u5c0f\u6839\u53f3\u5b69\u5b50\u4e0e\u5927\u6839\u5806</p> <pre><code>      \u65b0\u58061     \u65b0\u58062            \u5f85\u5408\u5e76\n\n       1         2             5      4\n      /         /  \n     3         6\n</code></pre> <p>3\uff09\u540c\u4e0a\uff0c\u53d6\u5c0f\u6839\u8282\u70b9 4 \u4f5c\u4e3a\u65b0\u5806\u6839\u8282\u70b9\uff0c\u5408\u5e76\u5c0f\u6839\u53f3\u5b69\u5b50\uff08null \u8282\u70b9\uff09\u4e0e\u5927\u6839\u5806</p> <pre><code>      \u65b0\u58061     \u65b0\u58062     \u65b0\u58063\n\n       1         2        4\n      /         /          \\\n     3         6            5\n</code></pre> <p>4\uff09\u63a5\u7740\u4ea4\u6362 4 \u7684\u5de6\u53f3\u5b69\u5b50</p> <pre><code>      \u65b0\u58061     \u65b0\u58062     \u65b0\u58063\n\n       1         2        4\n      /         /        /\n     3         6        5\n</code></pre> <p>5\uff09\u63a5\u7740\u5f00\u59cb\u9012\u5f52\u5f80\u4e0a\u5408\u5e76\uff0c4 \u8fd4\u56de\u7ed9 2 \u7684\u53f3\u5b69\u5b50</p> <pre><code>      \u65b0\u58061     \u65b0\u58062\n\n       1         2\n      /         / \\\n     3         6   4\n                  /\n                 5\n</code></pre> <p>6\uff09\u63a5\u7740\u4ea4\u6362 2 \u7684\u5de6\u53f3\u5b69\u5b50</p> <pre><code>      \u65b0\u58061     \u65b0\u58062\n\n       1         2\n      /         / \\\n     3         4   6\n              /\n             5\n</code></pre> <p>7\uff09\u7ee7\u7eed\u5f80\u4e0a\u5408\u5e76\uff0c2 \u8fd4\u56de\u7ed9 1 \u7684\u53f3\u5b69\u5b50</p> <pre><code>      \u65b0\u58061\n\n       1 \n      / \\\n     3   2\n        / \\\n       4   6\n      /\n     5\n</code></pre> <p>8\uff09\u63a5\u7740\u4ea4\u6362 1 \u7684\u5de6\u53f3\u5b69\u5b50</p> <pre><code>      \u65b0\u58061\n\n       1 \n      / \\\n     2   3\n    / \\\n   4   6\n  /\n 5\n</code></pre> <p>\u81f3\u6b64\uff0c\u5408\u5e76\u64cd\u4f5c\u5c31\u5b8c\u6210\u4e86\u3002</p> <p>\u81f3\u4e8e\u5176\u4ed6\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u5220\u9664\u548c\u63d2\u5165\uff0c\u5b9e\u9645\u4e0a\u90fd\u662f\u901a\u8fc7\u5408\u5e76\u64cd\u4f5c\u5b9e\u73b0\u7684\uff1a</p> <ol> <li>\u5220\u9664\u6700\u5c0f\u5143\u7d20\uff1a\u76f8\u5f53\u4e8e\u5220\u9664\u6839\u8282\u70b9\uff0c\u7136\u540e\u5408\u5e76\u5de6\u53f3\u5b50\u6811</li> <li>\u63d2\u5165\u65b0\u5143\u7d20\uff1a\u76f8\u5f53\u4e8e\u5c06\u65b0\u5143\u7d20\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684\u659c\u5806\uff0c\u7136\u540e\u4e24\u4e2a\u5806\u5408\u5e76</li> </ol> <p>\u4e0b\u9762\u662f\u5b83\u4eec\u7684\u4f2a\u4ee3\u7801\uff1a</p> <pre><code>removeFirst() {\n    temp = root;\n    root = merge(root.left, root.right);\n    temp.left = temp.right = null;\n    return temp.val;\n}\n</code></pre> <pre><code>insert(val) {\n    root = merge(root, new Node&lt;&gt;(val));\n}\n</code></pre> <p>\u603b\u7684\u6765\u8bf4\uff0c\u659c\u5806\u548c\u5de6\u503e\u5806\u5dee\u4e0d\u591a\uff0c\u5b9e\u73b0\u4e5f\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u3002</p>"},{"location":"ch06_heap/skew_heap/#_5","title":"\u53c2\u8003","text":"<p>https://www.cnblogs.com/skywang12345/p/3638552.html</p>"},{"location":"ch06_heap/skew_heap/#_6","title":"\u9644\u5f55","text":""},{"location":"ch06_heap/skew_heap/#_7","title":"\u659c\u5806\u63a5\u53e3","text":"<pre><code>/**\n * \u659c\u5806\uff08Skew Heap\uff09\n * &lt;p&gt;\n * \u5de6\u503e\u5806\uff08Leftist Heap\uff09\u7684\u53d8\u79cd\uff0c\u53ea\u662f\u659c\u5806\u6ca1\u6709 NPL \u8fd9\u4e2a\u5c5e\u6027\n *\n * @author weijiaduo\n * @since 2023/9/26\n */\npublic interface SkewHeap&lt;T&gt; {\n\n    /**\n     * \u5408\u5e76\u53e6\u5916\u4e00\u4e2a\u5806\n     *\n     * @param other \u53e6\u5916\u4e00\u4e2a\u5806\n     */\n    void merge(SkewHeap&lt;T&gt; other);\n\n    /**\n     * \u63d2\u5165\u65b0\u503c\n     *\n     * @param val \u65b0\u503c\n     */\n    void insert(T val);\n\n    /**\n     * \u79fb\u9664\u6839\u8282\u70b9\n     *\n     * @return \u6839\u8282\u70b9\u503c\n     */\n    T removeFirst();\n\n    /**\n     * \u6839\u8282\u70b9\u503c\n     *\n     * @return \u6839\u8282\u70b9\u503c\n     */\n    T first();\n\n    /**\n     * \u5806\u5927\u5c0f\n     *\n     * @return \u5806\u5927\u5c0f\n     */\n    int size();\n\n    /**\n     * \u662f\u5426\u4e3a\u7a7a\n     *\n     * @return true/false\n     */\n    boolean isEmpty();\n\n}\n</code></pre>"},{"location":"ch06_heap/skew_heap/#_8","title":"\u659c\u5806\u5b9e\u73b0","text":"<pre><code>/**\n * \u659c\u5806\uff08Skew Heap\uff09\u5b9e\u73b0\u7c7b\n * &lt;p&gt;\n * \u5de6\u503e\u5806\uff08Leftist Heap\uff09\u7684\u53d8\u79cd\uff0c\u53ea\u662f\u659c\u5806\u6ca1\u6709 NPL \u8fd9\u4e2a\u5c5e\u6027\n *\n * @author weijiaduo\n * @since 2023/9/26\n */\npublic class SkewHeapImpl&lt;T extends Comparable&lt;T&gt;&gt; implements SkewHeap&lt;T&gt; {\n\n    /**\n     * \u5806\u6839\u8282\u70b9\n     */\n    private SkewHeapNode&lt;T&gt; root;\n    /**\n     * \u8282\u70b9\u6570\u91cf\n     */\n    private int size;\n\n    @Override\n    public void merge(SkewHeap&lt;T&gt; other) {\n        if (!(other instanceof SkewHeapImpl&lt;T&gt;)) {\n            return;\n        }\n\n        root = merge(root, ((SkewHeapImpl&lt;T&gt;) other).root);\n        size += other.size();\n    }\n\n    @Override\n    public void insert(T val) {\n        root = merge(root, new SkewHeapNode&lt;&gt;(val));\n        size++;\n    }\n\n    @Override\n    public T removeFirst() {\n        if (size &lt;= 0) {\n            throw new IllegalStateException(\"Heap is Empty!\");\n        }\n\n        SkewHeapNode&lt;T&gt; node = root;\n        root = merge(root.left, root.right);\n        node.left = node.right = null;\n        size--;\n        return node.val;\n    }\n\n    @Override\n    public T first() {\n        if (size &lt;= 0) {\n            throw new IllegalStateException(\"Heap is Empty!\");\n        }\n\n        return root.val;\n    }\n\n    @Override\n    public int size() {\n        return size;\n    }\n\n    @Override\n    public boolean isEmpty() {\n        return size &lt;= 0;\n    }\n\n    /**\n     * \u5408\u5e76 2 \u4e2a\u5806\uff0c\u5e76\u8fd4\u56de\u65b0\u5806\u7684\u6839\u8282\u70b9\n     *\n     * @param h1 \u58061 \u6839\u8282\u70b9\n     * @param h2 \u58062 \u6839\u8282\u70b9\n     * @return \u65b0\u5806\u7684\u6839\u8282\u70b9\n     */\n    private SkewHeapNode&lt;T&gt; merge(SkewHeapNode&lt;T&gt; h1, SkewHeapNode&lt;T&gt; h2) {\n        if (h1 == null) {\n            return h2;\n        }\n        if (h2 == null) {\n            return h1;\n        }\n\n        // \u4ee5\u5c0f\u6839\u8282\u70b9\u4f5c\u4e3a\u65b0\u5806\u7684\u6839\u8282\u70b9\n        SkewHeapNode&lt;T&gt; min, max;\n        if (h1.val.compareTo(h2.val) &lt;= 0) {\n            min = h1;\n            max = h2;\n        } else {\n            min = h2;\n            max = h1;\n        }\n\n        // \u5c0f\u6839\u8282\u70b9\u7684\u53f3\u5b50\u8282\u70b9\u548c\u5927\u6839\u8282\u70b9\u5408\u5e76\n        min.right = merge(min.right, max);\n\n        // \u4ea4\u6362\u5de6\u53f3\u5b50\u8282\u70b9\n        SkewHeapNode&lt;T&gt; tmp = min.left;\n        min.left = min.right;\n        min.right = tmp;\n\n        return min;\n    }\n\n}\n</code></pre>"},{"location":"ch07_hash/","title":"\u54c8\u5e0c","text":""},{"location":"ch07_hash/hashtable/","title":"\u6563\u5217\u8868","text":""},{"location":"ch07_hash/hashtable/#_2","title":"\u4e00\u3001\u4ec0\u4e48\u662f\u6563\u5217\u8868\uff1f","text":""},{"location":"ch07_hash/hashtable/#11","title":"1.1 \u5b9a\u4e49","text":"<p>\u6563\u5217\u8868\uff08Hash Table\uff09\uff0c\u4e5f\u79f0\u4e3a\u54c8\u5e0c\u8868\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <ul> <li>\u6563\u5217\u8868\u662f\u4e00\u79cd\u80fd\u591f\u6839\u636e\u5173\u952e\u5b57\uff0c\u76f4\u63a5\u8bbf\u95ee\u5230\u503c\u7684\u6570\u636e\u7ed3\u6784</li> <li>\u6563\u5217\u8868\u5efa\u7acb\u4e86\u5173\u952e\u5b57\u548c\u5b58\u50a8\u5730\u5740\u4e4b\u95f4\u7684\u4e00\u79cd\u76f4\u63a5\u6620\u5c04\u5173\u7cfb</li> </ul> <p>\u5176\u4e2d\uff0c\u5173\u952e\u5b57\u79f0\u4e3a <code>Key</code>\uff0c\u5bf9\u5e94\u7684\u503c\u79f0\u4e3a <code>Value</code>\u3002</p> <p>\u56e0\u6b64\u6563\u5217\u8868\u4e5f\u53ef\u4ee5\u8bf4\u662f\uff1a</p> <ul> <li>\u5c06 <code>Key</code> \u76f4\u63a5\u300c\u6620\u5c04\u300d\u5230\u4e00\u5f20\u300c\u8bb0\u5f55\u8868\u300d\u4e0a\uff0c\u4ee5\u6b64\u627e\u5230 <code>Value</code> \u7684\u5730\u5740</li> </ul> <p>\u5176\u4e2d\uff0c\u300c\u6620\u5c04\u300d\u65b9\u5f0f\u79f0\u4e3a\u6563\u5217\u51fd\u6570\uff0c\u5b58\u50a8\u8bb0\u5f55\u7684\u8868\u5c31\u79f0\u4e3a\u54c8\u5e0c\u8868\u3002</p> <p>\u54c8\u5e0c\u8868\u7684\u6620\u5c04\u903b\u8f91\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>Key                    \u6563\u5217\u51fd\u6570                  \u6563\u5217\u8868\n\n                                                ________ \n                                      -------&gt; | value4 |\n                                      |         ________ \nkey1   ---------                      |        |        |\n               |                      |         ________ \nkey2   ---------                      -------&gt; | value1 |\n               |                      |         ________  \nkey3   --------------&gt;  hash(key)  ----------&gt; | value5 |\n               |                      |         ________\nkey4   ---------                      |        |        |\n               |                      |         ________\nkey5   ---------                      -------&gt; | value2 |\n                                      |         _________ \n                                      -------&gt; | value3 |\n</code></pre> <p>\u4e00\u822c\u6765\u8bf4\uff1a</p> <ul> <li>\u6563\u5217\u8868\u5e95\u5c42\u5b58\u50a8\u7ed3\u6784\u662f\u6570\u7ec4\uff0c\u6563\u5217\u51fd\u6570\u8d1f\u8d23\u5c06 <code>Key</code> \u6620\u5c04\u5230\u6570\u7ec4\u7d22\u5f15\uff0c\u5373 <code>Value</code> \u5730\u5740</li> </ul> <p>\u6620\u5c04\u7684\u5730\u5740\uff0c\u53d6\u51b3\u4e8e\u6563\u5217\u51fd\u6570\uff0c\u4e0d\u540c\u6563\u5217\u51fd\u6570\u53ef\u80fd\u4f1a\u4e0d\u4e00\u6837\u3002</p>"},{"location":"ch07_hash/hashtable/#12","title":"1.2 \u7ed3\u6784","text":"<p>\u5e38\u89c1\u7684\u6563\u5217\u8868\u7ed3\u6784\uff08\u6570\u7ec4 + \u94fe\u8868\uff09\u5982\u4e0b\uff1a</p> <pre><code>\u7d22\u5f15   \u6570\u7ec4\n       ___ \n 0    |   |\n       ___        ___        ____\n 1    | 8 | ---&gt; | 1 | ---&gt; | 22 |\n       ___ \n 2    | 9 |\n       ___        ____ \n 3    | 3 | ---&gt; | 17 |\n       ___        ____        ____        ____ \n 4    | 4 | ---&gt; | 32 | ---&gt; | 18 | ---&gt; | 46 |\n       ___\n 5    |   |\n       ___ \n 6    | 6 |\n</code></pre> <p>\u8fd9\u91cc\u7684\u6563\u5217\u51fd\u6570\u662f\u53d6\u4f59 <code>key % 7</code>\uff0c\u4f8b\u5982 <code>22 % 7 = 1</code>\uff0c\u90a3\u4e48 <code>22</code> \u5c31\u653e\u5728\u4e86\u6570\u7ec4\u7d22\u5f15\u4e3a <code>1</code> \u7684\u4f4d\u7f6e\u4e0a\u3002</p>"},{"location":"ch07_hash/hashtable/#13","title":"1.3 \u4f8b\u5b50","text":"<p>\u4e3e\u4e2a\u66f4\u5177\u4f53\u7684\u4f8b\u5b50\u6765\u8bf4\uff0c\u624b\u673a\u901a\u8baf\u5f55\u4e2d\uff0c\u8054\u7cfb\u4eba\u662f\u6309\u7167\u62fc\u97f3\u7684\u9996\u5b57\u6bcd\u6392\u5e8f\u7684\uff0c\u6682\u8bb0\u4e3a\u901a\u8baf\u5f55 <code>[A - Z]</code>\u3002</p> <p>\u5047\u5982\u8981\u627e\u5f20\u4e09\uff0c\u5176\u9996\u5b57\u6bcd\u662f <code>Z</code>\uff0c\u90a3\u4e48\u5c31\u80fd\u76f4\u63a5\u5b9a\u4f4d\u5230\u901a\u8baf\u5f55\u4e2d\u4ee5 <code>Z</code> \u5f00\u5934\u7684\u5730\u65b9\uff0c\u518d\u5f00\u59cb\u67e5\u627e\u3002</p> <p>\u901a\u8baf\u5f55 <code>[A - Z]</code> \u5b9e\u9645\u4e0a\u5c31\u662f\u6563\u5217\u8868\uff0c\u5c06\u5173\u952e\u5b57\uff08\u5f20\u4e09\uff09\uff0c\u6620\u5c04\u5230\u5730\u5740\uff08<code>Z</code>\uff09\u3002</p>"},{"location":"ch07_hash/hashtable/#_3","title":"\u4e8c\u3001\u4e3a\u4ec0\u4e48\u8981\u7528\u6563\u5217\u8868\uff1f","text":"<p>\u67e5\u627e\u65f6\uff0c\u4e00\u822c\u90fd\u662f\u57fa\u4e8e\u300c\u6bd4\u8f83\u300d\u5b9e\u73b0\u7684\uff0c\u6bd4\u5982\u6570\u7ec4\u3001\u94fe\u8868\u3001\u6811\u7b49\uff0c\u90fd\u662f\u904d\u5386\u6570\u636e\u9010\u4e2a\u300c\u6bd4\u8f83\u300d\uff0c\u76f4\u5230\u627e\u5230\u76ee\u6807\u4e3a\u6b62\u3002</p> <ul> <li>\u5bf9\u4e8e\u8fd9\u4e9b\u57fa\u4e8e\u300c\u6bd4\u8f83\u300d\u7684\u6570\u636e\u7ed3\u6784\uff0c\u67e5\u627e\u6548\u7387\u53d6\u51b3\u4e8e\u300c\u6bd4\u8f83\u300d\u6b21\u6570\uff0c\u6570\u636e\u91cf\u8d8a\u5927\uff0c\u6027\u80fd\u5c31\u4f1a\u8d8a\u5dee</li> </ul> <p>\u56e0\u4e3a\u6570\u636e\u91cf\u53d8\u5927\u4f1a\u5bfc\u81f4\u300c\u6bd4\u8f83\u300d\u6b21\u6570\u53d8\u591a\uff0c\u603b\u8017\u65f6\u5c31\u4f1a\u53d8\u957f\uff0c\u6240\u4ee5\u6563\u5217\u8868\u91c7\u7528\u4e86\u53e6\u5916\u4e00\u79cd\u65b9\u5f0f\u6765\u5b9e\u73b0\u67e5\u627e\uff1a</p> <ul> <li>\u6563\u5217\u8868\u4e0d\u662f\u57fa\u4e8e\u300c\u6bd4\u8f83\u300d\u5b9e\u73b0\u7684\uff0c\u800c\u662f\u5c06\u952e\u76f4\u63a5\u300c\u6620\u5c04\u300d\u5230\u6570\u636e\u5730\u5740\u4e0a</li> </ul> <p>\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6563\u5217\u8868\u7684\u67e5\u627e\u6027\u80fd\u4e0e\u6570\u636e\u91cf\u65e0\u5173\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u6570\u636e\u91cf\u53d8\u5927\u800c\u5bfc\u81f4\u6027\u80fd\u964d\u4f4e\uff0c\u56e0\u6b64\uff0c</p> <ul> <li>\u6563\u5217\u8868\u7684\u4e00\u4e2a\u4e3b\u8981\u4f5c\u7528\u5c31\u662f\uff0c\u89e3\u51b3\u5927\u6570\u636e\u91cf\u60c5\u51b5\u4e0b\uff0c\u5feb\u901f\u5b9a\u4f4d\u503c\u7684\u95ee\u9898</li> </ul> <p>\u6563\u5217\u8868\u5e26\u6765\u7684\u6027\u80fd\u63d0\u5347\uff0c\u4e0d\u662f\u51ed\u7a7a\u5f97\u6765\u7684\uff0c\u800c\u662f\u4e00\u79cd\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002</p>"},{"location":"ch07_hash/hashtable/#_4","title":"\u4e09\u3001\u5982\u4f55\u5b9e\u73b0\u6563\u5217\u8868\uff1f","text":""},{"location":"ch07_hash/hashtable/#31","title":"3.1 \u5feb\u901f\u5730\u5740\u8bbf\u95ee","text":"<p>\u6563\u5217\u8868\u662f\u901a\u8fc7 <code>Key</code> \u5f97\u5230 <code>Value</code> \u5730\u5740\u540e\uff0c\u8bbf\u95ee\u5730\u5740\u624d\u80fd\u62ff\u5230\u6570\u636e\u3002</p> <p>\u6bd4\u5982\uff0c<code>Key = 22</code> \u901a\u8fc7\u8ba1\u7b97\u5f97\u5230\u4e86\u7d22\u5f15\u5730\u5740 <code>22 % 7 = 1</code>\uff0c\u4f46\u662f <code>1</code> \u53ea\u662f\u7d22\u5f15\u5730\u5740\uff0c\u4e0d\u662f\u6570\u636e\uff0c\u771f\u6b63\u7684\u6570\u636e\u662f <code>arr[1]</code>\u3002</p> <p>\u90a3\u4e48\u5982\u679c\u4e0d\u80fd\u901a\u8fc7\u5730\u5740\u5feb\u901f\u8bbf\u95ee\u5230\u6570\u636e\uff0c\u90a3\u6563\u5217\u8868\u5c31\u6ca1\u6709\u610f\u4e49\u4e86\uff0c\u6240\u4ee5\u6709\u4e00\u4e2a\u57fa\u672c\u8981\u6c42\u5fc5\u987b\u8981\u6ee1\u8db3\uff1a</p> <ul> <li>\u6563\u5217\u8868\u7684\u5b9e\u73b0\uff0c\u5fc5\u987b\u80fd\u901a\u8fc7\u6620\u5c04\u5730\u5740\u5feb\u901f\u5b9a\u4f4d\u5230\u5bf9\u5e94\u7684\u6570\u636e</li> </ul> <p>\u800c\u6570\u7ec4\u521a\u597d\u652f\u6301\u901a\u8fc7\u7d22\u5f15\u8fdb\u884c\u968f\u673a\u8bbf\u95ee\uff0c\u63d0\u4f9b\u4e86\u5feb\u901f\u8bbf\u95ee\u5730\u5740\u6570\u636e\u7684\u624b\u6bb5\uff0c\u6240\u4ee5\u624d\u4f1a\u6709\uff1a</p> <ul> <li>\u6563\u5217\u8868\u57fa\u672c\u90fd\u662f\u901a\u8fc7\u6570\u7ec4\u5b9e\u73b0\u7684\uff0c\u8fd9\u5b9e\u9645\u4e0a\u662f\u5229\u7528\u4e86\u6570\u7ec4\u7684\u968f\u673a\u8bbf\u95ee\u7279\u6027</li> </ul> <p>\u5f53\u7136\uff0c\u53ea\u8981\u662f\u80fd\u591f\u5feb\u901f\u8bbf\u95ee\u5730\u5740\u7684\u6570\u636e\u7ed3\u6784\uff0c\u90fd\u53ef\u4ee5\u7528\u5230\u6563\u5217\u8868\u91cc\uff0c\u4e0d\u4e00\u5b9a\u662f\u6570\u7ec4\uff0c\u53ea\u662f\u6570\u7ec4\u521a\u597d\u6ee1\u8db3\u8981\u6c42\u4e86\u800c\u5df2\u3002</p>"},{"location":"ch07_hash/hashtable/#32","title":"3.2 \u6563\u5217\u8bbe\u8ba1","text":"<p>\u6563\u5217\u5c31\u662f\u5c06\u5173\u952e\u5b57\u6620\u5c04\u5230\u5730\u5740\uff0c\u6240\u4ee5\u6563\u5217\u7684\u8bbe\u8ba1\u81f3\u5173\u91cd\u8981\uff0c\u5b83\u6709\u4e00\u4e9b\u57fa\u672c\u8981\u6c42\uff1a</p> <ul> <li>\u6563\u5217\u5fc5\u987b\u80fd\u591f\u6620\u5c04\u6240\u6709\u53ef\u80fd\u7684\u5173\u952e\u5b57</li> <li>\u6563\u5217\u5bf9\u4e8e\u540c\u4e00\u4e2a\u5173\u952e\u5b57\uff0c\u6620\u5c04\u5730\u5740\u5e94\u8be5\u4fdd\u6301\u4e00\u81f4</li> <li>\u6563\u5217\u5e94\u8be5\u5c3d\u53ef\u80fd\u7684\u628a\u6620\u5c04\u5730\u5740\u5747\u5300\u5206\u5e03\u5f00\u6765</li> <li>\u6563\u5217\u5e94\u8be5\u5c3d\u91cf\u7b80\u5355\uff0c\u80fd\u591f\u77ed\u65f6\u95f4\u8ba1\u7b97\u51fa\u6765</li> </ul> <p>\u8fd9\u662f\u6563\u5217\u7684\u51e0\u4e2a\u57fa\u672c\u8981\u6c42\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u6709\uff1a</p> <ul> <li>\u6563\u5217\u8bbe\u8ba1\u8fd8\u8981\u5305\u62ec\u6563\u5217\u51b2\u7a81\u7684\u89e3\u51b3\u7b56\u7565</li> </ul>"},{"location":"ch07_hash/hashtable/#33","title":"3.3 \u6563\u5217\u51b2\u7a81","text":"<p>\u6563\u5217\u662f\u5c06\u5173\u952e\u5b57\u6620\u5c04\u5230\u5730\u5740\uff0c\u800c\u5730\u5740\u5c31\u662f\u6570\u7ec4\u7684\u7d22\u5f15\uff0c\u8fd9\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff1a\u4e0d\u540c\u5173\u952e\u5b57\u6620\u5c04\u7684\u7d22\u5f15\u5730\u5740\u53ef\u80fd\u4e00\u6837\u3002</p> <ul> <li>\u56e0\u4e3a\u6570\u7ec4\u7a7a\u95f4\u662f\u6709\u9650\u7684\uff0c\u800c\u5173\u952e\u5b57\u53ef\u80fd\u662f\u65e0\u9650\u7684\uff0c\u6240\u4ee5\u4e0d\u7ba1\u600e\u4e48\u8bbe\u8ba1\u6563\u5217\u6620\u5c04\uff0c\u90fd\u4e0d\u53ef\u907f\u514d\u7684\u4f1a\u51fa\u73b0\u51b2\u7a81</li> </ul> <p>\u6240\u4ee5\uff0c\u8981\u6c42\u6563\u5217\u8bbe\u8ba1\u7684\u65f6\u5019\uff0c\u8981\u540c\u65f6\u8003\u8651\uff1a\u6563\u5217\u51b2\u7a81\u4e86\u600e\u4e48\u89e3\u51b3\uff1f</p> <p>\u6563\u5217\u51b2\u7a81\u7684\u5904\u7406\u6709\u591a\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u89c6\u5b9e\u9645\u60c5\u51b5\u9009\u62e9\u3002</p>"},{"location":"ch07_hash/hashtable/#34","title":"3.4 \u8d1f\u8f7d\u6269\u5bb9","text":"<p>\u5f53\u6570\u7ec4\u5185\u7684\u7a7a\u95f4\u57fa\u672c\u90fd\u7528\u5b8c\u65f6\uff0c\u6563\u5217\u51b2\u7a81\u7684\u6982\u7387\u4f1a\u975e\u5e38\u9ad8\u3002\u8fd9\u4e2a\u65f6\u5019\u8981\u600e\u4e48\u529e\uff1f</p> <ul> <li>\u7a7a\u95f4\u4e0d\u8db3\u65f6\uff0c\u5c31\u9700\u8981\u5bf9\u6563\u5217\u8868\u7684\u6570\u7ec4\u8fdb\u884c\u6269\u5bb9</li> </ul> <p>\u90a3\u4ec0\u4e48\u65f6\u5019\u8fdb\u884c\u6269\u5bb9\u5462\uff1f\u7b49\u5230\u6570\u7ec4\u7a7a\u95f4\u7528\u5b8c\u5417\uff1f\u90a3\u4e2a\u65f6\u5019\u5df2\u7ecf\u592a\u665a\u4e86\uff0c\u4e00\u822c\u662f\u5728\u6570\u7ec4\u7a7a\u95f4\u5927\u90e8\u5206\u90fd\u88ab\u5360\u7528\u65f6\u5c31\u5f00\u59cb\u6269\u5bb9\u3002</p> <p>\u5982\u4f55\u5224\u65ad\u7a7a\u95f4\u88ab\u5360\u7528\u4e86\u5927\u90e8\u5206\uff1f\u4e00\u822c\u662f\u4f7f\u7528\u8d1f\u8f7d\u56e0\u5b50\u6765\u5224\u65ad\u7a7a\u95f4\u7684\u5360\u7528\u6bd4\u4f8b\uff1a</p> <ul> <li><code>\u8d1f\u8f7d\u56e0\u5b50 = \u6563\u5217\u8868\u4e2d\u7684\u5143\u7d20 / \u6563\u5217\u8868\u7684\u6570\u7ec4\u5927\u5c0f</code>\uff0c\u8d1f\u8f7d\u56e0\u5b50\u8d8a\u5927\uff0c\u8868\u793a\u7a7a\u95f4\u5360\u7528\u6bd4\u4f8b\u8d8a\u9ad8</li> </ul> <p>\u4f8b\u5982\uff0c\u6563\u5217\u8868\u6570\u7ec4\u5927\u5c0f\u662f 10\uff0c\u5143\u7d20\u6570\u91cf\u662f 7\uff0c\u90a3\u4e48\u8d1f\u8f7d\u56e0\u5b50\u5c31\u662f <code>7 / 10 = 0.7</code>\uff0c\u8868\u793a\u5927\u7ea6\u6709 70% \u7684\u7a7a\u95f4\u5df2\u7ecf\u88ab\u5360\u7528\u4e86\u3002</p> <p>\u6240\u4ee5\uff0c\u4e00\u822c\u662f\u6839\u636e\u8d1f\u8f7d\u56e0\u5b50\u6765\u5224\u65ad\u662f\u5426\u8981\u6570\u7ec4\u6269\u5bb9\uff1a</p> <ul> <li>\u5f53\u8d1f\u8f7d\u56e0\u5b50\u8fbe\u5230\u67d0\u4e2a\u9608\u503c\u65f6\uff0c\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u7a7a\u95f4\u4e0d\u8db3\uff0c\u9700\u8981\u5bf9\u6570\u7ec4\u6269\u5bb9\u4e86</li> </ul>"},{"location":"ch07_hash/hashtable/#_5","title":"\u56db\u3001\u6563\u5217\u51fd\u6570\u6784\u9020","text":"<p>\u6563\u5217\u51fd\u6570\uff0c\u5c31\u662f\u5c06\u5173\u952e\u5b57\u6620\u5c04\u5230\u5730\u5740\u7684\u51fd\u6570\u3002\u53ef\u4ee5\u8bb0\u4e3a\uff1a</p> <pre><code>Hash(key) = Addr\n</code></pre> <p>\u6563\u5217\u51fd\u6570\u7684\u6784\u9020\u8981\u6c42\uff0c\u9075\u5faa\u7684\u5c31\u662f\u6563\u5217\u8bbe\u8ba1\u7684\u8981\u6c42\u3002</p> <p>\u5e38\u89c1\u7684\u6563\u5217\u51fd\u6570\u6709\uff1a</p>"},{"location":"ch07_hash/hashtable/#41","title":"4.1 \u76f4\u63a5\u5b9a\u5740\u6cd5","text":"<p>\u76f4\u63a5\u53d6\u5173\u952e\u5b57\u7684\u67d0\u4e2a\u7ebf\u6027\u51fd\u6570\u503c\uff0c\u4f5c\u4e3a\u6563\u5217\u5730\u5740\u3002</p> <pre><code>H(key) = a * key + b\n</code></pre> <p>\u7ebf\u6027\u6620\u5c04\u4e0d\u4f1a\u9020\u6210\u6563\u5217\u51b2\u7a81\uff0c\u9002\u5408\u5173\u952e\u5b57\u8fde\u7eed\u7684\u60c5\u51b5\u3002</p> <p>\u82e5\u662f\u5173\u952e\u5b57\u4e0d\u8fde\u7eed\uff0c\u5219\u4f1a\u5bfc\u81f4\u7a7a\u4f4d\u8f83\u591a\uff0c\u6d6a\u8d39\u7a7a\u95f4\u3002</p>"},{"location":"ch07_hash/hashtable/#42","title":"4.2 \u9664\u7559\u4f59\u6570\u6cd5","text":"<p>\u53d6\u5173\u952e\u5b57\u88ab\u67d0\u4e2a\u4e0d\u5927\u4e8e\u6563\u5217\u8868\u8868\u957f m \u7684\u6570 p \u9664\u540e\u6240\u5f97\u7684\u4f59\u6570\u4e3a\u6563\u5217\u5730\u5740\u3002</p> <pre><code>H(key) = key % p\n</code></pre> <p>\u5176\u4e2d <code>q &lt; m</code>\u3002</p> <p>\u8fd9\u79cd\u65b9\u5f0f\u7b80\u5355\uff0c\u6700\u5e38\u7528\uff0c\u4f46\u662f\u56e0\u4e3a\u5bf9\u6570\u6570\u503c\u53d6\u4f59\u7684\u539f\u56e0\uff0c\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u6563\u5217\u51b2\u7a81\u3002</p> <p>\u5173\u952e\u5728\u4e8e\u9009\u597d p\uff0c\u4e0d\u540c\u7684 p \u5bf9\u7a7a\u95f4\u7684\u5229\u7528\u662f\u4e0d\u540c\u7684\u3002</p>"},{"location":"ch07_hash/hashtable/#43","title":"4.3 \u6570\u5b57\u5206\u6790\u6cd5","text":"<p>\u53d6\u6570\u7801\u5206\u5e03\u8f83\u4e3a\u5747\u5300\u7684\u82e5\u5e72\u4f4d\u4f5c\u4e3a\u6563\u5217\u5730\u5740\u3002</p> <pre><code>H(key) = key &amp; mask\n</code></pre> <p>\u6bd4\u5982\u8bf4\u5173\u952e\u5b57\u662f 10 \u4f4d\u6570\uff0c\u7c7b\u4f3c\u8fd9\u6837\u7684\uff1a</p> <pre><code>1001234567\n1002345678\n1003456789\n</code></pre> <p>\u5173\u952e\u5b57\u4e2d\u6709\u4e9b\u6570\u4f4d\u7684\u7801\u5b57\u662f\u5206\u5e03\u4e0d\u5747\u5300\u7684\uff0c\u6bd4\u5982\u524d 3 \u4f4d <code>100</code> \u90fd\u662f\u4e00\u6837\u7684\u3002</p> <p>\u8fd9\u4e2a\u65f6\u5019\u5c31\u4e0d\u8981\u7528 <code>100</code> \u4f5c\u4e3a\u6563\u5217\u5730\u5740\u4e86\uff0c\u56e0\u4e3a\u5f88\u5bb9\u6613\u5c31\u6563\u5217\u51b2\u7a81\u4e86\u3002</p> <p>\u5e94\u8be5\u53d6\u6bd4\u8f83\u5747\u5300\u7684\u5176\u4ed6\u6570\u4f4d\u4f5c\u4e3a\u6563\u5217\u5730\u5740\uff0c\u6bd4\u5982\u8fd9\u91cc\u7684\u540e 7 \u4f4d\u3002</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u9002\u5408\u5173\u952e\u5b57\u96c6\u5408\u5df2\u77e5\u7684\u60c5\u51b5\uff0c\u5982\u679c\u5173\u952e\u5b57\u7684\u5206\u5e03\u60c5\u51b5\u53d8\u4e86\uff0c\u6563\u5217\u51fd\u6570\u4e5f\u9700\u8981\u91cd\u65b0\u6784\u9020\u3002</p>"},{"location":"ch07_hash/hashtable/#44","title":"4.4 \u5e73\u65b9\u53d6\u4e2d\u6cd5","text":"<p>\u53d6\u5173\u952e\u5b57\u7684\u5e73\u65b9\u503c\u7684\u4e2d\u95f4\u51e0\u4f4d\u4f5c\u4e3a\u6563\u5217\u5730\u5740\u3002</p> <pre><code>H(key) = (key * key) &amp; mask\n</code></pre> <p>\u5177\u4f53\u53d6\u591a\u5c11\u4f4d\uff0c\u89c6\u60c5\u51b5\u800c\u5b9a\u3002</p> <p>\u9002\u7528\u4e8e\u5173\u952e\u5b57\u6bcf\u4e00\u4f4d\u53d6\u503c\u90fd\u4e0d\u591f\u5747\u5300\uff0c\u6216\u8005\u5c0f\u4e8e\u6563\u5217\u5730\u5740\u6240\u9700\u4f4d\u6570\u7684\u60c5\u51b5\u3002</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u5f97\u5230\u7684\u6563\u5217\u5730\u5740\u4e0e\u5173\u952e\u5b57\u7684\u6bcf\u4e00\u4f4d\u90fd\u6709\u5173\u7cfb\uff0c\u4f7f\u5f97\u6563\u5217\u5730\u5740\u5206\u5e03\u6bd4\u8f83\u5747\u5300\u3002</p>"},{"location":"ch07_hash/hashtable/#45","title":"4.5 \u6298\u53e0\u6cd5","text":"<p>\u5c06\u5173\u952e\u5b57\u5206\u5272\u6210\u4f4d\u6570\u76f8\u540c\u7684\u51e0\u90e8\u5206\uff0c\u7136\u540e\u53d6\u8fd9\u51e0\u90e8\u5206\u7684\u53e0\u52a0\u548c\u4f5c\u4e3a\u6563\u5217\u5730\u5740\u3002</p> <pre><code>H(key) = (key &amp; mask1) | (key &amp; mask2) | (key &amp; mask3)\n\nmask2 = mask1 &lt;&lt; k, mask3 = mask2 &lt;&lt; k\n</code></pre> <p>\u9002\u7528\u4e8e\u5173\u952e\u5b57\u4f4d\u6570\u8f83\u591a\uff0c\u4e14\u6bcf\u4e00\u4f4d\u7684\u6570\u5b57\u5206\u5e03\u5927\u81f4\u5747\u5300\u7684\u60c5\u51b5\u3002</p>"},{"location":"ch07_hash/hashtable/#_6","title":"\u4e94\u3001\u6563\u5217\u51b2\u7a81\u5904\u7406","text":"<p>\u6563\u5217\u51b2\u7a81\u662f\u4e0d\u53ef\u907f\u514d\u7684\uff0c\u90a3\u4e00\u822c\u600e\u4e48\u5904\u7406\u6563\u5217\u51b2\u7a81\u5462\uff1f</p> <p>\u5e38\u89c1\u7684\u89e3\u51b3\u65b9\u6cd5\u5206\u4e3a 2 \u79cd\uff1a</p> <ul> <li>\u5f00\u653e\u5bfb\u5740\u6cd5</li> <li>\u62c9\u94fe\u6cd5</li> </ul> <p>\u4e0b\u9762\u5206\u522b\u8bf4\u660e\u8fd9 2 \u79cd\u65b9\u6cd5\u3002</p>"},{"location":"ch07_hash/hashtable/#51","title":"5.1 \u5f00\u653e\u5bfb\u5740\u6cd5","text":"<p>\u5f00\u653e\u5bfb\u5740\u6cd5\uff0c\u6307\u7684\u662f\u5728\u5176\u4ed6\u6563\u5217\u5730\u5740\u7a7a\u95f2\u7684\u4f4d\u7f6e\uff0c\u63d2\u5165\u51b2\u7a81\u7684\u6570\u636e\u3002</p> <p>\u8fd9\u5c31\u610f\u5473\u7740\uff0c\u5173\u952e\u5b57\u6563\u5217\u5230\u7684\u5730\u5740\uff0c\u5bf9\u5e94\u7684\u6570\u636e\u4e0d\u4e00\u5b9a\u662f\u5b83\u7684\uff0c\u6709\u53ef\u80fd\u662f\u522b\u4eba\u5360\u7528\u4e86\u3002</p> <p>\u5176\u6570\u5b66\u9012\u63a8\u516c\u5f0f\u662f\uff1a</p> <pre><code>hi = (H(key) + di) % m\n</code></pre> <p>\u5176\u4e2d\uff0ci = 1,2,3...\uff0cm \u8868\u793a\u6563\u5217\u8868\u957f\uff0cdi \u4e3a\u589e\u91cf\u5e8f\u5217\u3002</p> <p>\u5f53\u9009\u5b9a\u67d0\u4e00\u589e\u91cf\u5e8f\u5217\u540e\uff0c\u5bf9\u5e94\u7684\u5904\u7406\u65b9\u6cd5\u5c31\u786e\u5b9a\u4e86\uff0c\u5e38\u89c1\u7684\u589e\u91cf\u5e8f\u5217\u6709\u4ee5\u4e0b\u51e0\u79cd\u3002</p>"},{"location":"ch07_hash/hashtable/#511","title":"5.1.1 \u7ebf\u6027\u63a2\u6d4b","text":"<p>\u7ebf\u6027\u63a2\u6d4b\uff0c\u5c31\u662f\u589e\u91cf\u4e3a 1 \u7684\u5e8f\u5217 d = 1, 2, 3, ...</p> <p>\u63a2\u6d4b\u8fc7\u7a0b\u5c31\u662f\uff0c\u5982\u679c\u51fa\u73b0\u51b2\u7a81\uff0c\u5c31\u6309\u987a\u5e8f\u67e5\u770b\u8868\u4e2d\u4e0b\u4e00\u4e2a\u5355\u5143\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u7a7a\u95f2\u4f4d\u7f6e\uff08\u76f4\u5230\u904d\u5386\u5b8c\u6574\u5f20\u8868\uff09\u3002</p> <p>\u6bd4\u5982\u6563\u5217\u51fd\u6570\u662f\u53d6\u4f59 <code>H(key) = key % 5</code>\uff0c\u5f53\u524d\u6570\u7ec4\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>     ___ \n0   |   |\n     ___\n1   | 1 |\n     ___ \n2   |   |\n     ___\n3   |   |\n     ___ \n4   | 4 |\n</code></pre> <p>\u6b64\u65f6\u63d2\u5165\u4e00\u4e2a 6\uff0c<code>6 % 5 = 1</code>\uff0c\u5bf9\u5e94\u5730\u5740\u662f <code>1</code>\uff0c\u4f46\u662f\u6b64\u65f6\u5df2\u7ecf\u6709\u4eba\u5360\u7528\u4e86\u3002</p> <p>\u6309\u987a\u5e8f\u5f80\u4e0b\u627e\u4e00\u4e2a\u7a7a\u4f4d\uff0c\u627e\u5230\u4e86 <code>2</code> \u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u63d2\u5165\uff1a</p> <pre><code>     ___ \n0   |   |\n     ___\n1   | 1 |\n     ___ \n2   | 6 |\n     ___\n3   |   |\n     ___ \n4   | 4 |\n</code></pre> <p>\u63a5\u7740\u518d\u63d2\u5165\u4e00\u4e2a 15\uff0c<code>11 % 5 = 1</code>\uff0c\u8fd8\u662f\u5730\u5740 <code>1</code>\u3002</p> <p>\u6309\u987a\u5e8f\u5f80\u4e0b\u627e\uff0c\u76f4\u81f3\u627e\u5230\u4e86 <code>3</code>\uff0c\u6700\u540e\u653e\u8fdb\u53bb\uff1a</p> <pre><code>     ____ \n0   |    |\n     ____\n1   | 1  |\n     ____ \n2   | 8  |\n     ____\n3   | 11 |\n     ____ \n4   | 4  |\n</code></pre> <p>\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6563\u5217\u5730\u5740 <code>1</code> \u5b9e\u9645\u4e0a\u662f\u5360\u7528\u4e86 <code>2</code> \u548c <code>3</code> \u7684\u7a7a\u95f4\u3002</p> <p>\u7ebf\u6027\u63a2\u6d4b\u4f1a\u5bfc\u81f4\u540c\u4e00\u4e2a\u5730\u5740\u7684\u6570\u636e\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u800c\u4e14\u5360\u7528\u76f8\u90bb\u5730\u5740\u7684\u7a7a\u95f4\u3002</p>"},{"location":"ch07_hash/hashtable/#512","title":"5.1.2 \u5e73\u65b9\u63a2\u6d4b","text":"<p>\u5e73\u65b9\u63a2\u6d4b\uff0c\u5c31\u662f\u589e\u91cf\u4e3a\u5e73\u65b9\u7684\u5e8f\u5217 d = 1^2, 2^2, 3^2, 4^2, ...</p> <p>\u7ebf\u6027\u63a2\u6d4b\u4f1a\u5bfc\u81f4\u6570\u636e\u5806\u79ef\uff0c\u6240\u4ee5\u589e\u91cf\u6b65\u957f\u6362\u6210\u4e86\u5b83\u7684\u5e73\u65b9\uff0c\u907f\u514d\u5806\u79ef\u95ee\u9898\u3002</p> <p>\u7f3a\u70b9\u662f\u4e0d\u80fd\u63a2\u6d4b\u5230\u6563\u5217\u8868\u4e0a\u7684\u6240\u6709\u4f4d\u7f6e\uff0c\u4f46\u81f3\u5c11\u80fd\u63a2\u6d4b\u5230\u4e00\u534a\u3002</p>"},{"location":"ch07_hash/hashtable/#513","title":"5.1.3 \u518d\u6563\u5217","text":"<p>\u518d\u6563\u5217\uff0c\u5c31\u662f\u589e\u91cf\u5e8f\u5217\u662f\u7528\u53e6\u4e00\u4e2a\u6563\u5217\u51fd\u6570\u751f\u6210\u7684 <code>d = H2(key)</code>\u3002</p> <p>\u518d\u6563\u5217\u7684\u589e\u91cf\u5e8f\u5217\u5c31\u662f\uff1a</p> <pre><code>d1 = H2(H(key))\nd2 = H2(d1)\nd3 = H2(d2)\nd4 = H2(d3)\n...\n</code></pre> <p>\u6bd4\u5982\u8bf4\uff0c\u518d\u6563\u5217\u51fd\u6570\u662f <code>H2(d) = (4 * d + 3) % 5</code>\u3002</p> <p>\u5047\u5982\u6563\u5217\u503c\u5730\u5740\u662f <code>H(key) = 1</code>\uff0c\u90a3\u4e48\u5b83\u5bf9\u5e94\u7684\u589e\u91cf\u5e8f\u5217\u5c31\u662f\uff1a</p> <pre><code>H2(1) = (4 * 1 + 3) % 5 = 2\nH2(2) = (4 * 2 + 3) % 5 = 1\n</code></pre> <p>\u4e5f\u5373\u662f\uff0c\u51b2\u7a81\u63a2\u6d4b\u5730\u5740\u5206\u522b\u662f <code>[1, 1 + 2, 1 + 2 + 1] = [1, 3, 2]</code>\u3002</p> <p>\u518d\u6563\u5217\u5c31\u662f\u7528\u989d\u5916\u7684\u6563\u5217\u51fd\u6570\u751f\u6210\u589e\u91cf\u5e8f\u5217\uff0c\u8fbe\u5230\u5bfb\u627e\u7a7a\u4f4d\u7684\u76ee\u7684\u3002</p>"},{"location":"ch07_hash/hashtable/#514","title":"5.1.4 \u4f2a\u968f\u673a\u5e8f\u5217","text":"<p>\u4f2a\u968f\u673a\u5e8f\u5217\uff0c\u5c31\u662f\u4f7f\u7528\u4f2a\u968f\u673a\u6570\u4f5c\u4e3a\u589e\u91cf\u5e8f\u5217\u3002</p> <p>\u4e3a\u4ec0\u4e48\u662f\u4f2a\u968f\u673a\u6570\uff1f\u56e0\u4e3a\u6563\u5217\u51fd\u6570\u7684\u4e00\u4e2a\u8981\u6c42\u662f\uff1a</p> <ul> <li>\u540c\u4e00\u4e2a\u5173\u952e\u5b57\uff0c\u5bf9\u5e94\u7684\u5730\u5740\u5fc5\u987b\u76f8\u7b49</li> </ul> <p>\u5982\u679c\u4f7f\u7528\u4e86\u771f\u7684\u968f\u673a\u6570\uff0c\u90a3\u4e48\u540c\u4e00\u4e2a\u5173\u952e\u5b57\u6620\u5c04\u7684\u5730\u5740\u5c31\u4e0d\u786e\u5b9a\u4e86\u3002</p> <p>\u6240\u4ee5\u53ea\u80fd\u7528\u4f2a\u968f\u673a\u6570\u3002</p>"},{"location":"ch07_hash/hashtable/#52","title":"5.2 \u62c9\u94fe\u6cd5","text":"<p>\u5f00\u653e\u5bfb\u5740\u6cd5\uff0c\u662f\u7528\u522b\u7684\u5730\u5740\u6765\u5b58\u50a8\u81ea\u5df1\u5730\u5740\u7684\u6570\u636e\uff0c\u8fd9\u5c31\u5f88\u5bb9\u6613\u5bfc\u81f4\u51b2\u7a81\u3002</p> <p>\u62c9\u94fe\u6cd5\uff0c\u4e0d\u5360\u7528\u522b\u4eba\u7684\u7a7a\u95f4\uff0c\u800c\u662f\u5c06\u76f8\u540c\u5730\u5740\u7684\u6570\u636e\u653e\u5230\u4e00\u6761\u94fe\u8868\u91cc\u3002</p> <p>\u5176\u5927\u6982\u7ed3\u6784\u5982\u4e0b\uff1a</p> <pre><code>     ___ \n0   |   |\n     ___        ___        ____\n1   | 8 | ---&gt; | 1 | ---&gt; | 22 |\n     ___ \n2   | 9 |\n     ___        ____ \n3   | 3 | ---&gt; | 17 |\n     ___        ____        ____        ____ \n4   | 4 | ---&gt; | 32 | ---&gt; | 18 | ---&gt; | 46 |\n     ___\n5   |   |\n</code></pre> <p>\u76f8\u540c\u5730\u5740\u51b2\u7a81\u7684\u6570\u636e\uff0c\u4f1a\u5f62\u6210\u4e00\u6761\u94fe\u8868\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u907f\u514d\u51b2\u7a81\u7684\u95ee\u9898\u3002</p> <p>\u62c9\u94fe\u6cd5\u9002\u7528\u4e8e\u7ecf\u5e38\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u7684\u60c5\u51b5\u3002</p>"},{"location":"ch07_hash/hashtable/#_7","title":"\u5c0f\u7ed3","text":"<p>\u5f00\u653e\u5bfb\u5740\u6cd5\uff1a</p> <ul> <li>\u4f7f\u7528\u539f\u672c\u7684\u6570\u7ec4\u7a7a\u95f4\uff0c\u4f1a\u5360\u7528\u5230\u522b\u7684\u5730\u5740\u6765\u5b58\u653e\u540c\u5730\u5740\u7684\u6570\u636e</li> <li>\u4e0d\u80fd\u76f4\u63a5\u5220\u9664\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u51b2\u7a81\u5bfb\u5740\u5e8f\u5217\u4e2d\u65ad</li> <li>\u9002\u5408\u5f53\u6570\u636e\u91cf\u6bd4\u8f83\u5c0f\u3001\u88c5\u8f7d\u56e0\u5b50\u5c0f\u7684\u60c5\u51b5</li> </ul> <p>\u62c9\u94fe\u6cd5\uff1a</p> <ul> <li>\u65b0\u5f00\u989d\u5916\u7684\u94fe\u8868\u7a7a\u95f4\uff0c\u5b58\u653e\u540c\u5730\u5740\u7684\u6570\u636e</li> <li>\u9002\u5408\u5b58\u50a8\u5927\u5bf9\u8c61\u3001\u5927\u6570\u636e\u91cf\u7684\u60c5\u51b5</li> <li>\u9002\u5408\u7ecf\u5e38\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u7684\u60c5\u51b5</li> </ul>"},{"location":"ch07_hash/hashtable/#_8","title":"\u516d\u3001\u6563\u5217\u8868\u7684\u6027\u80fd\u5206\u6790","text":"<p>\u6563\u5217\u8868\u7684\u67e5\u627e\u6548\u7387\u53d6\u51b3\u4e8e 3 \u4e2a\u56e0\u7d20\uff1a</p> <ul> <li>\u6563\u5217\u51fd\u6570\uff1a\u6563\u5217\u51fd\u6570\u76f4\u63a5\u5173\u7cfb\u5230\u51b2\u7a81\u7684\u6982\u7387\uff0c\u51b2\u7a81\u6982\u7387\u8d8a\u9ad8\uff0c\u67e5\u8be2\u6548\u7387\u5c31\u8d8a\u4f4e</li> <li>\u5904\u7406\u51b2\u7a81\u7684\u65b9\u6cd5\uff1a\u4e0d\u540c\u7684\u5904\u7406\u51b2\u7a81\u7684\u65b9\u6cd5\uff0c\u4e5f\u4f1a\u5bfc\u81f4\u67e5\u8be2\u957f\u5ea6\u53d8\u5316\uff0c\u4ece\u800c\u5f71\u54cd\u67e5\u8be2\u6548\u7387</li> <li>\u8d1f\u8f7d\u56e0\u5b50\uff1a\u76f4\u89c2\u4e0a\u770b\uff0c\u8d1f\u8f7d\u56e0\u5b50\u8d8a\u5927\uff0c\u6563\u5217\u8868\u8d8a\u6ee1\uff0c\u51b2\u7a81\u4e5f\u5c31\u4e5f\u591a\uff0c\u67e5\u627e\u7684\u6548\u7387\u4e5f\u5c31\u8d8a\u4f4e</li> </ul> <p>\u6563\u5217\u8868\u7684\u67e5\u8be2\u6027\u80fd\uff0c\u662f\u5b9e\u65f6\u53d8\u5316\u7684\uff0c\u968f\u7740\u6570\u636e\u5206\u5e03\u60c5\u51b5\u548c\u6570\u636e\u91cf\u800c\u53d8\u5316\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u6563\u5217\u8868\u7684\u5e73\u5747\u67e5\u627e\u957f\u5ea6\u4f9d\u8d56\u4e8e\u8d1f\u8f7d\u56e0\u5b50\uff0c\u8d1f\u8f7d\u56e0\u5b50\u8d8a\u5927\uff0c\u5e73\u5747\u67e5\u627e\u957f\u5ea6\u5c31\u8d8a\u5927\u3002</p> <p>\u6240\u4ee5\u5e94\u8be5\u5c3d\u91cf\u907f\u514d\u8d1f\u8f7d\u56e0\u5b50\u8fc7\u5927\u3002</p>"},{"location":"ch07_hash/hashtable/#_9","title":"\u4e03\u3001\u6563\u5217\u8868\u7684\u7279\u70b9","text":"<ul> <li>\u67e5\u627e\u901f\u5ea6\u5feb\uff1a\u6b63\u5e38\u60c5\u51b5\u4e0b\u662f <code>O(1)</code> \u7684\u67e5\u627e\u6548\u7387</li> <li>\u989d\u5916\u7a7a\u95f4\u6d6a\u8d39\uff1a\u5f88\u96be\u505a\u5230\u7528\u5b8c\u6570\u7ec4\u7684\u7a7a\u95f4\uff0c\u603b\u662f\u4f1a\u6709\u4e00\u4e9b\u5269\u4f59\u7a7a\u4f4d</li> <li>\u6570\u636e\u65e0\u5e8f\uff1a\u6563\u5217\u8868\u662f\u901a\u8fc7\u5173\u952e\u5b57\u76f4\u63a5\u6620\u5c04\u7684\u5730\u5740\uff0c\u4e0d\u4fdd\u8bc1\u6570\u636e\u5728\u6570\u7ec4\u4e2d\u7684\u987a\u5e8f</li> <li>\u4ea7\u751f\u51b2\u7a81\uff1a\u5f88\u96be\u8bbe\u8ba1\u4e00\u4e2a\u6ca1\u6709\u51b2\u7a81\u7684\u6563\u5217\u51fd\u6570</li> </ul>"},{"location":"ch07_hash/hashtable/#_10","title":"\u516b\u3001\u6563\u5217\u8868\u7684\u5e94\u7528\u573a\u666f","text":"<ul> <li>\u9002\u5408\u5927\u6570\u636e\u91cf\u4e0b\u5feb\u901f\u67e5\u627e</li> <li>\u9002\u5408\u7f13\u5b58\uff0c\u5feb\u901f\u5b9a\u4f4d</li> </ul>"},{"location":"ch07_hash/hashtable/#_11","title":"\u603b\u7ed3","text":"<p>\u8bbe\u8ba1\u6563\u5217\u8868\u65f6\uff0c\u6709\u51e0\u4e2a\u5173\u952e\u7684\u5730\u65b9\uff1a</p> <ul> <li>\u6563\u5217\u51fd\u6570\u7684\u8bbe\u8ba1</li> <li>\u6563\u5217\u51b2\u7a81\u7684\u5904\u7406</li> <li>\u52a8\u6001\u7684\u8d1f\u8f7d\u6269\u5bb9</li> </ul> <p>\u6563\u5217\u51fd\u6570\u7684\u8bbe\u8ba1\u8981\u6c42\uff1a</p> <ul> <li>\u6563\u5217\u5fc5\u987b\u80fd\u591f\u6620\u5c04\u6240\u6709\u53ef\u80fd\u7684\u5173\u952e\u5b57</li> <li>\u6563\u5217\u5bf9\u4e8e\u540c\u4e00\u4e2a\u5173\u952e\u5b57\uff0c\u6620\u5c04\u5730\u5740\u5e94\u8be5\u4fdd\u6301\u4e00\u81f4</li> <li>\u6563\u5217\u5e94\u8be5\u5c3d\u53ef\u80fd\u7684\u628a\u6620\u5c04\u5730\u5740\u5747\u5300\u5206\u5e03\u5f00\u6765</li> <li>\u6563\u5217\u5e94\u8be5\u5c3d\u91cf\u7b80\u5355\uff0c\u80fd\u591f\u77ed\u65f6\u95f4\u8ba1\u7b97\u51fa\u6765</li> </ul> <p>\u6563\u5217\u51b2\u7a81\u7684\u5904\u7406\uff1a</p> <p>\u5f00\u653e\u5bfb\u5740\u6cd5\uff1a</p> <ul> <li>\u4f7f\u7528\u539f\u672c\u7684\u6570\u7ec4\u7a7a\u95f4\uff0c\u4f1a\u5360\u7528\u5230\u522b\u7684\u5730\u5740\u6765\u5b58\u653e\u540c\u5730\u5740\u7684\u6570\u636e</li> <li>\u4e0d\u80fd\u76f4\u63a5\u5220\u9664\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u51b2\u7a81\u5bfb\u5740\u5e8f\u5217\u4e2d\u65ad</li> <li>\u9002\u5408\u5f53\u6570\u636e\u91cf\u6bd4\u8f83\u5c0f\u3001\u88c5\u8f7d\u56e0\u5b50\u5c0f\u7684\u60c5\u51b5</li> </ul> <p>\u62c9\u94fe\u6cd5\uff1a</p> <ul> <li>\u65b0\u5f00\u989d\u5916\u7684\u94fe\u8868\u7a7a\u95f4\uff0c\u5b58\u653e\u540c\u5730\u5740\u7684\u6570\u636e</li> <li>\u9002\u5408\u5b58\u50a8\u5927\u5bf9\u8c61\u3001\u5927\u6570\u636e\u91cf\u7684\u60c5\u51b5</li> <li>\u9002\u5408\u7ecf\u5e38\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u7684\u60c5\u51b5</li> </ul>"},{"location":"ch07_hash/hashtable/#_12","title":"\u53c2\u8003","text":"<p>http://data.biancheng.net/view/107.html</p> <p>https://zhuanlan.zhihu.com/p/537528259</p> <p>http://t.zoukankan.com/Yunrui-blogs-p-11967732.html</p>"},{"location":"ch07_hash/hashtable/#_13","title":"\u9644\u5f55","text":""},{"location":"ch07_hash/hashtable/#-","title":"\u6563\u5217\u8868-\u5f00\u653e\u5bfb\u5740\u6cd5","text":"<pre><code>/**\n * \u6563\u5217\u8868-\u5f00\u653e\u5bfb\u5740\u6cd5\n * &lt;p&gt;\n * \u6563\u5217\u51fd\u6570\uff1a\u6298\u53e0\u6cd5 + \u53d6\u4f59\n * &lt;p&gt;\n * \u6563\u5217\u51b2\u7a81\uff1a\u7ebf\u6027\u63a2\u6d4b\u6cd5\n */\npublic class OpenHashTable implements HashTable {\n\n    /**\n     * \u6563\u5217\u8868\u6570\u7ec4\n     */\n    Node[] table;\n    /**\n     * \u5143\u7d20\u6570\u91cf\n     */\n    int size;\n    /**\n     * \u8d1f\u8f7d\u56e0\u5b50\n     */\n    double factory;\n\n    static class Node {\n        final int key;\n        int value;\n        boolean deleted;\n\n        public Node(int key, int value) {\n            this.key = key;\n            this.value = value;\n        }\n    }\n\n    public OpenHashTable() {\n        this(16);\n    }\n\n    public OpenHashTable(int capacity) {\n        this(capacity, 0.75);\n    }\n\n    public OpenHashTable(int capacity, double factory) {\n        if (capacity &lt;= 0) {\n            capacity = 16;\n        }\n        table = new Node[capacity];\n        size = 0;\n        this.factory = factory;\n    }\n\n    @Override\n    public void put(int key, int value) {\n        boolean succeed = false;\n        int length = table.length;\n        int index = hash(key);\n        for (int i = 0; i &lt; length; i++) {\n            Node node = table[index];\n            // \u63d2\u5165\u8282\u70b9\n            if (node == null || node.deleted) {\n                node = new Node(key, value);\n                table[index] = node;\n                size++;\n                succeed = true;\n                break;\n            }\n            // \u66f4\u65b0\u8282\u70b9\n            if (node.key == key) {\n                node.value = value;\n                succeed = true;\n                break;\n            }\n            index = conflict(index);\n        }\n\n        // \u9a8c\u8bc1\u6dfb\u52a0\u7ed3\u679c\n        if (!succeed) {\n            // \u6ca1\u6709\u6dfb\u52a0\u6210\u529f\uff0c\u6269\u5bb9\u540e\u518d\u5c1d\u8bd5\n            resize();\n            put(key, value);\n        } else {\n            // \u6dfb\u52a0\u6210\u529f\u540e\uff0c\u68c0\u67e5\u662f\u5426\u9700\u8981\u6269\u5bb9\n            checkResize();\n        }\n    }\n\n    @Override\n    public int remove(int key) {\n        int index = findIndex(key);\n        if (index &lt; 0) {\n            return -1;\n        }\n\n        // \u53ea\u6807\u8bb0\u5220\u9664\uff0c\u4e0d\u6e05\u9664\u8282\u70b9\n        Node node = table[index];\n        node.deleted = true;\n        size--;\n        return node.value;\n    }\n\n    @Override\n    public int get(int key) {\n        int index = findIndex(key);\n        if (index &lt; 0) {\n            return -1;\n        }\n        return table[index].value;\n    }\n\n    @Override\n    public boolean contains(int key) {\n        return findIndex(key) != -1;\n    }\n\n    @Override\n    public int size() {\n        return size;\n    }\n\n    /**\n     * \u67e5\u627e\u6307\u5b9akey\u7684\u7d22\u5f15\u4f4d\u7f6e\n     *\n     * @param key \u5173\u952e\u5b57\n     * @return \u5bf9\u5e94\u7684\u7d22\u5f15/-1\u8868\u793a\u4e0d\u5b58\u5728\n     */\n    protected int findIndex(int key) {\n        int length = table.length;\n        int index = hash(key);\n        for (int i = 0; i &lt; length; i++) {\n            Node node = table[index];\n            if (node == null) {\n                return -1;\n            }\n            // key \u503c\u5b58\u5728\uff0c\u4e14\u6ca1\u6709\u5220\u9664\u6807\u8bb0\n            if (node.key == key &amp;&amp; !node.deleted) {\n                return index;\n            }\n            index = conflict(index);\n        }\n        return -1;\n    }\n\n    /**\n     * \u6563\u5217\u51fd\u6570\n     * &lt;p&gt;\n     * \u5173\u952e\u5b57\u4f4e 16 \u4f4d\u548c\u9ad8 16 \u4f4d\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7136\u540e\u53d6\u4f59\n     *\n     * @param key \u5173\u952e\u5b57\n     * @return \u6563\u5217\u5730\u5740\n     */\n    protected int hash(int key) {\n        return ((key ^ (key &gt;&gt;&gt; 16)) &amp; 0xFFFF) % table.length;\n    }\n\n    /**\n     * \u6563\u5217\u51b2\u7a81\u7684\u4e0b\u4e00\u4e2a\u5e8f\u5217\u503c\n     * &lt;p&gt;\n     * \u7ebf\u6027\u63a2\u6d4b\u6cd5\n     *\n     * @param index \u7d22\u5f15\n     * @return \u51b2\u7a81\u7684\u4e0b\u4e00\u4e2a\u7d22\u5f15\n     */\n    protected int conflict(int index) {\n        return (index + 1) % table.length;\n    }\n\n    /**\n     * \u68c0\u67e5\u5e76\u8fdb\u884c\u6570\u7ec4\u6269\u5bb9\n     */\n    protected void checkResize() {\n        // \u5927\u4e8e\u8d1f\u8f7d\u56e0\u5b50\u65f6\uff0c\u8fdb\u884c\u6269\u5bb9\n        if (1.0 * size / table.length &gt; factory) {\n            resize();\n        }\n    }\n\n    /**\n     * \u52a8\u6001\u6269\u5bb9\n     */\n    protected synchronized void resize() {\n        // \u6570\u7ec4\u8fdb\u884c 2 \u500d\u6269\u5bb9\n        Node[] oldTable =  table;\n        int newLength = oldTable.length &lt;&lt; 1;\n        table = new Node[newLength];\n\n        // \u91cd\u65b0\u6620\u5c04\u6570\u7ec4\u5143\u7d20\n        for (Node node : oldTable) {\n            if (node.deleted) {\n                continue;\n            }\n            int index = hash(node.key);\n            while (table[index] != null) {\n                index = conflict(index);\n            }\n            table[index] = node;\n        }\n    }\n\n}\n</code></pre>"},{"location":"ch07_hash/hashtable/#-_1","title":"\u6563\u5217\u8868-\u62c9\u94fe\u6cd5","text":"<pre><code>/**\n * \u6563\u5217\u8868-\u62c9\u94fe\u6cd5\n * &lt;p&gt;\n * \u6563\u5217\u51fd\u6570\uff1a\u6298\u53e0\u6cd5 + \u53d6\u4f59\n * &lt;p&gt;\n * \u6563\u5217\u51b2\u7a81\uff1a\u53cc\u5411\u62c9\u94fe\u6cd5\n */\npublic class LinkedHashTable implements HashTable {\n\n    /**\n     * \u6563\u5217\u8868\u6570\u7ec4\n     */\n    Node[] table;\n    /**\n     * \u5143\u7d20\u6570\u91cf\n     */\n    int size;\n    /**\n     * \u8d1f\u8f7d\u56e0\u5b50\n     */\n    double factory;\n\n    static class Node {\n        final int key;\n        int value;\n\n        Node prev;\n        Node next;\n\n        public Node(int key, int value) {\n            this.key = key;\n            this.value = value;\n        }\n    }\n\n    public LinkedHashTable() {\n        this(16);\n    }\n\n    public LinkedHashTable(int capacity) {\n        this(capacity, 0.75);\n    }\n\n    public LinkedHashTable(int capacity, double factory) {\n        if (capacity &lt;= 0) {\n            capacity = 16;\n        }\n        table = new Node[capacity];\n        size = 0;\n        this.factory = factory;\n    }\n\n    @Override\n    public void put(int key, int value) {\n        int index = hash(key);\n        Node head = table[index];\n        if (head == null) {\n            // \u6570\u7ec4\u94fe\u8868\u5934\u8282\u70b9\n            table[index] = new Node(key, value);\n        } else {\n            // \u67e5\u627e key \u503c\u662f\u5426\u5b58\u5728\n            Node node = head, prev = null;\n            while (node != null &amp;&amp; node.key != key) {\n                prev = node;\n                node = node.next;\n            }\n\n            // \u66f4\u65b0\u8282\u70b9\n            if (node != null) {\n                node.value = value;\n                return;\n            }\n\n            // \u8ffd\u52a0\u8282\u70b9\n            node = new Node(key, value);\n            prev.next = node;\n            node.prev = prev;\n        }\n        size++;\n\n        // \u68c0\u67e5\u662f\u5426\u9700\u8981\u6269\u5bb9\n        checkResize();\n    }\n\n    @Override\n    public int remove(int key) {\n        int index = hash(key);\n        Node head = table[index];\n        if (head == null) {\n            return -1;\n        }\n\n        // \u67e5\u627e key \u7684\u8282\u70b9\n        Node node = head;\n        while (node != null &amp;&amp; node.key != key) {\n            node = node.next;\n        }\n        if (node == null) {\n            return -1;\n        }\n\n        // \u79fb\u9664\u94fe\u8868\u8282\u70b9\n        if (node.prev == null) {\n            // \u6570\u7ec4\u94fe\u8868\u5934\u8282\u70b9\n            table[index] = node.next;\n            node.next = null;\n        } else if (node.next == null) {\n            // \u94fe\u8868\u5c3e\u8282\u70b9\n            node.prev.next = null;\n            node.prev = null;\n        } else {\n            // \u94fe\u8868\u4e2d\u95f4\u8282\u70b9\n            node.next.prev = node.prev;\n            node.prev.next = node.next;\n            node.prev = node.next = null;\n        }\n\n        size--;\n        return node.value;\n    }\n\n    @Override\n    public int get(int key) {\n        Node node = find(key);\n        if (node == null) {\n            return -1;\n        }\n        return node.value;\n    }\n\n    @Override\n    public boolean contains(int key) {\n        return find(key) != null;\n    }\n\n    @Override\n    public int size() {\n        return size;\n    }\n\n    /**\n     * \u67e5\u627e\u6307\u5b9akey\u7684\u7d22\u5f15\u4f4d\u7f6e\n     *\n     * @param key \u5173\u952e\u5b57\n     * @return \u5bf9\u5e94\u7684\u7d22\u5f15/-1\u8868\u793a\u4e0d\u5b58\u5728\n     */\n    protected Node find(int key) {\n        int index = hash(key);\n        Node node = table[index];\n        if (node == null) {\n            return null;\n        }\n        while (node != null &amp;&amp; node.key != key) {\n            node = node.next;\n        }\n        return node;\n    }\n\n    /**\n     * \u6563\u5217\u51fd\u6570\n     * &lt;p&gt;\n     * \u5173\u952e\u5b57\u4f4e 16 \u4f4d\u548c\u9ad8 16 \u4f4d\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7136\u540e\u53d6\u4f59\n     *\n     * @param key \u5173\u952e\u5b57\n     * @return \u6563\u5217\u5730\u5740\n     */\n    protected int hash(int key) {\n        return ((key ^ (key &gt;&gt;&gt; 16)) &amp; 0xFFFF) % table.length;\n    }\n\n    /**\n     * \u68c0\u67e5\u5e76\u8fdb\u884c\u6570\u7ec4\u6269\u5bb9\n     */\n    protected void checkResize() {\n        // \u5927\u4e8e\u8d1f\u8f7d\u56e0\u5b50\u65f6\uff0c\u8fdb\u884c\u6269\u5bb9\n        if (1.0 * size / table.length &gt; factory) {\n            resize();\n        }\n    }\n\n    /**\n     * \u52a8\u6001\u6269\u5bb9\n     */\n    protected synchronized void resize() {\n        // \u6570\u7ec4\u8fdb\u884c 2 \u500d\u6269\u5bb9\n        Node[] oldTable = table;\n        int newLength = oldTable.length &lt;&lt; 1;\n        table = new Node[newLength];\n\n        // \u91cd\u65b0\u6620\u5c04\u6570\u7ec4\u5143\u7d20\n        for (Node head : oldTable) {\n            for (Node node = head; node != null; ) {\n                Node next = node.next;\n                // \u4ece\u65e7\u94fe\u8868\u65ad\u5f00\n                node.prev = node.next = null;\n                // \u8fde\u63a5\u5230\u65b0\u94fe\u8868\n                int index = hash(node.key);\n                if (table[index] == null) {\n                    // \u94fe\u8868\u5934\u8282\u70b9\n                    table[index] = node;\n                } else {\n                    // \u6dfb\u52a0\u5230\u94fe\u8868\u5c3e\u90e8\n                    Node tail = table[index];\n                    while (tail.next != null) {\n                        tail = tail.next;\n                    }\n                    tail.next = node;\n                    node.prev = tail;\n                }\n                node = next;\n            }\n        }\n    }\n\n}\n</code></pre>"},{"location":"ch08_graph/","title":"\u56fe","text":""},{"location":"ch09_string/","title":"\u5b57\u7b26\u4e32","text":""},{"location":"ch09_string/bf/","title":"BF \u7b97\u6cd5","text":"<p>BF \u7b97\u6cd5\uff0c\u5373 Brute Force\uff0c\u66b4\u529b\u5339\u914d\u7b97\u6cd5\uff0c\u4e5f\u53eb\u6734\u7d20\u5339\u914d\u7b97\u6cd5\u3002</p>"},{"location":"ch09_string/bf/#_1","title":"\u4e00\u3001\u539f\u7406","text":"<p>\u6240\u8c13\u7684\u66b4\u529b\u5339\u914d\uff0c\u5c31\u662f\uff1a</p> <ul> <li>\u68c0\u67e5\u4e3b\u4e32\u7684\u6240\u6709\u5b50\u4e32\uff0c\u770b\u662f\u5426\u4e0e\u6a21\u5f0f\u4e32\u5339\u914d</li> </ul> <p>\u6bd4\u5982\uff0c\u4e3b\u4e32\u662f <code>ababababca</code>\uff0c\u6a21\u5f0f\u4e32\u662f <code>abababca</code>\u3002</p> <ul> <li>\u4ece\u524d\u5f80\u540e\uff0c\u4f9d\u6b21\u68c0\u67e5\u4e3b\u4e32\u7684\u6bcf\u4e00\u4e2a\u5b50\u4e32\u662f\u5426\u8ddf\u6a21\u5f0f\u4e32\u5339\u914d</li> </ul> <p>\u7b2c 1 \u8f6e\uff08\u6bd4\u8f83\u7b2c 1 \u4e2a\u5b50\u4e32\uff09\uff1a</p> <pre><code>   \u5339\u914d\u5931\u8d25\n      |\n      v\nababababca\nabababca\n</code></pre> <p>\u7b2c 2 \u8f6e\uff08\u6bd4\u8f83\u7b2c 2 \u4e2a\u5b50\u4e32\uff09\uff1a</p> <pre><code>\u5339\u914d\u5931\u8d25\n |\n v\nababababca\n abababca\n</code></pre> <p>\u7b2c 3 \u8f6e\uff08\u6bd4\u8f83\u7b2c 3 \u4e2a\u5b50\u4e32\uff09\uff1a</p> <pre><code>      \u5339\u914d\u6210\u529f\n         |\n         v\nababababca\n  abababca\n</code></pre> <p>BF \u7b97\u6cd5\u5c31\u662f\u901a\u8fc7\u5339\u914d\u5168\u90e8\u5b50\u4e32\u7684\u65b9\u5f0f\uff0c\u6765\u5b9e\u73b0\u5b57\u7b26\u4e32\u5339\u914d\u3002</p>"},{"location":"ch09_string/bf/#_2","title":"\u4e8c\u3001\u5206\u6790","text":"<p>\u5047\u8bbe\u4e3b\u4e32\u957f\u5ea6\u662f n\uff0c\u6a21\u5f0f\u4e32\u957f\u5ea6\u662f m\u3002</p> <p>\u90a3\u4e48\u5339\u914d\u6b21\u6570\uff08\u5373\u4e3b\u4e32\u4e2d\u957f\u5ea6\u4e3a m \u7684\u5b50\u4e32\u4e2a\u6570\uff09\u662f\uff1a</p> <pre><code>n - m + 1\n</code></pre> <p>\u6bcf\u6b21\u5339\u914d\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f <code>O(m)</code>\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\uff1a</p> <pre><code>O((n - m + 1) * m), \u5373 O(n * m)\n</code></pre>"},{"location":"ch09_string/bf/#_3","title":"\u4e09\u3001\u5e94\u7528","text":"<p>\u867d\u7136 BF \u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8f83\u9ad8\uff0c\u4f46\u662f\u5b83\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u8fd8\u662f\u4f1a\u7ecf\u5e38\u7528\u5230\uff1a</p> <ul> <li>\u5f88\u591a\u573a\u666f\u4e0b\uff0c\u4e3b\u4e32\u548c\u6a21\u5f0f\u4e32\u7684\u957f\u5ea6\u90fd\u4e0d\u4f1a\u592a\u957f\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u4e0d\u4f1a\u592a\u9ad8</li> <li>BF \u7b97\u6cd5\u601d\u60f3\u7b80\u5355\uff0c\u5b9e\u73b0\u8d77\u6765\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u4ee3\u7801\u4e0d\u5bb9\u6613\u51fa\u9519\uff0c\u8c03\u8bd5\u8d77\u6765\u4e5f\u7b80\u5355</li> </ul> <p>\u6240\u4ee5\uff0c\u5927\u90e8\u5206\u7684\u7b80\u5355\u573a\u666f\u4e0b\uff0cBF \u7b97\u6cd5\u662f\u53ef\u4ee5\u6ee1\u8db3\u9700\u6c42\u7684\u3002</p>"},{"location":"ch09_string/bf/#_4","title":"\u53c2\u8003","text":"<p>https://time.geekbang.org/column/article/71187</p> <p>https://www.zhihu.com/question/21923021</p>"},{"location":"ch09_string/bf/#_5","title":"\u9644\u5f55","text":"<pre><code>/**\n * \u66b4\u529b\u641c\u7d22\u6cd5\n *\n * @author weijiaduo\n * @since 2023/3/28\n */\npublic class BruteForceSearch implements Search {\n\n    @Override\n    public int search(String pat, String txt) {\n        int n = txt.length();\n        int m = pat.length();\n        for (int i = 0; i &lt;= n - m; i++) {\n            int j = 0;\n            for (; j &lt; m; j++) {\n                if (txt.charAt(i + j) != pat.charAt(j)) {\n                    break;\n                }\n            }\n            // \u5339\u914d\u6210\u529f\n            if (j == m) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n}\n</code></pre>"},{"location":"ch09_string/kmp/","title":"KMP \u7b97\u6cd5","text":"<p>KMP \u7b97\u6cd5\u662f\u4e00\u79cd\u5b57\u7b26\u4e32\u5339\u914d\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5728 <code>O(n+m)</code> \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b9e\u73b0\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5339\u914d\u3002</p> <p>KMP \u7b97\u6cd5\u662f\u6839\u636e\u4e09\u4f4d\u4f5c\u8005\uff08D.E.Knuth\uff0cJ.H.Morris \u548c V.R.Pratt\uff09\u7684\u540d\u5b57\u6765\u547d\u540d\u7684\uff0c\u5168\u79f0\u662f Knuth-Morris-Pratt \u7b97\u6cd5\u3002</p>"},{"location":"ch09_string/kmp/#_1","title":"\u4e00\u3001\u66b4\u529b\uff1a\u4e00\u6b21\u6ed1\u4e00\u4f4d","text":"<p>\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u5c31\u662f\u66b4\u529b\u9010\u4f4d\u5339\u914d\uff0c\u6bd4\u5982\uff1a</p> <pre><code>// \u7b2c1\u8f6e\na b c a b c a b d\na b c a b d\n</code></pre> <pre><code>// \u7b2c2\u8f6e\na b c a b c a b d\n  a b c a b d\n</code></pre> <pre><code>// \u7b2c3\u8f6e\na b c a b c a b d\n    a b c a b d\n</code></pre> <pre><code>// \u7b2c4\u8f6e\na b c a b c a b d\n      a b c a b d\n</code></pre> <p>\u66b4\u529b\u5339\u914d\u7684\u601d\u8def\u5f88\u7b80\u5355\uff0c\u5c31\u662f\uff1a</p> <ul> <li>\u6bcf\u6b21\u5339\u914d\u5931\u8d25\uff0c\u6a21\u5f0f\u4e32\u5c31\u5f80\u540e\u79fb\u52a8\u4e00\u4f4d\uff0c\u518d\u91cd\u65b0\u5f00\u59cb\u5339\u914d</li> </ul> <p>\u8fd9\u79cd\u65b9\u5f0f\u975e\u5e38\u6162\uff0c\u590d\u6742\u5ea6\u8d85\u9ad8\uff0c\u4e0d\u9002\u5408\u5927\u89c4\u6a21\u6587\u672c\u7684\u5339\u914d\u3002</p>"},{"location":"ch09_string/kmp/#_2","title":"\u4e8c\u3001\u60f3\u6cd5\uff1a\u4e00\u6b21\u6ed1\u51e0\u4f4d","text":"<p>\u65e2\u7136\u66b4\u529b\u5339\u914d\u5931\u8d25\u540e\uff0c\u4e00\u4f4d\u4e00\u4f4d\u5730\u6ed1\u52a8\u5f88\u6162\uff0c\u90a3\u5982\u679c\uff1a</p> <ul> <li>\u5229\u7528\u4e4b\u524d\u7684\u5339\u914d\u4fe1\u606f\uff0c\u5339\u914d\u5931\u8d25\u540e\uff0c\u5c3d\u91cf\u4e00\u6b21\u6ed1\u591a\u51e0\u4f4d</li> </ul> <p>\u8fd9\u6837\u7684\u5339\u914d\u65b9\u5f0f\u662f\u5426\u80fd\u591f\u63d0\u5347\u6027\u80fd\uff1f</p> <p>\u6bd4\u5982\uff1a</p> <pre><code>// \u7b2c1\u8f6e\na b c a b c a b d\na b c a b d\n</code></pre> <p>\u5f88\u660e\u663e\u540e\u97622\u4f4d\uff08<code>bc</code>\uff09\u90fd\u4e0d\u662f <code>a</code>\uff0c\u6240\u4ee5\u4e0d\u7528\u5339\u914d\u4e86\uff0c\u76f4\u63a5\u6ed1\u8fc7\uff1a</p> <pre><code>// \u7b2c2\u8f6e\na b c a b c a b d\n      a b c a b d\n</code></pre> <p>\u5982\u679c\u6bcf\u6b21\u90fd\u80fd\u6ed1\u591a\u51e0\u4f4d\uff0c\u90a3\u4e48\u5c31\u80fd\u51cf\u5c11\u5339\u914d\u7684\u8f6e\u6570\uff0c\u901f\u5ea6\u4f1a\u5927\u5927\u63d0\u5347\u3002</p> <p>\u4e0d\u8fc7\uff0c\u5047\u5982\u80fd\u6ed1\u591a\u51e0\u4f4d\uff0c\u90a3\u4e48\u80fd\u6ed1\u591a\u8fdc\u5462\uff1f</p> <ul> <li>\u6ed1\u5230\u4e0b\u4e00\u4e2a\u53ef\u80fd\u5339\u914d\u6210\u529f\u7684\u4f4d\u7f6e</li> </ul> <p>\u6bd4\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u4e0b\u4e00\u4e2a\u53ef\u80fd\u5339\u914d\u7684\u4f4d\u7f6e\uff08\u5f00\u5934\u662f <code>a</code>\uff09\u662f\uff1a</p> <pre><code>              -----\nT:     a b c | a b | c a b d\nP:     a b c | a b | d \nP:        -&gt; | a b | c a b d\n              -----\n</code></pre> <p>\u89c2\u5bdf\u53d1\u73b0\uff1a</p> <ul> <li>\u4e0a\u4e00\u8f6e\u5df2\u7ecf\u5339\u914d\u597d\u7684\u5b50\u4e32\u662f\uff1a<code>abcab</code></li> <li>\u4e0b\u4e00\u8f6e\u5f00\u59cb\uff1a<code>abcab</code> \u7684\u524d\u7f00\u5b50\u4e32\uff08<code>ab</code>\uff09\u548c\u540e\u7f00\u5b50\u4e32\uff08<code>ab</code>\uff09\u521a\u597d\u6709\u4ea4\u96c6\u7684\u4f4d\u7f6e</li> </ul> <p>\u5176\u6ed1\u52a8\u6548\u679c\u5c31\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>\u524d\u7f00\u5b50\u4e32    \u540e\u7f00\u5b50\u4e32\n ----       ----\n| ab |  c  | ab |\n ----       ----\n            ----       ----\n   --&gt;     | ab |  c  | ab |\n            ----       ----\n</code></pre> <p>\u8fd9\u4e2a\u6ed1\u52a8\uff0c\u5b9e\u9645\u5c31\u662f\u5c06\u300c\u524d\u7f00\u5b50\u4e32\u300d\u6ed1\u5230\u300c\u540e\u7f00\u5b50\u4e32\u300d\u7684\u4f4d\u7f6e\uff0c\u5373 <code>ab</code> \u7684\u4f4d\u7f6e\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u8981\u627e\u5230\u8fd9\u79cd\u76f8\u7b49\u524d\u540e\u7f00\u5b50\u4e32\uff0c\u6bcf\u6b21\u5339\u914d\u5931\u8d25\u540e\u5c31\u80fd\u4e00\u6b21\u5f80\u540e\u6ed1\u591a\u51e0\u4f4d\u3002</p>"},{"location":"ch09_string/kmp/#pmt","title":"\u4e09\u3001\u5b9e\u73b0\uff1aPmt \u6570\u7ec4\u7684\u5339\u914d","text":"<p>Pmt \u6570\u7ec4\uff0c\u5168\u79f0\u662f\uff1aPartial Match Table\uff0c\u5373\u90e8\u5206\u5339\u914d\u8868\u3002</p> <ul> <li>Pmt \u6570\u7ec4\u8bb0\u5f55\u4e86\u6a21\u5f0f\u4e32\u6bcf\u4e2a\u5b50\u4e32\u7684\u6700\u957f\u76f8\u7b49\u524d\u540e\u7f00\u7684\u957f\u5ea6</li> <li>Pmt \u6570\u7ec4\u672c\u8d28\u4e0a\u662f\u5229\u7528\u4e86\u76f8\u7b49\u524d\u540e\u7f00\u5b50\u4e32\u7684\u6027\u8d28\uff0c\u6765\u52a0\u5feb\u5b57\u7b26\u4e32\u7684\u5339\u914d</li> </ul> <p>\u6bd4\u5982\uff0c\u6a21\u5f0f\u4e32 <code>abcabd</code> \u7684 Pmt \u6570\u7ec4\u4e3a\uff1a</p> <pre><code>P:   a b c a b d\nPmt: 0 0 0 1 2 0\n</code></pre> <p>\u5176\u4e2d\uff0c</p> <ul> <li><code>Pmt[3] = 1</code> \u8868\u793a\uff0c<code>abca</code> \u7684\u6700\u957f\u76f8\u7b49\u524d\u540e\u7f00\u7684\u957f\u5ea6\u4e3a <code>1</code>\uff0c\u5373 <code>a</code></li> <li><code>Pmt[4] = 2</code> \u8868\u793a\uff0c<code>abcab</code> \u7684\u6700\u957f\u76f8\u7b49\u524d\u540e\u7f00\u7684\u957f\u5ea6\u4e3a <code>2</code>\uff0c\u5373 <code>ab</code></li> </ul> <p>\u5229\u7528 Pmt \u6570\u7ec4\uff0c\u5b57\u7b26\u4e32\u5339\u914d\u8fc7\u7a0b\u53ef\u4ee5\u8fd9\u6837\uff1a</p> <pre><code>if (T[i] == P[j]) {\n   // \u5339\u914d\u6210\u529f\uff0ci \u548c x \u540c\u65f6\u5411\u540e\u79fb\u52a8\u4e00\u4f4d\n   i++;\n   j++;\n} else {\n   // \u5339\u914d\u5931\u8d25\n   if (j &gt; 0) {\n      // \u6a21\u5f0f\u4e32\u6ed1\u5230\u6700\u957f\u76f8\u7b49\u524d\u540e\u7f00\u7684\u4f4d\u7f6e\u91cd\u65b0\u5f00\u59cb\n      j = Pmt[j - 1];\n   } else {\n      // \u7b2c\u4e00\u4e2a\u5b57\u7b26\u5c31\u5339\u914d\u5931\u8d25\uff0ci \u5411\u540e\u79fb\u52a8\u4e00\u4f4d\n      i++;\n   }\n}\n</code></pre> <p>\u5176\u4e2d\uff0c<code>j = pmt[j - 1]</code> \u5b9e\u9645\u4e0a\u5c31\u662f\u5c06\u6a21\u5f0f\u4e32\u6ed1\u52a8\u5230\u6700\u957f\u76f8\u7b49\u524d\u540e\u7f00\u7684\u4f4d\u7f6e\u3002</p> <p>Pmt \u6570\u7ec4\u7684\u5339\u914d\u8fc7\u7a0b\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>            \u5339\u914d\u5931\u8d25\n               |\n               v\nT:   a b c a b c a b d\nP:   a b c a b d\nPmt: 0 0 0 1 2 0\n</code></pre> <p>\u6b64\u65f6\uff0c<code>j = 5</code>\uff0c<code>pmt[j - 1] = 2</code>\u3002</p> <p>\u7136\u540e\u4fdd\u6301\u4e3b\u4e32\u4f4d\u7f6e\u4e0d\u53d8\uff0c\u6a21\u5f0f\u4e32\u5f80\u540e\u6ed1\u52a8\uff0c\u4ece\u7d22\u5f15 2 \u5f00\u59cb\u91cd\u65b0\u5339\u914d\uff1a</p> <pre><code>            \u91cd\u65b0\u5f00\u59cb\n               |\n               v\nT:   a b c a b c a b d\nP:         a b c a b d\nPmt:       0 0 0 1 2 0\n</code></pre> <p>\u6309\u7167\u8fd9\u79cd\u65b9\u5f0f\u4e0d\u65ad\u5339\u914d\u4e0b\u53bb\uff0c\u76f4\u5230\u5339\u914d\u7ed3\u675f\u4e3a\u6b62\u3002</p> <ul> <li>\u5339\u914d\u8fc7\u7a0b\u4e2d\uff0c\u4e3b\u4e32\u7d22\u5f15\u53ea\u4f1a\u4e0d\u65ad\u9012\u589e\uff0c\u800c\u4e0d\u4f1a\u56de\u5934</li> </ul> <p>\u6240\u4ee5\uff0c\u76f8\u6bd4\u4e8e\u66b4\u529b\u7684\u9010\u4f4d\u5339\u914d\uff0cPmt \u6570\u7ec4\u53ef\u4ee5\u6781\u5927\u5730\u63d0\u5347\u5339\u914d\u901f\u5ea6\uff1a</p> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u66b4\u529b\u5339\u914d\u662f <code>O(m * n)</code>\uff1b\u800c Pmt \u7684\u662f <code>O(m + n)</code></li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u66b4\u529b\u5339\u914d\u662f <code>O(1)</code>\uff1b\u800c Pmt \u7684\u662f <code>O(m)</code></li> </ul> <p>\u867d\u7136\u7a7a\u95f4\u590d\u6742\u5ea6\u4ece <code>O(1)</code> \u5347\u5230\u4e86 <code>O(m)</code>\uff0c\u4f46\u662f\u6a21\u5f0f\u4e32 <code>m</code> \u4e00\u822c\u90fd\u6bd4\u8f83\u5c0f\uff0c\u6240\u4ee5\u4e5f\u4e0d\u662f\u5f88\u5927\u7684\u95ee\u9898\u3002</p> <p>\u800c\u5bf9\u4e8e\u5927\u6587\u672c\u5339\u914d\u6765\u8bf4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4ece <code>O(m * n)</code> \u964d\u5230\u4e86 <code>O(m + n)</code>\uff0c\u5219\u662f\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u63d0\u5347\u3002</p>"},{"location":"ch09_string/kmp/#pmt_1","title":"\u56db\u3001\u5173\u952e\uff1aPmt \u6570\u7ec4\u7684\u6784\u9020","text":"<p>Pmt \u6570\u7ec4\u786e\u5b9e\u53ef\u4ee5\u63d0\u5347\u5339\u914d\u901f\u5ea6\uff0c\u90a3\u4e48\u5982\u4f55\u6c42\u5f97 Pmt \u6570\u7ec4\u5462\uff1f</p> <ul> <li>\u5229\u7528\u52a8\u6001\u89c4\u5212\uff0c\u901a\u8fc7 <code>Pmt[0]</code> ... <code>Pmt[i]</code> \u6765\u6c42 <code>Pmt[i + 1]</code></li> </ul> <p>\u5047\u8bbe\u5df2\u7ecf\u77e5\u9053\u4e86 <code>Pmt[i-1] = k</code>\uff0c\u5373\u610f\u5473\u7740\u6a21\u5f0f\u4e32\uff1a<code>P[0..k-1]</code> == <code>P[i-k..i-1]</code>\uff1a</p> <pre><code>          ----------\u76f8\u7b49----------\n         |                       |\n         v                       v\n    ------------         --------------\nP: | 0  ..  k-1 | k ... | i-k  ..  i-1 | i\n    ------------         --------------\n</code></pre> <p>\u90a3\u4e48\u5bf9\u4e8e <code>Pmt[i]</code> \u800c\u8a00\uff0c\u53ef\u5206\u4e3a 2 \u79cd\u60c5\u51b5\uff1a</p> <p>(1) <code>P[k]</code> == <code>P[i]</code></p> <p>\u5f88\u660e\u663e\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b <code>Pmt[i]</code> \u53ea\u9700\u8981\u5728\u4e0a\u4e00\u4e2a\u7684\u57fa\u7840\u4e0a\u6269\u5c55\u4e00\u4f4d\u5c31\u884c\u4e86\uff0c\u5373\uff1a</p> <ul> <li><code>Pmt[i]</code> = <code>k + 1</code></li> </ul> <p>\u6269\u5c55\u540e\u7684\u6548\u679c\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>          ----------\u76f8\u7b49----------\n         |                       |\n         v                       v\n    ---------------       -----------------\nP: | 0  ..  k-1  k | ... | i-k  ..  i-1  i |\n    ---------------       -----------------\n</code></pre> <p>(2) <code>P[k]</code> != <code>P[i]</code></p> <p>\u8fd9\u4e2a\u65f6\u5019\uff0c\u4e3a\u4e86\u4f7f\u5f97\u524d\u540e\u7f00\u76f8\u7b49\uff0c\u5c31\u9700\u8981\u7f29\u77ed\u524d\u540e\u7f00\u957f\u5ea6\uff0c\u76f4\u5230\u627e\u5230 <code>P[x]</code> == <code>P[i]</code> \u4e3a\u6b62\uff1a</p> <pre><code>          ------------------\u76f8\u7b49-----------------\n         |                                      |\n         v                                      v\n    ------------                         --------------\nP: | 0  ..  x-1 | x ... k-1 ... i-k ... | i-x  ..  i-1 | i\n    ------------                         --------------\n</code></pre> <p>\u5176\u4e2d\uff0c\u6bcf\u6b21\u7f29\u77ed\uff0c\u65b0\u7684\u524d\u540e\u7f00\u90fd\u8981\u6c42\u6ee1\u8db3\u8fd9\u6837\u7684\u5173\u7cfb\uff1a</p> <ul> <li><code>P[0..x-1]</code> == <code>P[i-x..i-1]</code></li> <li><code>P[0..x-1]</code> \u662f <code>P[0..k-1]</code> \u7684\u524d\u7f00</li> <li><code>P[i-x..i-1]</code> \u662f <code>P[i-k..i-1]</code> \u7684\u540e\u7f00</li> </ul> <p>\u800c\u4e14\u7531\u4e8e\u524d\u63d0\u6761\u4ef6\u4e2d <code>P[0..k-1]</code> == <code>P[i-k..i-1]</code>\uff0c\u56e0\u6b64\uff1a</p> <ul> <li><code>P[0..x-1]</code> \u662f <code>P[0..k-1]</code> \u7684\u524d\u7f00</li> <li><code>P[i-x..i-1]</code> \u662f <code>P[0..k-1]</code> \u7684\u540e\u7f00</li> </ul> <p>\u7b80\u5355\u6765\u8bf4\u5c31\u662f\uff1a</p> <ul> <li><code>P[0..x-1]</code> \u662f <code>P[0..k-1]</code> \u7684\u4e00\u4e2a\u76f8\u7b49\u524d\u540e\u7f00</li> </ul> <p>\u4e3a\u4e86\u6c42\u6700\u957f\u7684\u76f8\u7b49\u524d\u540e\u7f00\uff0cx \u5e94\u8be5\u5c3d\u91cf\u5730\u5927\uff0c\u5426\u5219\u627e\u5230\u7684\u5c31\u4e0d\u662f\u6700\u957f\u7684\u76f8\u7b49\u524d\u540e\u7f00\u4e86\u3002</p> <ul> <li>\u8981\u4fdd\u8bc1 x \u5c3d\u91cf\u5730\u5927\uff0c\u56e0\u6b64 <code>P[0..x-1]</code> \u5b9e\u9645\u4e0a\u5c31\u662f <code>P[0..k-1]</code> \u6700\u957f\u76f8\u7b49\u524d\u540e\u7f00</li> </ul> <p>\u6240\u4ee5\uff0c\u627e <code>P[x]</code> == <code>P[i]</code> \u7684\u8fc7\u7a0b\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>while (x &gt; 0 &amp;&amp; P[x] != P[i]) {\n    x = pmt[x - 1];\n}\n</code></pre> <p>\u5c31\u662f\u4e00\u4e2a\u4e0d\u65ad\u9012\u5f52\u5bfb\u627e\u4e0a\u4e00\u7ea7\u6700\u957f\u76f8\u7b49\u524d\u540e\u7f00\uff0c\u518d\u5339\u914d\u7684\u8fc7\u7a0b\u3002</p> <p>\u7efc\u5408\u4e0a\u9762\u7684 2 \u79cd\u60c5\u51b5\uff0cPmt \u6570\u7ec4\u6784\u9020\u5bf9\u5e94\u7684\u4ee3\u7801\u5c31\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>if (P[j] == P[i]) {\n   // \u6700\u957f\u76f8\u7b49\u524d\u540e\u7f00\u957f\u5ea6\n   pmt[i] = j + 1;\n   i++;\n   j++;\n} else {\n   if (j != 0) {\n      // \u627e\u6b21\u957f\u76f8\u7b49\u524d\u540e\u7f00\u9012\u5f52\u5339\u914d\n      j = pmt[j - 1];\n   } else {\n      // \u4e00\u5f00\u59cb\u5c31\u5339\u914d\u5931\u8d25\u4e86\n      pmt[i] = 0;\n      i++;\n   }\n}\n</code></pre> <p>\u81f3\u6b64\uff0cPmt \u6570\u7ec4\u7684\u6784\u9020\u5c31\u5b8c\u6210\u4e86\u3002</p>"},{"location":"ch09_string/kmp/#next","title":"\u4e94\u3001\u6539\u8fdb\uff1aNext \u6570\u7ec4","text":"<p>\u5728 Pmt \u7b97\u6cd5\u4e2d\uff0c\u4e00\u65e6\u7b2c j \u4f4d\u5339\u914d\u5931\u8d25\uff0c\u5c31\u4f1a\u7528 <code>Pmt[j-1]</code> \u8fdb\u884c\u56de\u6eaf\uff0c\u6240\u4ee5\uff1a</p> <ul> <li>\u4e3a\u4e86\u7f16\u7a0b\u65b9\u4fbf\uff0c\u76f4\u63a5\u5c06 Pmt \u6570\u7ec4\u5411\u53f3\u79fb\u52a8 1 \u4f4d\uff0c\u5f97\u5230 Next \u6570\u7ec4</li> </ul> <p>Next \u6570\u7ec4\u7684\u7ed3\u679c\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>P:    a b c a b d\nPmt:  0 0 0 1 2 0\nNext:   0 0 0 1 2\n</code></pre> <p>\u81f3\u4e8e\u7b2c 0 \u4f4d\u7684\u503c\uff0c\u53ef\u4ee5\u8d4b\u503c\u4e3a -1\uff0c\u8fd9\u6837\u505a\u53ea\u662f\u4e3a\u4e86\u7f16\u7a0b\u65b9\u9762\uff0c\u5e76\u65e0\u5176\u4ed6\u610f\u4e49\u3002</p> <pre><code>P:     a b c a b d\nPmt:   0 0 0 1 2 0\nNext: -1 0 0 0 1 2\n</code></pre> <p>\u57fa\u4e8e Next \u6570\u7ec4\u7684\u7b97\u6cd5\u548c\u57fa\u4e8e Pmt \u7684\u7b97\u6cd5\u662f\u4e00\u6837\u7684\uff0c\u53ea\u662f\u5728\u7f16\u7a0b\u4e0a\u66f4\u52a0\u65b9\u4fbf\u4e86\u3002</p> <p>Next \u6570\u7ec4\u7684\u5339\u914d\u7b97\u6cd5\u5982\u4e0b\uff1a</p> <pre><code>if (j == -1 || P[j] == P[i]) {\n   // \u5339\u914d\u4e3b\u4e32\u548c\u6a21\u5f0f\u4e32\u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26\n   i++;\n   j++;\n} else {\n   // \u4e00\u6b21\u6027\u6ed1\u5230\u6700\u957f\u76f8\u7b49\u524d\u540e\u7f00\u7684\u4f4d\u7f6e\u5f00\u59cb\u5339\u914d\n   j = next[j];\n}\n</code></pre> <p>\u6784\u9020 Next \u6570\u7ec4\u7684\u7b97\u6cd5\u5982\u4e0b\uff1a</p> <pre><code>if (j == -1 || P[j] == P[i]) {\n   i++;\n   j++;\n   // \u6700\u957f\u76f8\u7b49\u524d\u540e\u7f00\u957f\u5ea6\uff0c\u7d22\u5f15\u53f3\u79fb\u4e861\u4f4d\n   next[i] = j;\n} else {\n   // \u627e\u6b21\u957f\u76f8\u7b49\u524d\u540e\u7f00\u9012\u5f52\u5339\u914d\n   j = next[j];\n}\n</code></pre> <p>Next \u6570\u7ec4\u548c Pmt \u6570\u7ec4\u5e76\u6ca1\u6709\u672c\u8d28\u533a\u522b\uff0c\u7b97\u6cd5\u590d\u6742\u5ea6\u662f\u4e00\u6837\u7684\u3002</p> <p>Next \u6570\u7ec4\u6539\u53d8\u7684\u4ec5\u4ec5\u662f\u7f16\u7a0b\u7684\u4fbf\u5229\u6027\uff0c\u5728\u5b9e\u9645\u4e2d\uff0cNext \u6570\u7ec4\u4f1a\u66f4\u5e38\u7528\u4e00\u4e9b\u3002</p>"},{"location":"ch09_string/kmp/#_3","title":"\u53c2\u8003","text":"<p>https://time.geekbang.org/column/article/71845</p> <p>https://www.zhihu.com/question/21923021</p> <p>https://zhuanlan.zhihu.com/p/83334559</p> <p>https://oi-wiki.org/string/kmp/</p>"},{"location":"ch09_string/kmp/#_4","title":"\u9644\u5f55","text":""},{"location":"ch09_string/kmp/#pmt-kmp","title":"\u57fa\u4e8e Pmt \u6570\u7ec4\u7684 KMP \u7b97\u6cd5\u5b9e\u73b0","text":"<pre><code>/**\n * KMP(Partial Match Table) \u7b97\u6cd5\n *\n * @author weijiaduo\n * @since 2023/3/28\n */\npublic class PmtKMP {\n\n    public int search(String pat, String txt) {\n        int[] pmt = getPmt(pat);\n        int i = 0, j = 0;\n        int m = pat.length(), n = txt.length();\n        while (i &lt; n &amp;&amp; j &lt; m) {\n            if (txt.charAt(i) == pat.charAt(j)) {\n                // \u5339\u914d\u6210\u529f\uff0c\u5339\u914d\u4e0b\u4e00\u4e2a\u5b57\u7b26\n                i++;\n                j++;\n            } else {\n                // \u5339\u914d\u5931\u8d25\n                if (j != 0) {\n                    // \u6a21\u5f0f\u4e32\u6ed1\u5230\u6700\u957f\u76f8\u7b49\u524d\u540e\u7f00\u7684\u4f4d\u7f6e\u91cd\u65b0\u5f00\u59cb\n                    j = pmt[j - 1];\n                } else {\n                    // \u7b2c\u4e00\u4e2a\u5b57\u7b26\u5c31\u5339\u914d\u5931\u8d25\u4e86\n                    i++;\n                }\n            }\n        }\n        // \u5339\u914d\u6210\u529f\n        if (j == m) {\n            return i - j;\n        }\n        return -1;\n    }\n\n    /**\n     * \u83b7\u53d6 Partial Match Table\n     * &lt;p&gt;\n     * pmt[i] \u8868\u793a pat[0...i] \u7684\u6700\u957f\u76f8\u7b49\u524d\u540e\u7f00\u7684\u957f\u5ea6\n     *\n     * @param pat \u6a21\u5f0f\u4e32\n     * @return pmt \u6570\u7ec4\n     */\n    private int[] getPmt(String pat) {\n        int m = pat.length();\n        int[] pmt = new int[m];\n        pmt[0] = 0;\n        int i = 1, j = 0;\n        while (i &lt; m) {\n            if (pat.charAt(i) == pat.charAt(j)) {\n                // \u6700\u957f\u76f8\u7b49\u524d\u540e\u7f00\u957f\u5ea6\n                pmt[i] = j + 1;\n                i++;\n                j++;\n            } else {\n                if (j != 0) {\n                    // \u627e\u6b21\u957f\u76f8\u7b49\u524d\u540e\u7f00\u9012\u5f52\u5339\u914d\n                    j = pmt[j - 1];\n                } else {\n                    // \u4e00\u5f00\u59cb\u5c31\u5339\u914d\u5931\u8d25\u4e86\n                    pmt[i] = 0;\n                    i++;\n                }\n            }\n        }\n        return pmt;\n    }\n\n}\n</code></pre>"},{"location":"ch09_string/kmp/#next-kmp","title":"\u57fa\u4e8e Next \u6570\u7ec4\u7684 KMP \u7b97\u6cd5\u5b9e\u73b0","text":"<pre><code>/**\n * KMP(Next Match Table) \u7b97\u6cd5\n *\n * @author weijiaduo\n * @since 2023/3/28\n */\npublic class NextKMP {\n\n    public int search(String pat, String txt) {\n        int[] next = getNext(pat);\n        int i = 0, j = 0;\n        int m = pat.length(), n = txt.length();\n        while (i &lt; n &amp;&amp; j &lt; m) {\n            if (j == -1 || txt.charAt(i) == pat.charAt(j)) {\n                // \u5339\u914d\u4e3b\u4e32\u548c\u6a21\u5f0f\u4e32\u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26\n                i++;\n                j++;\n            } else {\n                // \u4e00\u6b21\u6027\u6ed1\u5230\u6700\u957f\u76f8\u7b49\u524d\u540e\u7f00\u7684\u4f4d\u7f6e\u5f00\u59cb\u5339\u914d\n                j = next[j];\n            }\n        }\n        // \u5339\u914d\u6210\u529f\n        if (j == m) {\n            return i - j;\n        }\n        return -1;\n    }\n\n    /**\n     * \u83b7\u53d6 Next Match Table\n     * &lt;p&gt;\n     * next[i] \u8868\u793a\u6a21\u5f0f\u4e32\u4e0b\u4e00\u6b21\u8fdb\u884c\u6bd4\u8f83\u7684\u7d22\u5f15\u4f4d\u7f6e\n     * &lt;p&gt;\n     * next[i] \u4e5f\u8868\u793a pat[0...j-1] \u7684\u6700\u957f\u76f8\u7b49\u524d\u540e\u7f00\u7684\u957f\u5ea6\n     * &lt;p&gt;\n     * next \u6570\u7ec4\u5b9e\u9645\u5c31\u662f pmt \u6570\u7ec4\u5f80\u53f3\u79fb\u52a8\u4e00\u4f4d\u5f97\u5230\u7684\n     *\n     * @param pat \u6a21\u5f0f\u4e32\n     * @return next \u6570\u7ec4\n     */\n    private int[] getNext(String pat) {\n        int m = pat.length();\n        int[] next = new int[m];\n        next[0] = -1;\n        int i = 0, j = -1;\n        while (i &lt; m - 1) {\n            if (j == -1 || pat.charAt(i) == pat.charAt(j)) {\n                i++;\n                j++;\n                // \u6700\u957f\u76f8\u7b49\u524d\u540e\u7f00\u957f\u5ea6\uff0c\u7d22\u5f15\u53f3\u79fb\u4e861\u4f4d\n                next[i] = j;\n            } else {\n                // \u627e\u6b21\u957f\u76f8\u7b49\u524d\u540e\u7f00\u9012\u5f52\u5339\u914d\n                j = next[j];\n            }\n        }\n        return next;\n    }\n\n}\n</code></pre>"},{"location":"ch09_string/rk/","title":"RK \u7b97\u6cd5","text":"<p>RK \u7b97\u6cd5\u5168\u79f0\u662f Rabin-Karp \u7b97\u6cd5\uff0c\u7531\u5b83\u7684\u4e24\u4f4d\u53d1\u660e\u8005 Rabin \u548c Karp \u7684\u540d\u5b57\u6765\u547d\u540d\u3002</p>"},{"location":"ch09_string/rk/#_1","title":"\u4e00\u3001\u539f\u7406","text":"<p>\u66b4\u529b\u5339\u914d\u7b97\u6cd5\u6700\u5927\u7684\u95ee\u9898\u5c31\u662f\uff0c\u6bcf\u6b21\u90fd\u9700\u8981\u5bf9\u5b50\u4e32\u7684\u6bcf\u4e2a\u5b57\u7b26\u8fdb\u884c\u5339\u914d\u5224\u65ad\uff0c\u91cd\u590d\u5de5\u4f5c\u975e\u5e38\u591a\u3002</p> <p>RK \u7b97\u6cd5\u7684\u601d\u60f3\u5c31\u662f\uff0c\u4e0d\u53bb\u5339\u914d\u6bcf\u4e2a\u5b57\u7b26\uff0c\u800c\u662f\u5c06\u5b50\u4e32\u6620\u5c04\u6210\u4e00\u4e2a\u54c8\u5e0c\u6570\u503c\uff0c\u7136\u540e\u5229\u7528\u8fd9\u4e2a\u54c8\u5e0c\u503c\u53bb\u76f4\u63a5\u5339\u914d\u3002</p> <p>\u5229\u7528\u5b50\u4e32\u54c8\u5e0c\u503c\u5339\u914d\u7684\u8fc7\u7a0b\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>pat: abc          = 963        -- \u6a21\u5f0f\u4e32\u54c8\u5e0c\u503c\ntxt: ababababca\nsub: aba          = 652\n      bab         = 728\n       aba        = 31\n        bab       = 314\n         aba      = 201\n          bab     = 442\n           abc    = 963        -- \u5339\u914d\u6210\u529f\n            bca   = 864\n</code></pre> <p>\u5c06\u5b50\u4e32\u6620\u5c04\u6210\u4e00\u4e2a\u54c8\u5e0c\u503c\u540e\uff0c\u5982\u679c\u6a21\u5f0f\u4e32\u54c8\u5e0c\u503c\u548c\u5b50\u4e32\u54c8\u5e0c\u503c\u76f8\u7b49\uff0c\u90a3\u57fa\u672c\u4e0a\u5c31\u80fd\u8bf4\u660e\u5b50\u4e32\u548c\u6a21\u5f0f\u4e32\u5339\u914d\u6210\u529f\u4e86\u3002</p> <p>\u800c\u4e14\u56e0\u4e3a\u54c8\u5e0c\u503c\u662f\u6570\u5b57\uff0c\u6570\u5b57\u4e4b\u95f4\u7684\u6bd4\u8f83\u662f\u975e\u5e38\u5feb\u901f\u7684\uff0c\u6240\u4ee5 RK \u7b97\u6cd5\u7684\u6548\u7387\u5c31\u6bd4\u66b4\u529b\u7b97\u6cd5\u9ad8\u4e86\u5f88\u591a\u3002</p> <p>\u4f46\u662f\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5982\u4f55\u8ba1\u7b97\u5b50\u4e32\u7684\u54c8\u5e0c\u503c\u5462\uff1f\u5982\u679c\u9700\u8981\u904d\u5386\u6bcf\u4e2a\u5b57\u7b26\u6765\u8ba1\u7b97\uff0c\u90a3\u4e48\u6548\u7387\u5c31\u548c\u66b4\u529b\u7b97\u6cd5\u4e00\u6837\u4e86\uff0c\u6ca1\u4ec0\u4e48\u610f\u4e49\u3002</p> <p>\u56e0\u6b64 RK \u7b97\u6cd5\u91c7\u7528\u4e86\u4e00\u79cd\u66f4\u9ad8\u6548\u7684\u8ba1\u7b97\u65b9\u5f0f\uff0c\u90a3\u5c31\u662f\u7c7b\u4f3c\u6ed1\u52a8\u7a97\u53e3\u7684\u54c8\u5e0c\u7b97\u6cd5\uff08\u8fd9\u91cc\u5047\u8bbe\u5b57\u6bcd\u54c8\u5e0c\u662f\u5b57\u6bcd\u672c\u8eab\uff09\uff1a</p> <pre><code>txt: ababababca\nsub: aba          = a*26*26 + b*26 + a\n      bab         =           b*26*26 + a*26 + b\n       aba        =                     a*26*26 + b*26 + a\n        bab       =                               b*26*26 + a*26 + b\n        ...\n</code></pre> <p>\u539f\u7406\u5f88\u7b80\u5355\uff0c\u8ba1\u7b97\u4e0b\u4e00\u4e2a\u5b50\u4e32\u7684\u54c8\u5e0c\u503c\u65f6\uff0c\u53ef\u4ee5\u5229\u7528\u4e0a\u4e00\u4e2a\u5b50\u4e32\u7684\u54c8\u5e0c\u503c\u7b97\u51fa\u6765\uff0c\u907f\u514d\u4e86\u6bcf\u6b21\u90fd\u904d\u5386\u6240\u6709\u5b57\u7b26\u3002</p> <ol> <li>\u9996\u5148\u51cf\u53bb\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u54c8\u5e0c\u503c</li> <li>\u7136\u540e\u4e58\u4ee5\u8fdb\u5236\u6570\uff08\u6bd4\u5982\u4f8b\u5b50\u91cc\u7684 26\uff09</li> <li>\u6700\u540e\u52a0\u4e0a\u65b0\u589e\u5b57\u7b26\u7684\u54c8\u5e0c\u503c</li> </ol> <p>\u8fd9\u6837\u5c31\u80fd\u5f97\u5230\u4e0b\u4e00\u4e2a\u5b50\u4e32\u7684\u54c8\u5e0c\u503c\u4e86\uff0c\u8fd9\u79cd\u54c8\u5e0c\u8ba1\u7b97\u7684\u601d\u8def\u5c31\u50cf\u662f\u6ed1\u52a8\u7a97\u53e3\u4e00\u6837\uff0c\u6bcf\u6b21\u6ed1\u52a8\u4e00\u70b9\u70b9\u8ddd\u79bb\u3002</p> <p>\u4e0d\u8fc7\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u5b50\u4e32\u7684\u957f\u5ea6\u5f88\u957f\uff0c\u90a3\u4e48\u54c8\u5e0c\u503c\u53ef\u80fd\u4f1a\u8d85\u51fa\u6570\u5b57\u7684\u8868\u793a\u8303\u56f4\uff08\u6ea2\u51fa\uff09\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u54c8\u5e0c\u503c\u53d6\u6a21\u3002</p> <pre><code>txt: ababababca\nsub: aba          = (a*26*26 + b*26 + a) % MOD\n      bab         =           (b*26*26 + a*26 + b) % MOD\n       aba        =                     (a*26*26 + b*26 + a) % MOD\n        bab       =                               (b*26*26 + a*26 + b) % MOD\n        ...\n</code></pre> <p>\u5176\u4e2d MOD \u662f\u4e00\u4e2a\u6bd4\u8f83\u5927\u7684\u8d28\u6570\uff0c\u8fd9\u65e2\u53ef\u4ee5\u4fdd\u8bc1\u54c8\u5e0c\u503c\u4e0d\u4f1a\u8d85\u51fa\u6570\u5b57\u7684\u8868\u793a\u8303\u56f4\uff08\u6ea2\u51fa\uff09\uff0c\u53c8\u80fd\u5c3d\u91cf\u907f\u514d\u54c8\u5e0c\u51b2\u7a81\u3002</p>"},{"location":"ch09_string/rk/#_2","title":"\u4e8c\u3001\u9a8c\u8bc1","text":"<p>\u4f7f\u7528\u54c8\u5e0c\u503c\u6765\u8fdb\u884c\u5339\u914d\uff0c\u867d\u7136\u6548\u7387\u5f88\u9ad8\uff0c\u4f46\u662f\u4e5f\u6709\u53ef\u80fd\u51fa\u73b0\u54c8\u5e0c\u503c\u76f8\u7b49\uff0c\u4f46\u662f\u5b50\u4e32\u548c\u6a21\u5f0f\u4e32\u5e76\u4e0d\u76f8\u7b49\u7684\u60c5\u51b5\u3002</p> <p>\u56e0\u6b64\u5728\u54c8\u5e0c\u503c\u76f8\u7b49\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd8\u9700\u8981\u9a8c\u8bc1\u662f\u5426\u771f\u7684\u5339\u914d\u6210\u529f\u4e86\uff0c\u9a8c\u8bc1\u7684\u65b9\u5f0f\u5206\u4e3a 2 \u79cd\uff1a</p> <ul> <li>\u8499\u7279\u5361\u6d1b\u7b97\u6cd5\uff1a\u53ea\u9a8c\u8bc1\u54c8\u5e0c\u503c\u662f\u5426\u76f8\u7b49\uff0c\u4e0d\u9a8c\u8bc1\u5b50\u4e32\u548c\u6a21\u5f0f\u4e32\u662f\u5426\u76f8\u7b49</li> <li>\u62c9\u65af\u7ef4\u52a0\u65af\u7b97\u6cd5\uff1a\u5148\u9a8c\u8bc1\u54c8\u5e0c\u503c\u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u76f8\u7b49\u518d\u9a8c\u8bc1\u5b50\u4e32\u548c\u6a21\u5f0f\u4e32\u662f\u5426\u76f8\u7b49</li> </ul> <p>\u8499\u7279\u5361\u6d1b\u7b97\u6cd5\u7684\u4f18\u70b9\u662f\u7b80\u5355\u9ad8\u6548\uff0c\u4f46\u662f\u7f3a\u70b9\u662f\u53ef\u80fd\u4f1a\u51fa\u73b0\u8bef\u5224\uff0c\u5373\u54c8\u5e0c\u503c\u76f8\u7b49\uff0c\u4f46\u662f\u5b50\u4e32\u548c\u6a21\u5f0f\u4e32\u5e76\u4e0d\u76f8\u7b49\u3002</p> <p>\u62c9\u65af\u7ef4\u52a0\u65af\u7b97\u6cd5\u7684\u4f18\u70b9\u662f\u80fd\u591f\u907f\u514d\u8bef\u5224\uff0c\u4f46\u662f\u7f3a\u70b9\u662f\u9700\u8981\u591a\u4e00\u6b21\u9a8c\u8bc1\uff0c\u6548\u7387\u4f1a\u964d\u4f4e\u3002</p>"},{"location":"ch09_string/rk/#_3","title":"\u4e09\u3001\u5206\u6790","text":"<p>\u6240\u6709\u5b50\u4e32\u7684\u54c8\u5e0c\u503c\uff0c\u53ea\u9700\u8981\u904d\u5386\u4e00\u8f6e\u4e3b\u4e32\u5c31\u80fd\u8ba1\u7b97\u51fa\u6765\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n)\u3002</p> <p>\u6bcf\u4e2a\u5b50\u4e32\u4e0e\u6a21\u5f0f\u4e32\u7684\u5339\u914d\uff0c\u53ea\u9700\u8981\u6bd4\u8f83\u4e00\u6b21\u54c8\u5e0c\u503c\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(1)\u3002</p> <p>\u56e0\u6b64\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n)\u3002</p> <p>\u7a7a\u95f4\u590d\u6742\u5ea6\u53ea\u9700\u8981\u5b58\u50a8\u4e00\u4e2a\u54c8\u5e0c\u503c\uff0c\u56e0\u6b64\u662f O(1)\u3002</p>"},{"location":"ch09_string/rk/#_4","title":"\u53c2\u8003","text":"<p>https://time.geekbang.org/column/article/71187</p>"},{"location":"ch09_string/rk/#_5","title":"\u9644\u5f55","text":"<pre><code>/**\n * Rabin Karp \u7b97\u6cd5\uff0c\u53c8\u79f0\u6307\u7eb9\u5b57\u7b26\u4e32\u67e5\u627e\u7b97\u6cd5\n * &lt;p&gt;\n * \u590d\u6742\u5ea6\uff1a\u590d\u6742\u5ea6\uff1a\u6700\u597d\u65f6\u95f4 O(n) \u6700\u574f\u65f6\u95f4 O(mn) \u7a7a\u95f4 O(1)\n *\n * @author weijiaduo\n * @since 2023/3/30\n */\npublic class RabinKarpSearch implements Search {\n\n    /**\n     * \u8fdb\u5236\u6570\n     */\n    private static final int R = 10;\n    /**\n     * \u5bf9\u54c8\u5e0c\u503c\u53d6\u4f59\uff0c\u907f\u514d\u6ea2\u51fa\n     */\n    private long mod = 99999999999997L;\n\n    @Override\n    public int search(String pat, String txt) {\n        int m = pat.length(), n = txt.length();\n        if (m == 0 || n &lt; m) {\n            return -1;\n        }\n\n        mod = longRandomPrime();\n        long phash = 0, thash = 0, rm = 1;\n        for (int i = 0; i &lt; m - 1; i++) {\n            phash = (R * phash + pat.charAt(i)) % mod;\n            thash = (R * thash + txt.charAt(i)) % mod;\n            // \u9996\u5b57\u7b26\u7684\u5e42\u503c R^(M-1)\n            rm = (R * rm) % mod;\n        }\n        phash = (R * phash + pat.charAt(m - 1)) % mod;\n\n        for (int i = m - 1, j = 0; i &lt; n; i++, j++) {\n            // \u8ffd\u52a0\u65b0\u5b57\u7b26\u7684\u54c8\u5e0c\u503c\n            thash = (R * thash + txt.charAt(i)) % mod;\n            // \u9a8c\u8bc1\u5b50\u4e32[j, i]\u4e0e\u6a21\u5f0f\u4e32\u662f\u5426\u5339\u914d\n            if (phash == thash &amp;&amp; check(pat, txt, j, m)) {\n                return j;\n            }\n            // \u51cf\u53bb\u9996\u5b57\u7b26\u7684\u54c8\u5e0c\u503c\n            thash = (thash - txt.charAt(j) * rm + mod) % mod;\n        }\n        return -1;\n    }\n\n    /**\n     * \u6821\u9a8c\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u7b49\n     *\n     * @param pat    \u6a21\u5f0f\u4e32\n     * @param txt    \u4e3b\u4e32\n     * @param offset \u4e3b\u4e32\u8d77\u59cb\u7d22\u5f15\n     * @param length \u957f\u5ea6\n     * @return true/false\n     */\n    private boolean check(String pat, String txt, int offset, int length) {\n        for (int i = 0; i &lt; length; i++) {\n            if (pat.charAt(i) != txt.charAt(offset + i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @return \u968f\u673a\u5927\u7d20\u6570\n     */\n    private static long longRandomPrime() {\n        // \u7d20\u6570\u7684\u5927\u5c0f\u8981\u968f\u7740\u6d4b\u8bd5\u7528\u4f8b\u53d8\u5316\u800c\u4fee\u6539\n        BigInteger prime = BigInteger.probablePrime(42, new Random());\n        return prime.longValue();\n    }\n\n}\n</code></pre>"},{"location":"ch10_sort/","title":"\u6392\u5e8f","text":""},{"location":"ch10_sort/binaryinsertsort/","title":"\u4e8c\u5206\u63d2\u5165\u6392\u5e8f","text":""},{"location":"ch10_sort/binaryinsertsort/#_2","title":"\u4e00\u3001\u7b97\u6cd5\u63cf\u8ff0","text":""},{"location":"ch10_sort/binaryinsertsort/#11","title":"1.1  \u6838\u5fc3\u601d\u60f3","text":"<ul> <li>\u6570\u636e\u5206\u4e3a\u5df2\u6392\u5e8f\u533a\u95f4\u548c\u672a\u6392\u5e8f\u533a\u95f4</li> <li>\u4ece\u672a\u6392\u5e8f\u533a\u95f4\u53d6\u51fa\u5143\u7d20\uff0c\u901a\u8fc7\u4e8c\u5206\u6cd5\u627e\u5230\u5408\u9002\u7684\u4f4d\u7f6e\uff0c\u63d2\u5165\u5230\u5df2\u6392\u5e8f\u533a\u95f4\u4e2d</li> <li>\u63d2\u5165\u5df2\u6392\u5e8f\u533a\u95f4\u65f6\uff0c\u540c\u65f6\u8981\u4fdd\u8bc1\u5df2\u6392\u5e8f\u533a\u95f4\u7684\u6709\u5e8f\u6027</li> </ul> <p>\u603b\u4f53\u4e0a\u548c\u63d2\u5165\u6392\u5e8f\u5dee\u4e0d\u591a\uff0c\u53ea\u662f\u5728\u63d2\u5165\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u6765\u627e\u5230\u5408\u9002\u7684\u63d2\u5165\u4f4d\u7f6e\u3002</p>"},{"location":"ch10_sort/binaryinsertsort/#12","title":"1.2 \u7ec6\u8282\u89e3\u91ca","text":"<p>\u6bd4\u5982\u8bf4\uff0c\u6570\u7ec4 <code>[2, 7, 1, 4, 3, 6, 5]</code>\u3002</p> <p>\u9996\u5148\u5206\u6210\u672a\u6392\u5e8f\u548c\u5df2\u6392\u5e8f\u533a\u95f4\uff0c\u7b2c 1 \u4e2a\u503c\u65e0\u9700\u6392\u5e8f\uff0c\u9ed8\u8ba4\u5c5e\u4e8e\u5df2\u6392\u5e8f\u533a\u95f4\uff1a</p> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n  ___                              ___ ___ ___ ___ ___ ___\n | 2 |                            | 7 | 1 | 4 | 3 | 6 | 5 |\n</code></pre> <p>\u6b64\u65f6\u4ece\u672a\u6392\u5e8f\u533a\u95f4\u4e2d\u53d6\u4e00\u4e2a\u503c 7\uff0c\u63d2\u5165\u5230\u5df2\u6392\u5e8f\u533a\u95f4\uff1a</p> <p>\u901a\u8fc7\u4e8c\u5206\u6cd5\u5b9a\u4f4d\u5230 7 \u5e94\u8be5\u5728\u7684\u4f4d\u7f6e [1]\uff0c\u6240\u4ee5 7 \u76f4\u63a5\u63d2\u5165 [1] \u7684\u4f4d\u7f6e\uff1a</p> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n  ___ ___                          ___ ___ ___ ___ ___\n | 2 | 7 |                        | 1 | 4 | 3 | 6 | 5 |\n</code></pre> <p>\u7ee7\u7eed\u4ece\u672a\u6392\u5e8f\u533a\u95f4\u53d6\u503c 1\uff0c\u4e8c\u5206\u6cd5\u5b9a\u4f4d\u5230 [0]\uff0c\u6240\u4ee5 1 \u76f4\u63a5\u63d2\u5165 [0] \u7684\u4f4d\u7f6e\uff1a</p> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n  ___ ___ ___                      ___ ___ ___ ___\n | 1 | 2 | 7 |                    | 4 | 3 | 6 | 5 |\n</code></pre> <p>\u4ee5\u6b64\u7c7b\u63a8\uff0c\u540e\u9762\u6bcf\u4e00\u6b65\u7684\u7ed3\u679c\u5982\u4e0b\uff1a</p> <p>\u4e8c\u5206\u63d2\u5165 4\uff1a</p> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n  ___ ___ ___ ___                  ___ ___ ___\n | 1 | 2 | 4 | 7 |                | 3 | 6 | 5 |\n</code></pre> <p>\u4e8c\u5206\u63d2\u5165 3\uff1a</p> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n  ___ ___ ___ ___ ___              ___ ___\n | 1 | 2 | 3 | 4 | 7 |            | 6 | 5 |\n</code></pre> <p>\u4e8c\u5206\u63d2\u5165 6\uff1a</p> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n  ___ ___ ___ ___ ___ ___          ___\n | 1 | 2 | 3 | 4 | 6 | 7 |        | 5 |\n</code></pre> <p>\u4e8c\u5206\u63d2\u5165 5\uff1a</p> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n  ___ ___ ___ ___ ___ ___ ___\n | 1 | 2 | 3 | 4 | 5 | 6 | 7 |\n</code></pre> <p>\u7ecf\u8fc7 n \u8f6e\u63d2\u5165\u4ee5\u540e\uff0c\u6570\u7ec4\u5c31\u6392\u597d\u5e8f\u4e86\u3002</p>"},{"location":"ch10_sort/binaryinsertsort/#_3","title":"\u4e8c\u3001\u7b97\u6cd5\u5b9e\u73b0","text":"<p>\u4e8c\u5206\u63d2\u5165\u6392\u5e8f\u7b97\u6cd5\u7684\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>binaryInsertSort(int[] arr) {\n    for (i = 1; i &lt; n; i++) {\n        // \u672a\u6392\u5e8f\u533a\u95f4\u6570\u636e\u5143\u7d20\n        x = arr[i];\n        // \u4e8c\u5206\u67e5\u627e\u5408\u9002\u7684\u63d2\u5165\u4f4d\u7f6e\n        loc = firstGreat(arr, 0, i - 1, x);\n        // \u63d2\u5165\u5230\u5df2\u6392\u5e8f\u533a\u95f4\u5408\u9002\u7684\u4f4d\u7f6e\n        for (j = i; j &gt; loc; j--) {\n            arr[j] = arr[j - 1];\n        }\n        arr[loc] = x;\n    }\n}\n</code></pre> <p>\u6267\u884c\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <pre><code>=====  \u521d\u59cb\u6570\u7ec4 =====\n[0, 3, 1, 6, 2, 5, 4]\n\n=====\u7b2c 1 \u8f6e\u63d2\u5165=====\n[0, 1, 3, 6, 2, 5, 4]\n\n=====\u7b2c 2 \u8f6e\u63d2\u5165=====\n[0, 1, 3, 6, 2, 5, 4]\n\n=====\u7b2c 3 \u8f6e\u63d2\u5165=====\n[0, 1, 2, 3, 6, 5, 4]\n\n=====\u7b2c 4 \u8f6e\u63d2\u5165=====\n[0, 1, 2, 3, 5, 6, 4]\n\n=====\u7b2c 5 \u8f6e\u63d2\u5165=====\n[0, 1, 2, 3, 4, 5, 6]\n</code></pre>"},{"location":"ch10_sort/binaryinsertsort/#_4","title":"\u4e09\u3001\u7b97\u6cd5\u5206\u6790","text":""},{"location":"ch10_sort/binaryinsertsort/#31","title":"3.1 \u65f6\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)</li> <li>\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)</li> <li>\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)</li> </ul> <p>\u4ece\u590d\u6742\u5ea6\u4e0a\u770b\uff0c\u8c8c\u4f3c\u4e8c\u5206\u63d2\u5165\u6392\u5e8f\u6bd4\u63d2\u5165\u6392\u5e8f\u7684\u590d\u6742\u5ea6\u8fd8\u8981\u9ad8\u3002</p> <ul> <li>\u4e8c\u5206\u63d2\u5165\u6392\u5e8f\u53ea\u662f\u63d0\u5347\u4e86\u6bd4\u8f83\u901f\u5ea6\uff0c\u5373\u6bd4\u8f83\u6b21\u6570\u4ece <code>n^2 -&gt; nlogn</code></li> <li>\u4e8c\u5206\u63d2\u5165\u6392\u5e8f\u7684\u4ea4\u6362\u6b21\u6570\u6ca1\u6709\u6539\u53d8\uff0c\u6240\u4ee5\u603b\u4f53\u590d\u6742\u5ea6\u548c\u63d2\u5165\u6392\u5e8f\u662f\u4e00\u6837\u7684</li> </ul> <p>\u4f46\u662f\u5728\u5b9e\u9645\u6392\u5e8f\u4e2d\uff0c\u6bd4\u8f83\u6b21\u6570\u7684\u5f71\u54cd\u4f1a\u66f4\u5927\u4e00\u4e9b\uff0c\u6240\u4ee5\u4e8c\u5206\u63d2\u5165\u6392\u5e8f\u7684\u6027\u80fd\u4e5f\u4f1a\u663e\u5f97\u66f4\u597d\u3002</p>"},{"location":"ch10_sort/binaryinsertsort/#32","title":"3.2 \u7a7a\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)</li> <li>\u539f\u5730\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/binaryinsertsort/#33","title":"3.3 \u7a33\u5b9a\u6027","text":"<ul> <li>\u7a33\u5b9a\u6392\u5e8f\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/binaryinsertsort/#_5","title":"\u9644\u5f55","text":"<pre><code>/**\n * \u4e8c\u5206\u63d2\u5165\u6392\u5e8f\n * &lt;p&gt;\n * \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6700\u597d O(nlogn) \u6700\u5dee O(n^2) \u5e73\u5747 O(n^2)\n * &lt;p&gt;\n * \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\n * &lt;p&gt;\n * \u7a33\u5b9a\u6027\uff1a\u7a33\u5b9a\n *\n * @author weijiaduo\n * @since 2023/9/28\n */\npublic class BinaryInsertSort implements Sort {\n\n    @Override\n    public void sort(int[] arr) {\n        int n = arr.length;\n        for (int i = 1; i &lt; n; i++) {\n            int x = arr[i];\n            // \u4e8c\u5206\u67e5\u627e\u5408\u9002\u7684\u63d2\u5165\u4f4d\u7f6e\n            int loc = firstGreat(arr, 0, i - 1, x);\n            // \u63d2\u5165\u5230\u5df2\u6392\u5e8f\u533a\u95f4\u5408\u9002\u7684\u4f4d\u7f6e\n            for (int j = i; j &gt; loc; j--) {\n                arr[j] = arr[j - 1];\n            }\n            arr[loc] = x;\n        }\n    }\n\n    /**\n     * \u5bfb\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e\u6307\u5b9a\u503c\u7684\u4f4d\u7f6e\n     *\n     * @param arr \u6570\u7ec4\n     * @param lo  \u8d77\u59cb\u4f4d\u7f6e [lo, hi]\n     * @param hi  \u7ed3\u675f\u4f4d\u7f6e [lo, hi]\n     * @param val \u6307\u5b9a\u503c\n     * @return \u7b26\u5408\u6761\u4ef6\u7684\u7d22\u5f15\n     */\n    private int firstGreat(int[] arr, int lo, int hi, int val) {\n        int left = lo, right = hi;\n        while (left &lt;= right) {\n            int mid = left + (right - left) / 2;\n            if (arr[mid] &gt; val) {\n                if (mid == 0 || arr[mid] &lt;= val) {\n                    return mid;\n                }\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return left;\n    }\n\n}\n</code></pre>"},{"location":"ch10_sort/bubblesort/","title":"\u5192\u6ce1\u6392\u5e8f","text":""},{"location":"ch10_sort/bubblesort/#_2","title":"\u4e00\u3001\u7b97\u6cd5\u63cf\u8ff0","text":""},{"location":"ch10_sort/bubblesort/#11","title":"1.1 \u6838\u5fc3\u601d\u60f3","text":"<ul> <li>\u6bcf\u6b21\u64cd\u4f5c\u53ea\u4f1a\u5f71\u54cd\u76f8\u90bb\u7684 2 \u4e2a\u5143\u7d20</li> <li>\u6bcf\u8f6e\u5192\u6ce1\u81f3\u5c11\u8ba9 1 \u4e2a\u5143\u7d20\u79fb\u52a8\u5230\u5b83\u6b63\u786e\u7684\u4f4d\u7f6e\uff081 \u8f6e\u662f\u6307\u4ece\u5934\u5230\u5c3e\u64cd\u4f5c\u4e00\u904d\u5143\u7d20\uff09</li> <li>\u6700\u591a\u7ecf\u8fc7 n \u8f6e\u5192\u6ce1\u540e\uff0c\u6240\u6709\u5143\u7d20\u90fd\u4f1a\u88ab\u79fb\u5230\u6b63\u786e\u7684\u4f4d\u7f6e</li> </ul>"},{"location":"ch10_sort/bubblesort/#12","title":"1.2 \u7ec6\u8282\u89e3\u91ca","text":"<p>\u6bd4\u5982\u8bf4\uff0c\u6570\u7ec4 <code>[2, 7, 1, 4, 3, 6, 5]</code>\u3002</p> <pre><code> ___ ___ ___ ___ ___ ___ ___\n| 2 | 7 | 1 | 4 | 3 | 6 | 5 |\n</code></pre> <p>\u4ece\u540e\u9762\u5f80\u524d\u9762\u5192\u6ce1\uff0c\u7531\u4e8e <code>5 &lt; 6</code> \u6240\u4ee5 5 \u8981\u5f80\u524d\u5192\u6ce1\uff1a</p> <pre><code>                       ___\n                      |   |\n                      V   V\n ___ ___ ___ ___ ___ ___ ___\n| 2 | 7 | 1 | 4 | 3 | 5 | 6 |\n</code></pre> <p>\u63a5\u7740\u5224\u65ad <code>5 &gt; 3</code>\uff0c5 \u4e0d\u80fd\u5f80\u524d\u5192\u6ce1\uff0c\u5f53\u524d\u5bf9\u8c61\u6362\u6210 3\uff1a</p> <pre><code>                  |\n                  V\n ___ ___ ___ ___ ___ ___ ___\n| 2 | 7 | 1 | 4 | 3 | 5 | 6 |\n</code></pre> <p>\u63a5\u4e0b\u6765\u662f <code>3 &lt; 4</code>\uff0c\u6240\u4ee5 3 \u8981\u5f80\u524d\u5192\u6ce1\uff1a</p> <pre><code>               ___\n              |   |\n              V   V\n ___ ___ ___ ___ ___ ___ ___\n| 2 | 7 | 1 | 3 | 4 | 5 | 6 |\n</code></pre> <p>\u518d\u63a5\u7740\u662f <code>3 &gt; 1</code>\uff0c3 \u4e0d\u80fd\u5192\u6ce1\uff0c\u5207\u6362\u5f53\u524d\u5bf9\u8c61\u4e3a 1\uff1a</p> <pre><code>          |\n          V\n ___ ___ ___ ___ ___ ___ ___\n| 2 | 7 | 1 | 3 | 4 | 5 | 6 |\n</code></pre> <p>\u63a5\u4e0b\u6765\u662f <code>1 &lt; 7</code>\uff0c1 \u8981\u5f80\u524d\u5192\u6ce1\uff1a</p> <pre><code>       ___\n      |   |\n      V   V\n ___ ___ ___ ___ ___ ___ ___\n| 2 | 1 | 7 | 3 | 4 | 5 | 6 |\n</code></pre> <p>\u6700\u540e\u662f <code>1 &lt; 2</code>\uff0c\u6240\u4ee5 1 \u8981\u5f80\u524d\u5192\u6ce1\uff1a</p> <pre><code>   ___\n  |   |\n  V   V\n ___ ___ ___ ___ ___ ___ ___\n| 1 | 2 | 7 | 3 | 4 | 5 | 6 |\n</code></pre> <p>\u8fd9\u6837\u4e00\u8f6e\u5192\u6ce1\u7ed3\u675f\u540e\uff0c1 \u5df2\u7ecf\u5728\u5b83\u5e94\u8be5\u5728\u7684\u4f4d\u7f6e\u4e86\u3002</p> <pre><code>\u5df2\u6392\u5e8f                  \u672a\u6392\u5e8f\n ___           ___ ___ ___ ___ ___ ___\n| 1 |         | 2 | 7 | 3 | 4 | 5 | 6 |\n</code></pre> <p>\u540e\u9762\u518d\u5bf9\u5176\u4ed6\u672a\u6392\u5e8f\u7684\u5143\u7d20\u8fdb\u884c\u5192\u6ce1\uff0c\u76f4\u5230\u6240\u6709\u5143\u7d20\u90fd\u6392\u597d\u5e8f\u4e3a\u6b62\u3002</p> <p>\u6bcf\u8fc7\u4e00\u8f6e\u5192\u6ce1\uff0c\u603b\u80fd\u628a\u4e00\u4e2a\u503c\u653e\u5230\u5b83\u6b63\u786e\u7684\u4f4d\u7f6e\uff0c\u7ecf\u8fc7 n \u8f6e\u540e\u5c31\u6392\u597d\u5e8f\u4e86\u3002</p>"},{"location":"ch10_sort/bubblesort/#_3","title":"\u4e8c\u3001\u7b97\u6cd5\u5b9e\u73b0","text":"<ul> <li>\u603b\u5171\u6267\u884c n \u8f6e\u5192\u6ce1</li> <li>\u6bcf\u8f6e\u5192\u6ce1\uff0c\u4f1a\u5c06\u672a\u6392\u5e8f\u5143\u7d20\u7684\u6700\u5c0f\u503c\u653e\u5230\u5df2\u6392\u5e8f\u5143\u7d20\u7684\u540e\u9762</li> </ul> <pre><code>public void bubbleSort(int[] arr) {\n    int n = arr.length;\n    // \u8fdb\u884c n \u8f6e\u5192\u6ce1\n    for (int i = 0; i &lt; n; i++) {\n        // \u6bcf\u8f6e\u5192\u6ce1\uff0c\u90fd\u4f1a\u5c06\u4e00\u4e2a\u5143\u7d20\u653e\u7f6e\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\n        for (int j = n - 1; j &gt; i; j--) {\n            // \u6bcf\u6b21\u53ea\u4f1a\u64cd\u4f5c\u76f8\u90bb\u76842\u4e2a\u5143\u7d20\n            if (arr[j] &lt; arr[j - 1]) {\n                // \u4ea4\u6362\u76f8\u90bb\u5143\u7d20\n                swap(arr, j, j - 1);\n            }\n        }\n    }\n}\n</code></pre> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u539f\u59cb\u6570\u636e\u662f\uff1a<code>[0, 3, 1, 6, 2, 5, 4]</code>\uff0c\u5192\u6ce1\u6392\u5e8f\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <pre><code>=====\u7b2c 1 \u8f6e\u5192\u6ce1=====\n[0, 3, 1, 6, 2, 4, 5]\n[0, 3, 1, 6, 2, 4, 5]\n[0, 3, 1, 2, 6, 4, 5]\n[0, 3, 1, 2, 6, 4, 5]\n[0, 1, 3, 2, 6, 4, 5]\n[0, 1, 3, 2, 6, 4, 5]\n\n=====\u7b2c 2 \u8f6e\u5192\u6ce1=====\n[0, 1, 3, 2, 6, 4, 5]\n[0, 1, 3, 2, 4, 6, 5]\n[0, 1, 3, 2, 4, 6, 5]\n[0, 1, 2, 3, 4, 6, 5]\n[0, 1, 2, 3, 4, 6, 5]\n\n=====\u7b2c 3 \u8f6e\u5192\u6ce1=====\n[0, 1, 2, 3, 4, 5, 6]\n[0, 1, 2, 3, 4, 5, 6]\n[0, 1, 2, 3, 4, 5, 6]\n[0, 1, 2, 3, 4, 5, 6]\n\n=====\u7b2c 4 \u8f6e\u5192\u6ce1=====\n[0, 1, 2, 3, 4, 5, 6]\n[0, 1, 2, 3, 4, 5, 6]\n[0, 1, 2, 3, 4, 5, 6]\n\n=====\u7b2c 5 \u8f6e\u5192\u6ce1=====\n[0, 1, 2, 3, 4, 5, 6]\n[0, 1, 2, 3, 4, 5, 6]\n\n=====\u7b2c 6 \u8f6e\u5192\u6ce1=====\n[0, 1, 2, 3, 4, 5, 6]\n</code></pre>"},{"location":"ch10_sort/bubblesort/#_4","title":"\u4e09\u3001\u7b97\u6cd5\u4f18\u5316","text":"<p>\u5f53\u67d0\u8f6e\u5192\u6ce1\u4e2d\uff0c\u6ca1\u6709\u6267\u884c\u4efb\u4f55\u4ea4\u6362\u65f6\uff0c\u5176\u5b9e\u5c31\u8bf4\u660e\u6570\u7ec4\u5df2\u7ecf\u6392\u5e8f\u597d\u4e86\u3002</p> <p>\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u5bf9\u5192\u6ce1\u6392\u5e8f\u8fdb\u884c\u4f18\u5316\uff0c\u63d0\u524d\u8df3\u51fa\u5faa\u73af\uff1a</p> <pre><code>public void bubbleSort(int[] arr) {\n    int n = arr.length;\n    // \u8fdb\u884c n \u8f6e\u5192\u6ce1\n    for (int i = 0; i &lt; n; i++) {\n        // \u6bcf\u8f6e\u5192\u6ce1\uff0c\u90fd\u4f1a\u5c06\u4e00\u4e2a\u5143\u7d20\u653e\u7f6e\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\n        boolean flag = false;\n        for (int j = n - 1; j &gt; i; j--) {\n            // \u6bcf\u6b21\u53ea\u4f1a\u64cd\u4f5c\u76f8\u90bb\u76842\u4e2a\u5143\u7d20\n            if (arr[j] &lt; arr[j - 1]) {\n                // \u4ea4\u6362\u76f8\u90bb\u5143\u7d20\n                swap(arr, j, j - 1);\n                flag = true;\n            }\n        }\n        // \u4e00\u8f6e\u5192\u6ce1\u91cc\u6ca1\u6709\u4ea4\u6362\uff0c\u8bf4\u660e\u5df2\u7ecf\u6392\u597d\u5e8f\u4e86\n        if (!flag) {\n            break;\n        }\n    }\n}\n</code></pre> <p>\u4e0a\u9762\u540c\u6837\u7684\u4f8b\u5b50\uff0c\u6267\u884c\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <pre><code>=====\u7b2c 1 \u8f6e\u5192\u6ce1=====\n[0, 3, 1, 6, 2, 4, 5]\n[0, 3, 1, 6, 2, 4, 5]\n[0, 3, 1, 2, 6, 4, 5]\n[0, 3, 1, 2, 6, 4, 5]\n[0, 1, 3, 2, 6, 4, 5]\n[0, 1, 3, 2, 6, 4, 5]\n\n=====\u7b2c 2 \u8f6e\u5192\u6ce1=====\n[0, 1, 3, 2, 6, 4, 5]\n[0, 1, 3, 2, 4, 6, 5]\n[0, 1, 3, 2, 4, 6, 5]\n[0, 1, 2, 3, 4, 6, 5]\n[0, 1, 2, 3, 4, 6, 5]\n\n=====\u7b2c 3 \u8f6e\u5192\u6ce1=====\n[0, 1, 2, 3, 4, 5, 6]\n[0, 1, 2, 3, 4, 5, 6]\n[0, 1, 2, 3, 4, 5, 6]\n[0, 1, 2, 3, 4, 5, 6]\n\n=====\u7b2c 4 \u8f6e\u5192\u6ce1=====\n[0, 1, 2, 3, 4, 5, 6]\n[0, 1, 2, 3, 4, 5, 6]\n[0, 1, 2, 3, 4, 5, 6]\n</code></pre>"},{"location":"ch10_sort/bubblesort/#_5","title":"\u56db\u3001\u7b97\u6cd5\u5206\u6790","text":""},{"location":"ch10_sort/bubblesort/#41","title":"4.1 \u65f6\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> <li>\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)</li> <li>\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)</li> </ul>"},{"location":"ch10_sort/bubblesort/#42","title":"4.2 \u7a7a\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)</li> <li>\u539f\u5730\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/bubblesort/#43","title":"4.3 \u7a33\u5b9a\u6027","text":"<ul> <li>\u7a33\u5b9a\u6392\u5e8f\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/bubblesort/#_6","title":"\u9644\u5f55","text":"<pre><code>/**\n * \u5192\u6ce1\u6392\u5e8f\n * &lt;p&gt;\n * \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6700\u597d O(n) \u6700\u5dee O(n^2) \u5e73\u5747 O(n^2)\n * &lt;p&gt;\n * \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\n * &lt;p&gt;\n * \u7a33\u5b9a\u6027\uff1a\u7a33\u5b9a\n *\n * @author weijiaduo\n * @since 2022/7/21\n */\npublic class BubbleSort implements Sort {\n\n    /**\n     * \u6392\u5e8f\n     *\n     * @param arr \u6570\u7ec4\n     */\n    @Override\n    public void sort(int[] arr) {\n        // slowSort(arr);\n        fastSort(arr);\n    }\n\n    /**\n     * \u6162\u4e00\u70b9\u7684\u5192\u6ce1\u6392\u5e8f\n     *\n     * @param arr \u6570\u7ec4\n     */\n    private void slowSort(int[] arr) {\n        int n = arr.length;\n        for (int i = 0; i &lt; n; i++) {\n            for (int j = n - 1; j &gt; i; j--) {\n                if (arr[j] &lt; arr[j - 1]) {\n                    swap(arr, j, j - 1);\n                }\n            }\n        }\n    }\n\n    /**\n     * \u5feb\u4e00\u70b9\u7684\u5192\u6ce1\u6392\u5e8f\n     *\n     * @param arr \u6570\u7ec4\n     */\n    private void fastSort(int[] arr) {\n        int n = arr.length;\n        for (int i = 0; i &lt; n; i++) {\n            boolean flag = false;\n            for (int j = n - 1; j &gt; i; j--) {\n                if (arr[j] &lt; arr[j - 1]) {\n                    swap(arr, j, j - 1);\n                    flag = true;\n                }\n            }\n            // \u4e00\u8f6e\u5192\u6ce1\u91cc\u6ca1\u6709\u4ea4\u6362\uff0c\u8bf4\u660e\u5df2\u7ecf\u6392\u597d\u5e8f\u4e86\n            if (!flag) {\n                break;\n            }\n        }\n    }\n\n}\n</code></pre>"},{"location":"ch10_sort/bucketsort/","title":"\u6876\u6392\u5e8f","text":""},{"location":"ch10_sort/bucketsort/#_2","title":"\u4e00\u3001\u7b97\u6cd5\u63cf\u8ff0","text":""},{"location":"ch10_sort/bucketsort/#11","title":"1.1 \u6838\u5fc3\u601d\u60f3","text":"<ul> <li>\u628a\u4e0d\u540c\u8303\u56f4\u7684\u6570\u636e\u5212\u5206\u5230\u4e0d\u540c\u7684\u6876\u4e2d</li> <li>\u6876\u4e0e\u6876\u4e4b\u95f4\u662f\u6709\u5e8f\u7684\uff0c\u6876\u95f4\u65e0\u9700\u6392\u5e8f</li> <li>\u53ea\u9700\u8981\u5bf9\u6876\u5185\u7684\u6570\u636e\u6392\u5e8f</li> </ul>"},{"location":"ch10_sort/bucketsort/#12","title":"1.2 \u7ec6\u8282\u89e3\u91ca","text":"<p>\u6bd4\u5982\u8bf4\uff0c\u6570\u7ec4 <code>[2, 7, 4, 9, 4, 8, 0, 7, 7, 2, 4, 4, 1, 6]</code>\u3002</p> <p>\u6570\u636e\u8303\u56f4\u662f <code>[0, 9]</code>\uff0c\u5047\u8bbe\u6876\u5927\u5c0f\u4e3a 3\uff0c\u90a3\u4e48\u53ef\u4ee5\u5212\u5206\u6210 4 \u4e2a\u6876\u3002</p> <pre><code>|   |     |   |     |   |     |   |\n|   |     |   |     |   |     |   |\n|   |     |   |     |   |     |   |\n|   |     |   |     |   |     |   |\n|   |     |   |     |   |     |   |\n|___|     |___|     |___|     |___|\n  0         1         2         3             -- \u6876\u7f16\u53f7\n[0,2]     [3,5]     [6,8]     [9,11]          -- \u6876\u6570\u636e\u8303\u56f4\n</code></pre> <p>\u7136\u540e\u904d\u5386\u6392\u5e8f\u6570\u7ec4\uff0c\u5c06\u6570\u636e\u6309\u7167\u8303\u56f4\u5206\u53d1\u5230\u4e0d\u540c\u7684\u6876\u4e2d\uff1a</p> <pre><code>|   |     |   |     |   |     |   |\n|   |     |   |     | 6 |     |   |\n| 1 |     | 4 |     | 7 |     |   |\n| 2 |     | 4 |     | 7 |     |   |\n| 0 |     | 4 |     | 8 |     |   |\n|_2_|     |_4_|     |_7_|     |_9_|\n  0         1         2         3             -- \u6876\u7f16\u53f7\n[0,2]     [3,5]     [6,8]     [9,11]          -- \u6876\u6570\u636e\u8303\u56f4\n</code></pre> <p>\u8fd9\u4e2a\u65f6\u5019\uff0c\u6876\u4e4b\u95f4\u7684\u6570\u636e\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u5bf9\u6876\u5185\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u5373\u53ef\uff1a</p> <pre><code>|   |     |   |     |   |     |   |\n|   |     |   |     | 8 |     |   |\n| 2 |     | 4 |     | 7 |     |   |\n| 2 |     | 4 |     | 7 |     |   |\n| 1 |     | 4 |     | 7 |     |   |\n|_0_|     |_4_|     |_6_|     |_9_|\n  0         1         2         3             -- \u6876\u7f16\u53f7\n[0,2]     [3,5]     [6,8]     [9,11]          -- \u6876\u6570\u636e\u8303\u56f4\n</code></pre> <p>\u6876\u5185\u6392\u597d\u5e8f\u4e4b\u540e\uff0c\u6309\u7167\u6876\u7684\u987a\u5e8f\u904d\u5386\u83b7\u53d6\u6570\u636e\u5373\u53ef\uff1a</p> <pre><code>[0, 1, 2, 2, 4, 4, 4, 4, 6, 7, 7, 7, 8, 9]\n</code></pre> <p>\u6876\u6392\u5e8f\u5c31\u662f\u5229\u7528\u4e86\u6876\u7684\u6709\u5e8f\u6027\uff0c\u907f\u514d\u4e86\u5927\u8303\u56f4\u7684\u6392\u5e8f\uff0c\u6362\u6210\u4e86\u5c0f\u8303\u56f4\u6392\u5e8f\u3002</p>"},{"location":"ch10_sort/bucketsort/#_3","title":"\u4e8c\u3001\u7b97\u6cd5\u5b9e\u73b0","text":"<p>\u6392\u5e8f\u6b65\u9aa4\u53ef\u5206\u4e3a\u51e0\u6b65\uff1a</p> <ol> <li>\u6839\u636e\u6570\u636e\u8303\u56f4\u5212\u5206\u6876</li> <li>\u5c06\u6570\u636e\u5206\u53d1\u5230\u4e0d\u540c\u6876</li> <li>\u5bf9\u6876\u5185\u6570\u636e\u6392\u5e8f</li> <li>\u6309\u987a\u5e8f\u6536\u96c6\u6876\u6570\u636e</li> </ol> <p>\u4e0b\u9762\u7ed3\u675f\u8fd9\u51e0\u4e2a\u6b65\u9aa4\u7684\u5177\u4f53\u5185\u5bb9\u3002</p>"},{"location":"ch10_sort/bucketsort/#21","title":"2.1 \u6839\u636e\u6570\u636e\u8303\u56f4\u5212\u5206\u6876","text":"<p>\u6876\u5927\u5c0f\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8bbe\u7f6e\uff0c\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\uff0c\u6876\u5927\u5c0f\u53ef\u80fd\u4e0d\u4e00\u6837\u3002</p> <pre><code>// \u627e\u51fa\u6570\u636e\u7684\u8303\u56f4\uff08\u6700\u5c0f\u6700\u5927\u503c\uff09\nint min = Integer.MAX_VALUE;\nint max = Integer.MIN_VALUE;\nfor (int num : arr) {\n    if (num &gt; max) {\n        max = num;\n    }\n    if (num &lt; min) {\n        min = num;\n    }\n}\n\n// \u6839\u636e\u6570\u636e\u8303\u56f4\u5e73\u5747\u5212\u5206\u6876\nint n = (max - min) / width + 1;\nList&lt;List&lt;Integer&gt;&gt; buckets = new ArrayList&lt;&gt;(n);\nfor (int i = 0; i &lt; n; i++) {\n    buckets.add(new ArrayList&lt;&gt;());\n}\n</code></pre>"},{"location":"ch10_sort/bucketsort/#22","title":"2.2 \u5c06\u6570\u636e\u5206\u53d1\u5230\u4e0d\u540c\u6876","text":"<pre><code>// \u628a\u4e0d\u540c\u8303\u56f4\u7684\u6570\u636e\u5212\u5206\u5230\u4e0d\u540c\u7684\u6876\u91cc\u9762\nfor (int num : arr) {\n    int index = (num - min) / width;\n    List&lt;Integer&gt; list = buckets.get(index);\n    list.add(num);\n}\n</code></pre>"},{"location":"ch10_sort/bucketsort/#23","title":"2.3 \u5bf9\u6876\u5185\u6570\u636e\u6392\u5e8f","text":"<pre><code>// \u6876\u4e4b\u95f4\u5df2\u7ecf\u662f\u6709\u5e8f\u7684\u4e86\uff0c\u53ea\u9700\u5bf9\u6876\u5185\u6392\u5e8f\nfor (List&lt;Integer&gt; bucket : buckets) {\n    Collections.sort(bucket);\n}\n</code></pre>"},{"location":"ch10_sort/bucketsort/#24","title":"2.4 \u6309\u987a\u5e8f\u6536\u96c6\u6876\u6570\u636e","text":"<pre><code>// \u6309\u6876\u7684\u987a\u5e8f\u904d\u5386\u6240\u6709\u6570\u636e\uff0c\u5c31\u662f\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u4e86\nint k = 0;\nfor (List&lt;Integer&gt; bucket : buckets) {\n    for (Integer num : bucket) {\n        arr[k++] = num;\n    }\n}\n</code></pre>"},{"location":"ch10_sort/bucketsort/#_4","title":"\u4e09\u3001\u7b97\u6cd5\u5206\u6790","text":""},{"location":"ch10_sort/bucketsort/#31","title":"3.1 \u65f6\u95f4\u590d\u6742\u5ea6","text":"<p>\u5982\u679c\u6570\u636e\u90fd\u5212\u5206\u5230\u540c\u4e00\u4e2a\u6876\u5185\uff0c\u90a3\u4e48\u5c31\u56de\u9000\u6210\u5355\u6570\u7ec4\u6392\u5e8f\u7684\u6027\u80fd\u4e86\u3002</p> <ul> <li>\u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> <li>\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)</li> <li>\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)</li> </ul>"},{"location":"ch10_sort/bucketsort/#32","title":"3.2 \u7a7a\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> <li>\u975e\u539f\u5730\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/bucketsort/#33","title":"3.3 \u7a33\u5b9a\u6027","text":"<ul> <li>\u7a33\u5b9a\u6392\u5e8f\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/bucketsort/#_5","title":"\u56db\u3001\u9002\u7528\u573a\u666f","text":"<ul> <li>\u5916\u90e8\u6392\u5e8f</li> <li>\u6570\u636e\u91cf\u6bd4\u8f83\u5927</li> <li>\u6570\u636e\u5bb9\u6613\u5212\u5206\u4e3a\u591a\u4e2a\u6876</li> <li>\u6570\u636e\u5206\u5e03\u8303\u56f4\u6bd4\u8f83\u5747\u5300</li> </ul>"},{"location":"ch10_sort/bucketsort/#_6","title":"\u4e94\u3001\u9650\u5236\u6761\u4ef6","text":"<ul> <li>\u8981\u6c42\u6392\u5e8f\u6570\u636e\u80fd\u5f88\u5bb9\u6613\u7684\u5212\u5206\u6210 n \u4e2a\u6876\uff0c\u4e14\u6876\u4e0e\u6876\u4e4b\u95f4\u662f\u6709\u5e8f\u7684</li> <li>\u5206\u5e03\u5728\u5404\u4e2a\u6876\u4e4b\u95f4\u7684\u6570\u636e\u662f\u6bd4\u8f83\u5747\u5300\u7684</li> </ul>"},{"location":"ch10_sort/bucketsort/#_7","title":"\u9644\u5f55","text":"<pre><code>/**\n * \u6876\u6392\u5e8f\n * &lt;p&gt;\n * \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\n * &lt;p&gt;\n * \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(w)\n * &lt;p&gt;\n * \u7a33\u5b9a\u6027\uff1a\u7a33\u5b9a\n *\n * @author weijiaduo\n * @since 2022/9/5\n */\npublic class BucketSort implements Sort {\n\n    int width;\n\n    public BucketSort() {\n        this(10);\n    }\n\n    public BucketSort(int width) {\n        this.width = width;\n    }\n\n    @Override\n    public void sort(int[] arr) {\n        // \u627e\u51fa\u6570\u636e\u7684\u8303\u56f4\uff08\u6700\u5c0f\u6700\u5927\u503c\uff09\n        int min = Integer.MAX_VALUE;\n        int max = Integer.MIN_VALUE;\n        for (int num : arr) {\n            if (num &gt; max) {\n                max = num;\n            }\n            if (num &lt; min) {\n                min = num;\n            }\n        }\n\n        // \u6839\u636e\u6570\u636e\u8303\u56f4\u5e73\u5747\u5212\u5206\u6876\n        int n = (max - min + width) / width;\n        List&lt;List&lt;Integer&gt;&gt; buckets = new ArrayList&lt;&gt;(n);\n        for (int i = 0; i &lt; n; i++) {\n            buckets.add(new ArrayList&lt;&gt;());\n        }\n\n        // \u628a\u4e0d\u540c\u8303\u56f4\u7684\u6570\u636e\u5212\u5206\u5230\u4e0d\u540c\u7684\u6876\u91cc\u9762\n        for (int num : arr) {\n            int index = (num - min) / width;\n            List&lt;Integer&gt; list = buckets.get(index);\n            list.add(num);\n        }\n\n        // \u6876\u4e4b\u95f4\u5df2\u7ecf\u662f\u6709\u5e8f\u7684\u4e86\uff0c\u53ea\u9700\u5bf9\u6876\u5185\u6392\u5e8f\n        for (List&lt;Integer&gt; bucket : buckets) {\n            Collections.sort(bucket);\n        }\n\n        // \u6309\u6876\u7684\u987a\u5e8f\u904d\u5386\u6240\u6709\u6570\u636e\uff0c\u5c31\u662f\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u4e86\n        int k = 0;\n        for (List&lt;Integer&gt; bucket : buckets) {\n            for (Integer num : bucket) {\n                arr[k++] = num;\n            }\n        }\n    }\n\n}\n</code></pre>"},{"location":"ch10_sort/countsort/","title":"\u8ba1\u6570\u6392\u5e8f","text":""},{"location":"ch10_sort/countsort/#_2","title":"\u4e00\u3001\u7b97\u6cd5\u63cf\u8ff0","text":""},{"location":"ch10_sort/countsort/#11","title":"1.1 \u6838\u5fc3\u601d\u60f3","text":"<ul> <li>\u8ba1\u6570\u6392\u5e8f\u662f\u6876\u5927\u5c0f\u4e3a 1 \u7684\u6876\u6392\u5e8f\u7684\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5</li> <li>\u7531\u4e8e\u6876\u5927\u5c0f\u4e3a 1\uff0c\u6240\u4ee5\u6876\u5185\u90fd\u662f\u76f8\u540c\u7684\u503c</li> <li>\u6876\u5185\u90fd\u662f\u76f8\u540c\u7684\u503c\uff0c\u65e0\u9700\u6876\u5185\u6392\u5e8f\uff0c\u53ea\u9700\u8981\u8bb0\u5f55\u6570\u636e\u9891\u7387</li> <li>\u6700\u540e\u6392\u5e8f\u65f6\uff0c\u6309\u7167\u6570\u636e\u9891\u7387\u5c06\u6570\u636e\u586b\u5145\u56de\u539f\u6570\u7ec4</li> </ul>"},{"location":"ch10_sort/countsort/#12","title":"1.2 \u7ec6\u8282\u89e3\u91ca","text":"<p>\u6bd4\u5982\u8bf4\uff0c\u6570\u7ec4 <code>[6, 0, 5, 0, 9, 4, 1, 7, 4]</code>\u3002</p> <p>\u6570\u636e\u8303\u56f4\u662f <code>[0, 9]</code>\uff0c\u6240\u4ee5\u53ef\u4ee5\u5212\u5206\u4e3a 10 \u4e2a\u6876\uff0c\u6bcf\u4e2a\u6876\u5927\u5c0f\u662f 1\u3002</p> <p>\u8fd9\u91cc\u7684\u6876\u76f4\u63a5\u7528\u6570\u7ec4\u66ff\u4ee3\uff0c\u56e0\u4e3a\u53ea\u9700\u8981\u8ba1\u6570\u5c31\u591f\u4e86\uff0c\u4e0d\u9700\u8981\u4fdd\u7559\u539f\u6570\u636e\u3002</p> <pre><code>  0   1   2   3   4   5   6   7   8   9\n ___ ___ ___ ___ ___ ___ ___ ___ ___ ___\n|   |   |   |   |   |   |   |   |   |   |\n</code></pre> <p>\u7136\u540e\u904d\u5386\u6392\u5e8f\u6570\u7ec4\uff0c\u5c06\u6570\u5b57\u9891\u7387\u7edf\u8ba1\u5230\u8ba1\u6570\u6570\u7ec4\u4e2d\uff1a</p> <pre><code>  0   1   2   3   4   5   6   7   8   9\n ___ ___ ___ ___ ___ ___ ___ ___ ___ ___\n| 2 | 1 | 0 | 0 | 2 | 1 | 1 | 1 | 0 | 1 |\n</code></pre> <p>\u6876\u5185\u7684\u6570\u503c\u8868\u793a\u7684\u662f\u5bf9\u5e94\u6570\u5b57\u7684\u9891\u7387\u3002</p> <p>\u8fd9\u91cc\u53ef\u4ee5\u901a\u8fc7\u626b\u63cf\u8ba1\u6570\u6570\u7ec4\uff0c\u586b\u5145\u539f\u6570\u7ec4\u5c31\u80fd\u6392\u597d\u5e8f\u4e86\uff1a</p> <pre><code>int k = 0;\nfor (int i = 0; i &lt; counts.length; i++) {\n    for (int j = 0; j &lt; counts[i].length; j++) {\n        arr[k++] = i;\n    }\n}\n</code></pre> <p>\u7b80\u5355\u70b9\u8bf4\uff0c\u8ba1\u6570\u6392\u5e8f\u7684\u5904\u7406\u8fc7\u7a0b\u5c31\u662f\uff1a</p> <ol> <li>\u7edf\u8ba1\u6240\u6709\u4e0d\u540c\u6570\u5b57\u7684\u51fa\u73b0\u9891\u7387</li> <li>\u6309\u7167\u9891\u7387\u5c06\u6570\u5b57\u586b\u5145\u5230\u6570\u7ec4</li> </ol> <p>\u5904\u7406\u8fc7\u7a0b\u4e0d\u590d\u6742\uff0c\u5173\u952e\u5c31\u5728\u4e8e\u5229\u7528\u4e86\u6570\u5b57\u7684\u5929\u7136\u6709\u5e8f\u6027\u3002</p>"},{"location":"ch10_sort/countsort/#13","title":"1.3 \u9891\u7387\u7d2f\u8ba1\u548c","text":"<p>\u6309\u7167\u6570\u5b57\u9891\u7387\u586b\u5145\u6570\u5b57\u56de\u539f\u6570\u7ec4\u65f6\uff0c\u53ef\u4ee5\u5229\u7528\u9891\u7387\u7d2f\u8ba1\u548c\u6765\u5b9e\u73b0\u3002</p> <p>\u6bd4\u5982\u4e0a\u9762\u7684\u8ba1\u6570\u6570\u7ec4\uff0c\u5c06\u5176\u4ece\u5de6\u81f3\u53f3\u7d2f\u8ba1\u8d77\u6765\uff0c\u53ef\u5f97\u5230\uff1a</p> <pre><code>  0   1   2   3   4   5   6   7   8   9\n ___ ___ ___ ___ ___ ___ ___ ___ ___ ___\n| 2 | 3 | 3 | 3 | 5 | 6 | 7 | 8 | 8 | 9 |\n</code></pre> <p>\u7d2f\u8ba1\u548c <code>counts[i]</code> \u7684\u610f\u601d\u5c31\u662f\uff0c\u5c0f\u4e8e\u7b49\u4e8e <code>i</code> \u7684\u503c\u6709 <code>counts[i]</code> \u4e2a\u3002</p> <p>\u5229\u7528\u8fd9\u4e2a\u7279\u6027\uff0c\u53ef\u4ee5\u5c06\u6570\u5b57 x \u76f4\u63a5\u5b9a\u4f4d\u5230\u5b83\u6700\u7ec8\u6392\u5e8f\u597d\u7684\u4f4d\u7f6e\u3002</p> <p>\u6bd4\u5982 <code>x = 4</code>\uff0c<code>counts[4] = 5</code>\uff0c\u8bf4\u660e\u5c0f\u4e8e\u7b49\u4e8e x \u7684\u6709 5 \u4e2a\u3002</p> <p>\u90a3\u4e48 x \u6392\u597d\u5e8f\u540e\u7684\u4f4d\u7f6e\u5c31\u662f\u7b2c 5 \u4f4d\uff0c\u653e\u5230\u6570\u7ec4\u4e2d\u5c31\u662f <code>arr[4] = x</code>\u3002</p> <pre><code>  0   1   2   3   4   5   6   7   8\n ___ ___ ___ ___ ___ ___ ___ ___ ___\n|   |   |   |   | x |   |   |   |   |\n</code></pre> <p>\u4f46\u662f\u5982\u679c\u63a5\u7740\u904d\u5386\u65f6\u53c8\u78b0\u5230\u4e00\u4e2a <code>y = 4</code>\uff0c\u8fd9\u65f6\u5e94\u8be5\u653e\u54ea\u91cc\u5462\uff1f</p> <p>\u96be\u9053\u4e5f\u653e <code>arr[4]</code> \u5417\uff1f\u8fd9\u4f1a\u8986\u76d6\u6389\u4e0a\u4e00\u4e2a x \u7684\uff0c\u4e0d\u53ef\u4ee5\u653e\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c\u5728\u653e\u5165 x \u65f6\uff0c\u9700\u540c\u65f6\u4fee\u6539\u7d2f\u8ba1\u548c\uff0c\u5c06\u5176\u51cf\u4e00 <code>count[4]--</code>\uff0c\u8868\u793a\u5df2\u7ecf\u6709 1 \u4e2a\u6570\u5b57\u653e\u8fdb\u53bb\u4e86\u3002</p> <p>\u6240\u4ee5\u5f53\u904d\u5386\u5230 y \u65f6\uff0c\u5b9e\u9645\u4e0a\u6b64\u65f6 <code>counts[4] = 4</code>\uff0c\u6240\u4ee5 y \u7684\u4f4d\u7f6e\u5e94\u8be5\u662f <code>arr[3]</code>\uff1a</p> <pre><code>  0   1   2   3   4   5   6   7   8\n ___ ___ ___ ___ ___ ___ ___ ___ ___\n|   |   |   | y | x |   |   |   |   |\n</code></pre> <p>\u901a\u8fc7\u9891\u7387\u7d2f\u8ba1\u548c\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u9010\u4e2a\u5c06\u6570\u636e\u6446\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u3002</p>"},{"location":"ch10_sort/countsort/#_3","title":"\u4e8c\u3001\u7b97\u6cd5\u5b9e\u73b0","text":""},{"location":"ch10_sort/countsort/#21-1","title":"2.1 \u5212\u5206\u6210\u5bbd\u4e3a 1 \u7684\u6876","text":"<pre><code>// \u627e\u51fa\u6570\u636e\u7684\u8303\u56f4\uff08\u6700\u5c0f\u6700\u5927\u503c\uff09\nint min = Integer.MAX_VALUE;\nint max = Integer.MIN_VALUE;\nfor (int num : arr) {\n    if (num &gt; max) {\n        max = num;\n    }\n    if (num &lt; min) {\n        min = num;\n    }\n}\n\n// \u521d\u59cb\u5316\u8ba1\u6570\u8303\u56f4\nint n = max - min + 1;\nint[] counts = new int[n];\n</code></pre>"},{"location":"ch10_sort/countsort/#22","title":"2.2 \u5c06\u6570\u636e\u6620\u5c04\u5230\u6876\u5185","text":"<p>\u901a\u5927\u5c0f\u662f1\uff0c\u90fd\u662f\u76f8\u540c\u503c\uff0c\u4e0d\u7528\u8bb0\u5f55\u6570\u636e\uff0c\u53ea\u9700\u8981\u8ba1\u6570\u5c31\u884c\uff1a</p> <pre><code>// \u7edf\u8ba1\u6570\u5b57\u7684\u9891\u7387\nfor (int num : arr) {\n    int index = num - min;\n    counts[index]++;\n}\n</code></pre>"},{"location":"ch10_sort/countsort/#23","title":"2.3 \u7edf\u8ba1\u9891\u7387\u7d2f\u8ba1\u548c","text":"<pre><code>// \u9891\u7387\u7d2f\u8ba1\u548c\nfor (int i = 1; i &lt; counts.length; i++) {\n    counts[i] += counts[i - 1];\n}\n</code></pre>"},{"location":"ch10_sort/countsort/#24","title":"2.4 \u5012\u5e8f\u6446\u653e\u6570\u636e","text":"<p>\u5012\u5e8f\u7684\u4f5c\u7528\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6570\u7ec4\u6570\u636e\u7684\u7a33\u5b9a\u6027\u3002</p> <p>\u5982\u679c\u4e0d\u9700\u8981\u7a33\u5b9a\u6027\uff0c\u6b63\u5e8f\u904d\u5386\u4e5f\u662f\u53ef\u4ee5\u7684\u3002</p> <pre><code>// \u5012\u5e8f\u904d\u5386\u83b7\u53d6\u6392\u5e8f\u7ed3\u679c\nint[] copy = Arrays.copyOf(arr, arr.length);\nfor (int i = copy.length - 1; i &gt;= 0; i--) {\n    int index = copy[i] - min;\n    counts[index]--;\n    arr[counts[index]] = copy[i];\n}\n</code></pre>"},{"location":"ch10_sort/countsort/#_4","title":"\u4e09\u3001\u7b97\u6cd5\u5206\u6790","text":""},{"location":"ch10_sort/countsort/#31","title":"3.1 \u65f6\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> <li>\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> <li>\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> </ul>"},{"location":"ch10_sort/countsort/#32","title":"3.2 \u7a7a\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> <li>\u975e\u539f\u5730\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/countsort/#33","title":"3.3 \u7a33\u5b9a\u6027","text":"<ul> <li>\u7a33\u5b9a\u6392\u5e8f\u7b97\u6cd5\uff08\u5012\u5e8f\u6446\u653e\uff09</li> </ul>"},{"location":"ch10_sort/countsort/#_5","title":"\u56db\u3001\u9002\u7528\u573a\u666f","text":"<ul> <li>\u6570\u636e\u8303\u56f4\uff08max - min\uff09\u6bd4\u8f83\u5c0f</li> <li>\u6570\u636e\u8303\u56f4\uff08max - min\uff09\u6bd4\u6570\u636e\u91cf\uff08n\uff09\u8981\u5c0f\u5f97\u591a</li> </ul>"},{"location":"ch10_sort/countsort/#_6","title":"\u9644\u5f55","text":"<pre><code>/**\n * \u8ba1\u6570\u6392\u5e8f\n * &lt;p&gt;\n * \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\n * &lt;p&gt;\n * \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\n * &lt;p&gt;\n * \u7a33\u5b9a\u6027\uff1a\u7a33\u5b9a\n *\n * @author weijiaduo\n * @since 2022/9/5\n */\npublic class CountSort implements Sort {\n\n    @Override\n    public void sort(int[] arr) {\n        // \u627e\u51fa\u6570\u636e\u7684\u8303\u56f4\uff08\u6700\u5c0f\u6700\u5927\u503c\uff09\n        int min = Integer.MAX_VALUE;\n        int max = Integer.MIN_VALUE;\n        for (int num : arr) {\n            if (num &gt; max) {\n                max = num;\n            }\n            if (num &lt; min) {\n                min = num;\n            }\n        }\n\n        // \u521d\u59cb\u5316\u8ba1\u6570\u8303\u56f4\n        int n = max - min + 1;\n        int[] counts = new int[n];\n\n        // \u7edf\u8ba1\u6570\u5b57\u7684\u6570\u91cf\n        for (int num : arr) {\n            int index = num - min;\n            counts[index]++;\n        }\n\n        // \u7d2f\u8ba1\u6570\u91cf\u548c\n        for (int i = 1; i &lt; counts.length; i++) {\n            counts[i] += counts[i - 1];\n        }\n\n        // \u5012\u5e8f\u904d\u5386\u83b7\u53d6\u6392\u5e8f\u7ed3\u679c\n        int[] copy = Arrays.copyOf(arr, arr.length);\n        for (int i = copy.length - 1; i &gt;= 0; i--) {\n            int index = copy[i] - min;\n            counts[index]--;\n            arr[counts[index]] = copy[i];\n        }\n    }\n\n}\n</code></pre>"},{"location":"ch10_sort/heapsort/","title":"\u5806\u6392\u5e8f","text":""},{"location":"ch10_sort/heapsort/#_2","title":"\u4e00\u3001\u4ec0\u4e48\u662f\u5806\u6392\u5e8f\uff1f","text":"<ul> <li>\u57fa\u4e8e\u5806\u5b9e\u73b0\u7684\u6392\u5e8f\u7b97\u6cd5</li> <li>\u5229\u7528\u5806\u9876\u7684\u6709\u5e8f\u6027\uff08\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\uff09\u6765\u5b9e\u73b0\u5bf9\u6570\u7ec4\u7684\u6392\u5e8f</li> </ul>"},{"location":"ch10_sort/heapsort/#_3","title":"\u4e8c\u3001\u4e3a\u4ec0\u4e48\u8981\u7528\u5806\u6392\u5e8f\uff1f","text":"<ul> <li>\u552f\u4e00\u80fd\u591f\u540c\u65f6\u6700\u4f18\u5730\u5229\u7528\u7a7a\u95f4\u548c\u65f6\u95f4\u7684\u6392\u5e8f\u7b97\u6cd5</li> <li>\u7f3a\u70b9\u662f\u5f88\u5c11\u548c\u76f8\u90bb\u5143\u7d20\u6bd4\u8f83\uff0c\u5bfc\u81f4\u65e0\u6cd5\u5229\u7528\u7f13\u5b58</li> </ul>"},{"location":"ch10_sort/heapsort/#_4","title":"\u4e09\u3001\u600e\u4e48\u5b9e\u73b0\u5806\u6392\u5e8f\uff1f","text":"<p>\u5806\u6392\u5e8f\u53ef\u4ee5\u5206\u4e3a 2 \u6b65\uff1a</p> <ul> <li>\u6784\u5efa\u5806\uff1a\u5c06\u6570\u7ec4\u6784\u5efa\u6210\u5806</li> <li>\u5806\u6392\u5e8f\uff1a\u4e00\u76f4\u79fb\u9664\u5806\u9876\u5143\u7d20\uff0c\u76f4\u5230\u5806\u4e3a\u7a7a\u4e3a\u6b62</li> </ul> <p>\u5148\u5c06\u6570\u636e\u5efa\u6210\u4e8c\u53c9\u6811\u7684\u5f62\u5f0f\uff0c\u518d\u8fdb\u884c\u6392\u5e8f\u3002</p>"},{"location":"ch10_sort/heapsort/#31","title":"3.1 \u6784\u5efa\u5806","text":"<p>\u56e0\u4e3a\u6bcf\u6b21\u90fd\u662f\u79fb\u9664\u5806\u9876\uff0c\u800c\u5806\u9876\u4e00\u76f4\u90fd\u662f\u6700\u5927\u503c/\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u79fb\u9664\u5806\u5143\u7d20\u5c31\u662f\u6392\u5e8f\u7684\u8fc7\u7a0b\u3002</p> <p>\u6bd4\u5982\u8bf4\uff0c\u6570\u7ec4 <code>[2, 7, 1, 4, 3, 6, 5]</code>\uff0c\u8981\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002</p> <p>\u7b2c\u4e00\u6b65\u662f\u6784\u5efa\u5806\uff0c\u5c06\u6570\u7ec4\u6784\u5efa\u51fa\u5927\u9876\u5806\u7684\u7ed3\u6784\uff1a</p> <pre><code>                            1=&gt;6                       7                      2=&gt;7=&gt;4\n\n      2                       2                        2                         7             \n   /     \\                 /     \\                  /     \\                   /     \\      \n  7       1               7       6                7       6                 4       6  \n / \\     / \\             / \\     / \\              / \\     / \\               / \\     / \\     \n4   3   6   5           4   3   1   5            4   3   1   5             2   3   1   5 \n</code></pre> <p>\u6784\u5efa\u5b8c\u5806\u4ee5\u540e\uff0c\u6570\u7ec4\u53d8\u6210\u4e86\u8fd9\u6837\uff1a</p> <pre><code>               7      \n            /     \\   \n           4       6                         -- \u903b\u8f91\u7ed3\u6784\uff08\u4e8c\u53c9\u6811\uff09\n          / \\     / \\ \n         2   3   1   5\n\n  ___ ___ ___ ___ ___ ___ ___\n | 7 | 4 | 6 | 2 | 3 | 1 | 5 |               -- \u7269\u7406\u7ed3\u6784\uff08\u6570\u7ec4\uff09\n</code></pre>"},{"location":"ch10_sort/heapsort/#32","title":"3.2 \u5806\u6392\u5e8f","text":"<p>\u63a5\u4e0b\u6765\u662f\u6392\u5e8f\uff0c\u6392\u5e8f\u8fc7\u7a0b\u5c31\u662f\u4e00\u76f4\u79fb\u9664\u5806\u9876\u5143\u7d20\u3002</p> <p>\u88ab\u79fb\u9664\u7684\u5806\u9876\u5143\u7d20\u653e\u5230\u6570\u7ec4\u7684\u672b\u5c3e\u7a7a\u4f4d\uff08\u76f8\u5f53\u4e8e\u672b\u5c3e\u5df2\u7ecf\u4e0d\u7b97\u5728\u5806\u5185\u4e86\uff09\uff1a</p> <pre><code>               7                                            6                 \n            /     \\                                      /     \\            \n           4       6                     =&gt;             4       5           \n          / \\     / \\                                  / \\     /          \n         2   3   1   5                                2   3   1        \n  ___ ___ ___ ___ ___ ___ ___                        ___ ___ ___ ___ ___ ___     ___ \n | 7 | 4 | 6 | 2 | 3 | 1 | 5 |                      | 6 | 4 | 5 | 2 | 3 | 1 |   | 7 |\n</code></pre> <p>\u6ce8\u610f\uff0c\u79fb\u9664\u5806\u9876\u7684\u540c\u65f6\u4f1a\u8c03\u6574\u5806\u7ed3\u6784\uff08\u8fd9\u4e2a\u662f\u5806\u7684\u6027\u8d28\uff09\u3002</p> <p>\u4ee5\u6b64\u7c7b\u63a8\uff0c\u4e00\u76f4\u79fb\u9664\u5806\u9876\u5143\u7d20\uff0c\u76f4\u5230\u5806\u53d8\u6210\u7a7a\u4e3a\u6b62\u3002</p> <p>\u79fb\u9664\u5806\u9876 6\uff1a</p> <pre><code>         6                                                  5                    \n      /     \\                                            /     \\                \n     4       5                           =&gt;             4       1              \n    / \\     /                                          / \\                    \n   2   3   1                                          2   3                    \n  ___ ___ ___ ___ ___ ___     ___                    ___ ___ ___ ___ ___     ___ ___ \n | 6 | 4 | 5 | 2 | 3 | 1 |   | 7 |                  | 5 | 4 | 1 | 2 | 3 |   | 6 | 7 |\n</code></pre> <p>\u79fb\u9664\u5806\u9876 5\uff1a</p> <pre><code>         5                                                  4                  \n      /     \\                                            /     \\               \n     4       1                           =&gt;             3       1              \n    / \\                                                /                       \n   2   3                                              2                        \n  ___ ___ ___ ___ ___     ___ ___                    ___ ___ ___ ___     ___ ___ ___ \n | 5 | 4 | 1 | 2 | 3 |   | 6 | 7 |                  | 4 | 3 | 1 | 2 |   | 5 | 6 | 7 |\n</code></pre> <p>\u79fb\u9664\u5806\u9876 4\uff1a</p> <pre><code>         4                                              3                  \n      /     \\                                          / \\               \n     3       1                           =&gt;           2   1              \n    /                                                                           \n   2                                                                            \n  ___ ___ ___ ___     ___ ___ ___                    ___ ___ ___     ___ ___ ___ ___ \n | 4 | 3 | 1 | 2 |   | 3 | 6 | 7 |                  | 3 | 2 | 1 |   | 4 | 5 | 6 | 7 |\n</code></pre> <p>\u79fb\u9664\u5806\u9876 3\uff1a</p> <pre><code>     3                                                2                  \n    / \\                                  =&gt;            \\               \n   2   1                                                1              \n  ___ ___ ___     ___ ___ ___ ___                    ___ ___     ___ ___ ___ ___ ___ \n | 3 | 2 | 1 |   | 4 | 5 | 6 | 7 |                  | 2 | 1 |   | 3 | 4 | 5 | 6 | 7 |\n</code></pre> <p>\u79fb\u9664\u5806\u9876 2\uff1a</p> <pre><code>   2                                     =&gt;           1                  \n    \\                                                                 \n     1                                                                \n  ___ ___     ___ ___ ___ ___ ___                    ___     ___ ___ ___ ___ ___ ___ \n | 2 | 1 |   | 3 | 4 | 5 | 6 | 7 |                  | 1 |   | 2 | 3 | 4 | 5 | 6 | 7 |\n</code></pre> <p>\u81f3\u6b64\uff0c\u5806\u6392\u5e8f\u7ed3\u675f\uff0c\u6570\u636e\u5df2\u7ecf\u6392\u597d\u5e8f\u4e86\u3002</p>"},{"location":"ch10_sort/heapsort/#_5","title":"\u56db\u3001\u7b97\u6cd5\u5206\u6790","text":""},{"location":"ch10_sort/heapsort/#41","title":"4.1 \u65f6\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> <li>\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)</li> <li>\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)</li> </ul>"},{"location":"ch10_sort/heapsort/#42","title":"4.2 \u7a7a\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)</li> <li>\u539f\u5730\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/heapsort/#43","title":"4.3 \u7a33\u5b9a\u6027","text":"<ul> <li>\u4e0d\u7a33\u5b9a\u6392\u5e8f\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/heapsort/#_6","title":"\u603b\u7ed3","text":"<ul> <li>\u57fa\u4e8e\u5806\u5b9e\u73b0\u7684\u6392\u5e8f\u7b97\u6cd5</li> <li>\u5229\u7528\u5806\u9876\u7684\u6709\u5e8f\u6027\uff08\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c\uff09\u6765\u5b9e\u73b0\u5bf9\u6570\u7ec4\u7684\u6392\u5e8f</li> <li>\u4f18\u7f3a\u70b9<ul> <li>\u4f18\u70b9\uff1a\u552f\u4e00\u80fd\u591f\u540c\u65f6\u6700\u4f18\u5730\u5229\u7528\u7a7a\u95f4\u548c\u65f6\u95f4\u7684\u6392\u5e8f\u7b97\u6cd5</li> <li>\u7f3a\u70b9\uff1a\u5f88\u5c11\u548c\u76f8\u90bb\u5143\u7d20\u6bd4\u8f83\uff0c\u5bfc\u81f4\u65e0\u6cd5\u5229\u7528\u7f13\u5b58</li> </ul> </li> <li>\u5806\u6392\u5e8f\u6b65\u9aa4<ul> <li>\u6784\u5efa\u5806\uff1a\u5c06\u6570\u7ec4\u6784\u5efa\u6210\u5806</li> <li>\u5806\u6392\u5e8f\uff1a\u4e00\u76f4\u79fb\u9664\u5806\u9876\u5143\u7d20\uff0c\u76f4\u5230\u5806\u4e3a\u7a7a\u4e3a\u6b62</li> </ul> </li> </ul>"},{"location":"ch10_sort/heapsort/#_7","title":"\u53c2\u8003","text":"<p>\u300a\u7b97\u6cd5\uff08\u7b2c4\u7248\uff09\u300b</p> <p>https://juejin.cn/post/7119807721766912030</p>"},{"location":"ch10_sort/heapsort/#_8","title":"\u9644\u5f55","text":"<pre><code>/**\n * \u5806\u6392\u5e8f\n *\n * @author weijiaduo\n * @since 2023/2/26\n */\npublic class HeapSort implements Sort {\n\n    @Override\n    public void sort(int[] arr) {\n        // \u5efa\u5806\n        int n = arr.length;\n        for (int i = (n - 1) / 2; i &gt;= 0; i--) {\n            sink(arr, i, n);\n        }\n\n        // \u6392\u5e8f\n        for (int i = n; i &gt; 0; i--) {\n            swap(arr, 0, i - 1);\n            sink(arr, 0, i - 1);\n        }\n    }\n\n    /**\n     * \u4e0b\u6c89\n     *\n     * @param arr \u6570\u7ec4\n     * @param i   \u5f53\u524d\u7d22\u5f15 i\n     * @param n   \u6570\u7ec4\u957f\u5ea6\n     */\n    private void sink(int[] arr, int i, int n) {\n        while (i &lt; n - 1) {\n            int m = i;\n            // \u5de6\u5b50\u8282\u70b9\n            int l = 2 * i + 1;\n            if (l &lt; n &amp;&amp; arr[l] &gt; arr[m]) {\n                m = l;\n            }\n            // \u53f3\u5b50\u8282\u70b9\n            int r = 2 * i + 2;\n            if (r &lt; n &amp;&amp; arr[r] &gt; arr[m]) {\n                m = r;\n            }\n            if (m == i) {\n                break;\n            }\n            swap(arr, i, m);\n            i = m;\n        }\n    }\n\n}\n</code></pre>"},{"location":"ch10_sort/insertsort/","title":"\u63d2\u5165\u6392\u5e8f","text":""},{"location":"ch10_sort/insertsort/#_2","title":"\u4e00\u3001\u7b97\u6cd5\u63cf\u8ff0","text":""},{"location":"ch10_sort/insertsort/#11","title":"1.1  \u6838\u5fc3\u601d\u60f3","text":"<ul> <li>\u6570\u636e\u5206\u4e3a\u5df2\u6392\u5e8f\u533a\u95f4\u548c\u672a\u6392\u5e8f\u533a\u95f4</li> <li>\u63d2\u5165\u90fd\u662f\u4ece\u672a\u6392\u5e8f\u533a\u95f4\u53d6\u51fa\u5143\u7d20\uff0c\u63d2\u5165\u5230\u5df2\u6392\u5e8f\u533a\u95f4\u5408\u9002\u7684\u4f4d\u7f6e\u4e2d</li> <li>\u63d2\u5165\u5df2\u6392\u5e8f\u533a\u95f4\u65f6\uff0c\u540c\u65f6\u8981\u4fdd\u8bc1\u5df2\u6392\u5e8f\u533a\u95f4\u7684\u6709\u5e8f\u6027</li> </ul>"},{"location":"ch10_sort/insertsort/#12","title":"1.2 \u7ec6\u8282\u89e3\u91ca","text":"<p>\u6bd4\u5982\u8bf4\uff0c\u6570\u7ec4 <code>[2, 7, 1, 4, 3, 6, 5]</code>\u3002</p> <p>\u9996\u5148\u5206\u6210\u672a\u6392\u5e8f\u548c\u5df2\u6392\u5e8f\u533a\u95f4\uff0c\u7b2c 1 \u4e2a\u503c\u65e0\u9700\u6392\u5e8f\uff0c\u9ed8\u8ba4\u5c5e\u4e8e\u5df2\u6392\u5e8f\u533a\u95f4\uff1a</p> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n  ___                              ___ ___ ___ ___ ___ ___\n | 2 |                            | 7 | 1 | 4 | 3 | 6 | 5 |\n</code></pre> <p>\u6b64\u65f6\u4ece\u672a\u6392\u5e8f\u533a\u95f4\u4e2d\u53d6\u4e00\u4e2a\u503c 7\uff0c\u63d2\u5165\u5230\u5df2\u6392\u5e8f\u533a\u95f4\uff1a</p> <p>\u56e0\u4e3a <code>7 &gt; 2</code>\uff0c\u6240\u4ee5 7 \u76f4\u63a5\u63d2\u5165\u5230 2 \u540e\u9762\uff1a</p> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n  ___ ___                          ___ ___ ___ ___ ___\n | 2 | 7 |                        | 1 | 4 | 3 | 6 | 5 |\n</code></pre> <p>\u7ee7\u7eed\u4ece\u672a\u6392\u5e8f\u533a\u95f4\u53d6\u503c 1\uff0c\u6b64\u65f6 <code>1 &lt; 7</code>\u3001<code>1 &lt; 2</code>\uff0c\u6240\u4ee5\u63d2\u5165\u5230 2 \u524d\u9762\uff1a</p> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n  ___ ___ ___                      ___ ___ ___ ___\n | 1 | 2 | 7 |                    | 4 | 3 | 6 | 5 |\n</code></pre> <p>\u4ee5\u6b64\u7c7b\u63a8\uff0c\u540e\u9762\u6bcf\u4e00\u6b65\u7684\u7ed3\u679c\u5982\u4e0b\uff1a</p> <p>\u63d2\u5165 4\uff1a</p> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n  ___ ___ ___ ___                  ___ ___ ___\n | 1 | 2 | 4 | 7 |                | 3 | 6 | 5 |\n</code></pre> <p>\u63d2\u5165 3\uff1a</p> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n  ___ ___ ___ ___ ___              ___ ___\n | 1 | 2 | 3 | 4 | 7 |            | 6 | 5 |\n</code></pre> <p>\u63d2\u5165 6\uff1a</p> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n  ___ ___ ___ ___ ___ ___          ___\n | 1 | 2 | 3 | 4 | 6 | 7 |        | 5 |\n</code></pre> <p>\u63d2\u5165 5\uff1a</p> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n  ___ ___ ___ ___ ___ ___ ___\n | 1 | 2 | 3 | 4 | 5 | 6 | 7 |\n</code></pre> <p>\u7ecf\u8fc7 n \u8f6e\u63d2\u5165\u4ee5\u540e\uff0c\u6570\u7ec4\u5c31\u6392\u597d\u5e8f\u4e86\u3002</p>"},{"location":"ch10_sort/insertsort/#_3","title":"\u4e8c\u3001\u7b97\u6cd5\u5b9e\u73b0","text":"<pre><code>public void insertSort(int[] arr) {\n    int n = arr.length;\n    for (int i = 1; i &lt; n; i++) {\n        // \u672a\u6392\u5e8f\u533a\u95f4\u6570\u636e\u5143\u7d20\n        int x = arr[i];\n        int j = i;\n        // \u63d2\u5165\u5230\u5df2\u6392\u5e8f\u533a\u95f4\u5408\u9002\u7684\u4f4d\u7f6e\n        for (; j &gt; 0 &amp;&amp; x &lt; arr[j - 1]; j--) {\n            arr[j] = arr[j - 1];\n        }\n        arr[j] = x;\n    }\n}\n</code></pre> <p>\u6267\u884c\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <pre><code>=====  \u521d\u59cb\u6570\u7ec4 =====\n[0, 3, 1, 6, 2, 5, 4]\n\n=====\u7b2c 1 \u8f6e\u63d2\u5165=====\n[0, 1, 3, 6, 2, 5, 4]\n\n=====\u7b2c 2 \u8f6e\u63d2\u5165=====\n[0, 1, 3, 6, 2, 5, 4]\n\n=====\u7b2c 3 \u8f6e\u63d2\u5165=====\n[0, 1, 2, 3, 6, 5, 4]\n\n=====\u7b2c 4 \u8f6e\u63d2\u5165=====\n[0, 1, 2, 3, 5, 6, 4]\n\n=====\u7b2c 5 \u8f6e\u63d2\u5165=====\n[0, 1, 2, 3, 4, 5, 6]\n</code></pre>"},{"location":"ch10_sort/insertsort/#_4","title":"\u4e09\u3001\u7b97\u6cd5\u5206\u6790","text":""},{"location":"ch10_sort/insertsort/#31","title":"3.1 \u65f6\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> <li>\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)</li> <li>\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)</li> </ul>"},{"location":"ch10_sort/insertsort/#32","title":"3.2 \u7a7a\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)</li> <li>\u539f\u5730\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/insertsort/#33","title":"3.3 \u7a33\u5b9a\u6027","text":"<ul> <li>\u7a33\u5b9a\u6392\u5e8f\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/insertsort/#_5","title":"\u9644\u5f55","text":"<pre><code>/**\n * \u63d2\u5165\u6392\u5e8f\n * &lt;p&gt;\n * \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6700\u597d O(n) \u6700\u5dee O(n^2) \u5e73\u5747 O(n^2)\n * &lt;p&gt;\n * \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\n * &lt;p&gt;\n * \u7a33\u5b9a\u6027\uff1a\u7a33\u5b9a\n *\n * @author weijiaduo\n * @since 2022/7/21\n */\npublic class InsertSort implements Sort {\n\n    @Override\n    public void sort(int[] arr) {\n        int n = arr.length;\n        for (int i = 1; i &lt; n; i++) {\n            // \u672a\u6392\u5e8f\u533a\u95f4\u6570\u636e\u5143\u7d20\n            int x = arr[i];\n            int j = i;\n            // \u63d2\u5165\u5230\u5df2\u6392\u5e8f\u533a\u95f4\u5408\u9002\u7684\u4f4d\u7f6e\n            for (; j &gt; 0 &amp;&amp; x &lt; arr[j - 1]; j--) {\n                arr[j] = arr[j - 1];\n            }\n            arr[j] = x;\n        }\n    }\n\n}\n</code></pre>"},{"location":"ch10_sort/mergesort/","title":"\u5f52\u5e76\u6392\u5e8f","text":""},{"location":"ch10_sort/mergesort/#_2","title":"\u4e00\u3001\u7b97\u6cd5\u63cf\u8ff0","text":""},{"location":"ch10_sort/mergesort/#11","title":"1.1 \u6838\u5fc3\u601d\u60f3","text":"<ul> <li>\u4e8c\u5206\uff0c\u5c06\u6570\u636e\u4e8c\u7b49\u5747\u5206\uff0c\u7136\u540e\u5206\u522b\u6392\u5e8f\uff0c\u518d\u5408\u5e762\u4e2a\u6392\u597d\u5e8f\u7684\u6570\u636e</li> <li>\u9012\u5f52\uff0c\u4e00\u76f4\u4e8c\u7b49\u5747\u5206\u6570\u636e\uff0c\u76f4\u5230\u65e0\u6cd5\u5206\u5272\u540e\uff0c\u624d\u5f00\u59cb\u9012\u5f52\u5408\u5e76\u8fd4\u56de</li> <li>\u6574\u4e2a\u4e8c\u5206\u548c\u5408\u5e76\u7684\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u4ece\u4e0b\u5f80\u4e0a\u5408\u5e76\u6570\u636e\uff0c\u5148\u5bf9\u5b50\u6811\u6392\u5e8f\uff0c\u518d\u5408\u5e76\u6210\u6839\u8282\u70b9</li> </ul>"},{"location":"ch10_sort/mergesort/#12","title":"1.2  \u7ec6\u8282\u89e3\u91ca","text":"<p>\u6bd4\u5982\u8bf4\uff0c\u6570\u7ec4 <code>[5, 7, 2, 4, 3, 6, 1]</code>\u3002</p> <p>\u9996\u5148\u662f\u4e00\u76f4\u4e8c\u7b49\u5747\u5206\u6570\u636e\uff0c\u76f4\u5230\u65e0\u6cd5\u5206\u5272\u4e3a\u6b62\uff1a</p> <pre><code> ___     ___     ___     ___     ___     ___     ___\n| 5 |   | 7 |   | 2 |   | 4 |   | 3 |   | 6 |   | 1 |\n</code></pre> <p>\u7136\u540e\u4ece\u4e0b\u5f80\u4e0a\u5f00\u59cb\u5408\u5e76\u6392\u5e8f\u8fd4\u56de\uff1a</p> <pre><code> ___     ___     ___     ___     ___     ___     ___\n| 5 |   | 7 |   | 2 |   | 4 |   | 3 |   | 6 |   | 1 |       -- \u539f\u59cb\u6570\u7ec4\n  |       |       |       |       |       |       |\n  |_______|       |_______|       |_______|       |\n      |               |               |           |\n      V               V               V           V\n   ___ ___         ___ ___         ___ ___       ___\n  | 5 | 7 |       | 2 | 4 |       | 3 | 6 |     | 1 |       -- \u7b2c\u4e00\u5c42\u5408\u5e76\n      |               |               |           |\n      |_______________|               |___________|\n              |                             |\n              V                             V\n       ___ ___ ___ ___                 ___ ___ ___\n      | 2 | 4 | 5 | 7 |               | 1 | 3 | 6 |         -- \u7b2c\u4e8c\u5c42\u5408\u5e76\n              |                             |\n              |_____________________________|\n                             |\n                             V\n                ___ ___ ___ ___ ___ ___ ___\n               | 1 | 2 | 3 | 4 | 5 | 6 | 7 |                -- \u7b2c\u4e09\u5c42\u5408\u5e76\n</code></pre> <p>\u5f52\u5e76\u6392\u5e8f\u91c7\u7528\u7684\u662f\u5206\u6cbb\u601d\u60f3\uff0c\u5c06\u5c0f\u7684\u6709\u5e8f\u6570\u636e\u9010\u6e10\u5408\u5e76\u6210\u5927\u7684\u6709\u5e8f\u6570\u636e\u3002</p> <p>\u5c06 2 \u4e2a\u6709\u5e8f\u6570\u7ec4\u5408\u5e76\u6210 1 \u4e2a\u6570\u7ec4\u65f6\uff0c\u4e00\u822c\u91c7\u7528\u53cc\u6307\u9488\uff0c\u7c7b\u4f3c\u8fd9\u6837\uff1a</p> <pre><code>        lp                              rp\n        |                               |\n        V                               V\n       ___ ___ ___ ___                 ___ ___ ___\n      | 2 | 4 | 5 | 7 |               | 1 | 3 | 6 |         -- \u5f53\u524d\u6570\u7ec4\n\n\n                ___ ___ ___ ___ ___ ___ ___\n               |   |   |   |   |   |   |   |                -- \u989d\u5916\u7a7a\u95f4\n</code></pre> <p>\u5224\u65ad\u53cc\u6307\u9488\u6307\u5411\u5143\u7d20\u7684\u5927\u5c0f\uff0c\u5c0f\u7684\u653e\u5230\u989d\u5916\u7a7a\u95f4\u4e2d\uff0c\u7136\u540e\u79fb\u52a8\u6307\u9488\uff1a</p> <pre><code>        lp                                  rp\n        |                                   |\n        V                                   V\n       ___ ___ ___ ___                 ___ ___ ___\n      | 2 | 4 | 5 | 7 |               | 1 | 3 | 6 |         -- \u5f53\u524d\u6570\u7ec4\n\n\n                ___ ___ ___ ___ ___ ___ ___\n               | 1 |   |   |   |   |   |   |                -- \u989d\u5916\u7a7a\u95f4\n</code></pre> <p>\u901a\u8fc7\u4e0d\u65ad\u5224\u65ad\u548c\u79fb\u52a8\u53cc\u6307\u9488\uff0c\u6700\u7ec8\u53ef\u4ee5\u5b8c\u6210\u5bf9 2 \u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u5408\u5e76\uff1a</p> <pre><code>            lp                              rp\n            |                               |\n            V                               V\n       ___ ___ ___ ___                 ___ ___ ___\n      | 2 | 4 | 5 | 7 |               | 1 | 3 | 6 |         -- \u5f53\u524d\u6570\u7ec4\n\n\n                ___ ___ ___ ___ ___ ___ ___\n               | 1 | 2 |   |   |   |   |   |                -- \u989d\u5916\u7a7a\u95f4\n</code></pre> <pre><code>            lp                                 rp\n            |                                   |\n            V                                   V\n       ___ ___ ___ ___                 ___ ___ ___\n      | 2 | 4 | 5 | 7 |               | 1 | 3 | 6 |         -- \u5f53\u524d\u6570\u7ec4\n\n\n                ___ ___ ___ ___ ___ ___ ___\n               | 1 | 2 | 3 |   |   |   |   |                -- \u989d\u5916\u7a7a\u95f4\n</code></pre> <pre><code>                lp                              rp\n                |                               |\n                V                               V\n       ___ ___ ___ ___                 ___ ___ ___\n      | 2 | 4 | 5 | 7 |               | 1 | 3 | 6 |         -- \u5f53\u524d\u6570\u7ec4\n\n\n                ___ ___ ___ ___ ___ ___ ___\n               | 1 | 2 | 3 | 4 |   |   |   |                -- \u989d\u5916\u7a7a\u95f4\n</code></pre> <pre><code>                    lp                          rp\n                    |                           |\n                    V                           V\n       ___ ___ ___ ___                 ___ ___ ___\n      | 2 | 4 | 5 | 7 |               | 1 | 3 | 6 |         -- \u5f53\u524d\u6570\u7ec4\n\n\n                ___ ___ ___ ___ ___ ___ ___\n               | 1 | 2 | 3 | 4 | 5 |   |   |                -- \u989d\u5916\u7a7a\u95f4\n</code></pre> <pre><code>                    lp                              rp\n                    |                               |\n                    V                               V\n       ___ ___ ___ ___                 ___ ___ ___\n      | 2 | 4 | 5 | 7 |               | 1 | 3 | 6 |         -- \u5f53\u524d\u6570\u7ec4\n\n\n                ___ ___ ___ ___ ___ ___ ___\n               | 1 | 2 | 3 | 4 | 5 | 6 |   |                -- \u989d\u5916\u7a7a\u95f4\n</code></pre> <pre><code>                        lp                          rp\n                        |                           |\n                        V                           V\n       ___ ___ ___ ___                 ___ ___ ___\n      | 2 | 4 | 5 | 7 |               | 1 | 3 | 6 |         -- \u5f53\u524d\u6570\u7ec4\n\n\n                ___ ___ ___ ___ ___ ___ ___\n               | 1 | 2 | 3 | 4 | 5 | 6 | 7 |                -- \u989d\u5916\u7a7a\u95f4\n</code></pre> <p>\u5229\u7528\u989d\u5916\u7a7a\u95f4\u5408\u5e76\u5b8c\u6210\u4e4b\u540e\uff0c\u518d\u628a\u6392\u597d\u5e8f\u7684\u6570\u636e\u56de\u5199\u5230\u539f\u6570\u7ec4\u5373\u53ef\u3002</p>"},{"location":"ch10_sort/mergesort/#_3","title":"\u4e8c\u3001\u7b97\u6cd5\u5b9e\u73b0","text":"<p>\u4e8c\u5206\u6392\u5e8f\u4ee3\u7801\uff0c\u5c06\u6570\u636e\u5206\u5272\u62102\u90e8\u5206\uff0c\u5206\u522b\u6392\u5e8f\uff1a</p> <pre><code>sort(int[] arr, int start, int end) {\n    if (start + 1 &gt;= end) {\n        return;\n    }\n\n    // \u8ba1\u7b97\u4e2d\u70b9\n    int mid = start + (end - start) / 2;\n    // \u5bf9\u5de6\u8fb9\u8fdb\u884c\u6392\u5e8f\n    sort(arr, start, mid);\n    // \u5bf9\u53f3\u8fb9\u8fdb\u884c\u6392\u5e8f\n    sort(arr, mid, end);\n    // \u5408\u5e76\u5de6\u53f3\u4e24\u8fb9\u7684\u6570\u636e\n    merge(arr, start, mid, end);\n}\n</code></pre> <p>\u5408\u5e76\u6392\u597d\u5e8f\u7684\u6570\u636e\uff1a</p> <pre><code>merge(int[] arr, int start, int mid, int end) {\n    int n = end - start;\n    int[] tempArr = new int[n];\n    int i = start, j = mid, k = 0;\n    while (i &lt; mid &amp;&amp; j &lt; end) {\n        // \u4f18\u5148\u6392\u5de6\u8fb9\u7684\uff0c\u4fdd\u8bc1\u7a33\u5b9a\u6027\n        if (arr[i] &lt;= arr[j]) {\n            tempArr[k++] = arr[i++];\n        } else {\n            tempArr[k++] = arr[j++];\n        }\n    }\n    // \u5de6\u8fb9\u5269\u4f59\u5143\u7d20\n    while (i &lt; mid) {\n        tempArr[k++] = arr[i++];\n    }\n    // \u53f3\u8fb9\u5269\u4f59\u5143\u7d20\n    while (j &lt; end) {\n        tempArr[k++] = arr[j++];\n    }\n    // \u6ce8\u610f\u590d\u5236\u5230\u539f\u6570\u7ec4\u65f6\uff0c\u8d77\u70b9\u662f start\n    System.arraycopy(tempArr, 0, arr, start, n);\n}\n</code></pre>"},{"location":"ch10_sort/mergesort/#_4","title":"\u4e09\u3001\u7b97\u6cd5\u5206\u6790","text":""},{"location":"ch10_sort/mergesort/#31","title":"3.1 \u65f6\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)</li> <li>\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)</li> <li>\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)</li> </ul>"},{"location":"ch10_sort/mergesort/#32","title":"3.2 \u7a7a\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> <li>\u975e\u539f\u5730\u7b97\u6cd5\uff0c\u9700\u8981\u989d\u5916\u7a7a\u95f4</li> </ul>"},{"location":"ch10_sort/mergesort/#33","title":"3.3 \u7a33\u5b9a\u6027","text":"<ul> <li>\u7a33\u5b9a\u6392\u5e8f\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/mergesort/#_5","title":"\u56db\u3001\u9002\u7528\u573a\u666f","text":"<ul> <li>\u7a7a\u95f4\u6bd4\u8f83\u5145\u8db3</li> <li>\u5229\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u63d0\u5347\u6027\u80fd</li> </ul>"},{"location":"ch10_sort/mergesort/#_6","title":"\u9644\u5f55","text":"<pre><code>/**\n * \u5f52\u5e76\u6392\u5e8f\n * &lt;p&gt;\n * \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)\n * &lt;p&gt;\n * \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\n * &lt;p&gt;\n * \u7a33\u5b9a\u6027\uff1a\u7a33\u5b9a\n *\n * @author weijiaduo\n * @since 2022/9/1\n */\npublic class MergeSort implements Sort {\n\n    @Override\n    public void sort(int[] arr) {\n        sort(arr, 0, arr.length);\n    }\n\n    /**\n     * \u6392\u5e8f\n     *\n     * @param arr   \u6570\u7ec4\n     * @param start [start, end)\n     * @param end   [start, end)\n     */\n    private void sort(int[] arr, int start, int end) {\n        if (start + 1 &gt;= end) {\n            return;\n        }\n\n        // \u8ba1\u7b97\u4e2d\u70b9\n        int mid = start + (end - start) / 2;\n        // \u5bf9\u5de6\u8fb9\u8fdb\u884c\u6392\u5e8f\n        sort(arr, start, mid);\n        // \u5bf9\u53f3\u8fb9\u8fdb\u884c\u6392\u5e8f\n        sort(arr, mid, end);\n        // \u5408\u5e76\u5de6\u53f3\u4e24\u8fb9\u7684\u6570\u636e\n        merge(arr, start, mid, end);\n    }\n\n    /**\n     * \u5408\u5e76\u6392\u5e8f\u6570\u7ec4\n     *\n     * @param arr   \u6570\u7ec4\n     * @param start [start, end)\n     * @param mid   [start, mid) \u548c [mid, end)\n     * @param end   [start, end)\n     */\n    private void merge(int[] arr, int start, int mid, int end) {\n        int n = end - start;\n        int[] mergeArr = new int[n];\n        int i = start, j = mid, k = 0;\n        while (i &lt; mid &amp;&amp; j &lt; end) {\n            // \u4f18\u5148\u6392\u5de6\u8fb9\u7684\uff0c\u4fdd\u8bc1\u7a33\u5b9a\u6027\n            if (arr[i] &lt;= arr[j]) {\n                mergeArr[k++] = arr[i++];\n            } else {\n                mergeArr[k++] = arr[j++];\n            }\n        }\n        // \u5de6\u8fb9\u5269\u4f59\u5143\u7d20\n        while (i &lt; mid) {\n            mergeArr[k++] = arr[i++];\n        }\n        // \u53f3\u8fb9\u5269\u4f59\u5143\u7d20\n        while (j &lt; end) {\n            mergeArr[k++] = arr[j++];\n        }\n        // \u6ce8\u610f\u590d\u5236\u5230\u539f\u6570\u7ec4\u65f6\uff0c\u8d77\u70b9\u662f start\n        System.arraycopy(mergeArr, 0, arr, start, n);\n    }\n\n}\n</code></pre>"},{"location":"ch10_sort/quick3waysort/","title":"\u4e09\u5411\u5feb\u901f\u6392\u5e8f","text":""},{"location":"ch10_sort/quick3waysort/#_2","title":"\u4e00\u3001\u7b97\u6cd5\u63cf\u8ff0","text":""},{"location":"ch10_sort/quick3waysort/#11","title":"1.1 \u6838\u5fc3\u601d\u60f3","text":"<ul> <li>\u4e09\u5206\uff0c\u9009\u53d6\u4e00\u4e2a\u5206\u533a\u503c\uff0c\u5c06\u6570\u636e\u5206\u5272\u6210 3 \u90e8\u5206\uff1a\u5c0f\u4e8e\u3001\u7b49\u4e8e\u3001\u5927\u4e8e</li> <li>\u9012\u5f52\uff0c\u5bf9\u5c0f\u4e8e\u5927\u4e8e\u4e24\u90e8\u5206\u7ee7\u7eed\u6392\u5e8f\uff0c\u4e0d\u65ad\u9009\u70b9\u5206\u5272\u6570\u636e\uff0c\u76f4\u5230\u65e0\u6cd5\u5206\u5272\u4e3a\u6b62</li> <li>\u6574\u4e2a\u8fc7\u7a0b\u548c\u5feb\u901f\u6392\u5e8f\u7c7b\u4f3c\uff0c\u53ea\u662f\u539f\u6765\u7684\u4e00\u4e2a\u5206\u533a\u70b9\u53d8\u6210\u4e86\u4e00\u4e2a\u533a\u95f4\u800c\u5df2</li> </ul>"},{"location":"ch10_sort/quick3waysort/#12","title":"1.2 \u7ec6\u8282\u89e3\u91ca","text":"<p>\u6bd4\u5982\u8bf4\uff0c \u6570\u7ec4 <code>[3, 5, 2, 1, 3, 5, 1]</code>\u3002</p> <p>\u9996\u5148\u9009\u53d6\u4e00\u4e2a\u5206\u533a\u503c\uff08\u968f\u610f\u9009\u4e00\u4e2a\uff09\uff0c\u6bd4\u5982\u8bf4 3\u3002</p> <p>\u4ee5 3 \u57fa\u51c6\uff0c\u5c06\u5176\u4ed6\u6570\u636e\u5206\u5272\u6210 3 \u90e8\u5206\uff1a\u5c0f\u4e8e 3\u3001\u7b49\u4e8e 3\u3001\u5927\u4e8e 3\u3002</p> <pre><code>    \u5c0f\u4e8e3             \u7b49\u4e8e3          \u5927\u4e8e3\n ___ ___ ___        ___ ___        ___ ___\n| 2 | 1 | 1 |      | 3 | 3 |      | 5 | 5 |\n</code></pre> <p>\u7b49\u4e8e 3 \u7684\u90e8\u5206\u5c31\u4e0d\u7528\u7ba1\u4e86\uff0c\u56e0\u4e3a\u5df2\u7ecf\u6392\u597d\u4e86\u3002</p> <p>\u63a5\u7740\u5bf9\u5c0f\u4e8e 3 \u548c\u5927\u4e8e 3 \u7684\u90e8\u5206\u8fdb\u884c\u9012\u5f52\u6392\u5e8f\u3002</p> <p>(1) \u5148\u5bf9\u5c0f\u4e8e 3 \u7684\u90e8\u5206\u6392\u5e8f</p> <p>\u9996\u5148\u9009\u53d6\u4e00\u4e2a\u5206\u533a\u503c 2\uff0c\u7136\u540e\u4ee5 2 \u4e3a\u57fa\u51c6\u5206\u5272\u6210 3 \u90e8\u5206\uff1a</p> <pre><code>   \u5c0f\u4e8e2          \u7b49\u4e8e2          \u5927\u4e8e2\n ___ ___          ___ \n| 1 | 1 |        | 2 |\n</code></pre> <p>\u7b49\u4e8e 2 \u7684\u90e8\u5206\u5c31\u4e0d\u7528\u7ba1\u4e86\uff0c\u56e0\u4e3a\u5df2\u7ecf\u6392\u597d\u4e86\u3002</p> <p>\u63a5\u7740\u5bf9\u5c0f\u4e8e 2 \u548c\u5927\u4e8e 2 \u7684\u90e8\u5206\u8fdb\u884c\u9012\u5f52\u6392\u5e8f\uff0c\u6700\u7ec8\u53ef\u4ee5\u5f97\u5230\uff1a</p> <pre><code> ___ ___ ___ \n| 1 | 1 | 2 |\n</code></pre> <p>(2) \u518d\u5bf9\u5927\u4e8e 3 \u7684\u90e8\u5206\u6392\u5e8f</p> <p>\u4e00\u6837\u5730\uff0c\u9009\u53d6\u4e00\u4e2a\u5206\u533a\u503c 5\uff0c\u7136\u540e\u4ee5 5 \u4e3a\u57fa\u51c6\u5206\u5272\u6210 3 \u90e8\u5206\uff1a</p> <pre><code>   \u5c0f\u4e8e5          \u7b49\u4e8e5          \u5927\u4e8e5\n                ___ ___\n               | 5 | 5 |\n</code></pre> <p>\u7b49\u4e8e 5 \u7684\u90e8\u5206\u5c31\u4e0d\u7528\u7ba1\u4e86\uff0c\u56e0\u4e3a\u5df2\u7ecf\u6392\u597d\u4e86\u3002</p> <p>\u81f3\u6b64\uff0c\u6574\u4e2a\u6392\u5e8f\u5b9e\u9645\u4e0a\u5df2\u7ecf\u62cd\u597d\u4e86\uff0c\u7ed3\u679c\u5c31\u662f\uff1a</p> <pre><code> ___ ___ ___ ___ ___ ___ ___\n| 1 | 1 | 2 | 3 | 3 | 5 | 5 |\n</code></pre> <p>\u4e09\u5411\u5feb\u901f\u6392\u5e8f\u548c\u5feb\u901f\u6392\u5e8f\u5dee\u4e0d\u591a\uff0c\u53ea\u662f\u4e2d\u95f4\u7684\u5355\u4e2a\u5143\u7d20\u53d8\u6210\u4e86\u4e00\u4e2a\u533a\u95f4\u800c\u5df2\u3002</p> <p>\u4f46\u662f\uff0c\u5982\u679c\u6570\u7ec4\u4e2d\u6709\u5927\u91cf\u91cd\u590d\u5143\u7d20\uff0c\u4e09\u5411\u5feb\u901f\u6392\u5e8f\u7684\u6548\u7387\u4f1a\u6bd4\u5feb\u901f\u6392\u5e8f\u9ad8\u5f88\u591a\u3002</p>"},{"location":"ch10_sort/quick3waysort/#_3","title":"\u4e8c\u3001\u7b97\u6cd5\u5b9e\u73b0","text":"<pre><code>private void partSort(int[] arr, int start, int end) {\n    if (start &gt;= end) {\n        return;\n    }\n    // \u4e09\u5206\u6570\u636e\uff08\u5c0f\u4e8e\u3001\u7b49\u4e8e\u3001\u5927\u4e8e\uff09\n    int x = arr[start];\n    int lp = start - 1, rp = end;\n    for (int i = lp + 1; i &lt; rp; ) {\n        if (arr[i] &lt; x) {\n            swap(arr, i++, ++lp);\n        } else if (arr[i] &gt; x) {\n            swap(arr, i, --rp);\n        } else {\n            i++;\n        }\n    }\n    // \u5bf9\u5c0f\u4e8e\u7684\u90e8\u5206\u6392\u5e8f\n    partSort(arr, start, lp + 1);\n    // \u5bf9\u5927\u4e8e\u7684\u90e8\u5206\u6392\u5e8f\n    partSort(arr, rp, end);\n}\n</code></pre>"},{"location":"ch10_sort/quick3waysort/#_4","title":"\u4e09\u3001\u7b97\u6cd5\u5206\u6790","text":""},{"location":"ch10_sort/quick3waysort/#31","title":"3.1 \u65f6\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)</li> <li>\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)</li> <li>\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)</li> </ul>"},{"location":"ch10_sort/quick3waysort/#32","title":"3.2 \u7a7a\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(logn)</li> <li>\u539f\u5730\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/quick3waysort/#33","title":"3.3 \u7a33\u5b9a\u6027","text":"<ul> <li>\u4e0d\u7a33\u5b9a\u6392\u5e8f\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/quick3waysort/#_5","title":"\u56db\u3001\u9002\u7528\u573a\u666f","text":"<ul> <li>\u542b\u6709\u5927\u91cf\u91cd\u590d\u5143\u7d20</li> </ul>"},{"location":"ch10_sort/quick3waysort/#_6","title":"\u9644\u5f55","text":"<pre><code>/**\n * \u4e09\u5411\u5feb\u901f\u6392\u5e8f\n * &lt;p&gt;\n * \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6700\u597d O(nlogn) \u6700\u5dee O(n^2) \u5e73\u5747 O(nlogn)\n * &lt;p&gt;\n * \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(logn)\n * &lt;p&gt;\n * \u7a33\u5b9a\u6027\uff1a\u4e0d\u7a33\u5b9a\n *\n * @author weijiaduo\n * @since 2023/4/16\n */\npublic class Quick3WaySort implements Sort {\n\n    @Override\n    public void sort(int[] arr) {\n        partSort(arr, 0, arr.length);\n    }\n\n    /**\n     * \u9012\u5f52\u6392\u5e8f\n     *\n     * @param arr   \u6570\u7ec4\n     * @param start [start, end)\n     * @param end   [start, end)\n     */\n    private void partSort(int[] arr, int start, int end) {\n        if (start &gt;= end) {\n            return;\n        }\n        // \u4e09\u5206\u6570\u636e\uff08\u5c0f\u4e8e\u3001\u7b49\u4e8e\u3001\u5927\u4e8e\uff09\n        int x = arr[start];\n        int lp = start - 1, rp = end;\n        for (int i = lp + 1; i &lt; rp; ) {\n            if (arr[i] &lt; x) {\n                swap(arr, i++, ++lp);\n            } else if (arr[i] &gt; x) {\n                swap(arr, i, --rp);\n            } else {\n                i++;\n            }\n        }\n        // \u5bf9\u5c0f\u4e8e\u7684\u90e8\u5206\u6392\u5e8f\n        partSort(arr, start, lp + 1);\n        // \u5bf9\u5927\u4e8e\u7684\u90e8\u5206\u6392\u5e8f\n        partSort(arr, rp, end);\n    }\n\n}\n</code></pre>"},{"location":"ch10_sort/quicksort/","title":"\u5feb\u901f\u6392\u5e8f","text":""},{"location":"ch10_sort/quicksort/#_2","title":"\u4e00\u3001\u7b97\u6cd5\u63cf\u8ff0","text":""},{"location":"ch10_sort/quicksort/#11","title":"1.1 \u6838\u5fc3\u601d\u60f3","text":"<ul> <li>\u4e8c\u5206\uff0c\u9009\u53d6\u4e00\u4e2a\u5206\u533a\u503c\uff0c\u5c06\u6570\u636e\u5206\u5272\u6210 2 \u90e8\u5206\uff1a\u5c0f\u4e8e\u548c\u5927\u4e8e</li> <li>\u9012\u5f52\uff0c\u5bf9\u5c0f\u4e8e\u5927\u4e8e\u4e24\u90e8\u5206\u518d\u6392\u5e8f\uff0c\u4e0d\u65ad\u9009\u70b9\u5206\u5272\u6570\u636e\uff0c\u76f4\u5230\u65e0\u6cd5\u5206\u5272\u4e3a\u6b62</li> <li>\u6574\u4e2a\u4e8c\u5206\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u4ece\u4e0a\u5f80\u4e0b\u6392\u5e8f\uff0c\u5148\u786e\u5b9a\u6839\u8282\u70b9\u4f4d\u7f6e\uff0c\u518d\u5904\u7406\u5b50\u6811\u6392\u5e8f</li> </ul>"},{"location":"ch10_sort/quicksort/#12","title":"1.2 \u7ec6\u8282\u89e3\u91ca","text":"<p>\u6bd4\u5982\u8bf4\uff0c \u6570\u7ec4 <code>[5, 7, 2, 4, 3, 6, 1]</code>\u3002</p> <p>\u9996\u5148\u9009\u53d6\u4e00\u4e2a\u5206\u533a\u503c\uff08\u968f\u610f\u9009\u4e00\u4e2a\uff09\uff0c\u6bd4\u5982\u8bf4 5\u3002</p> <p>\u4ee5 5 \u57fa\u51c6\uff0c\u5c06\u5176\u4ed6\u6570\u636e\u5206\u5272\u6210 2 \u90e8\u5206\uff1a\u4e00\u90e8\u5206\u5c0f\u4e8e 5\uff0c\u4e00\u90e8\u5206\u5927\u4e8e 5\u3002</p> <pre><code>      \u5c0f\u4e8e5                     \u5927\u4e8e5\n ___ ___ ___ ___               ___ ___\n| 2 | 4 | 3 | 1 |             | 7 | 6 |\n</code></pre> <p>\u7136\u540e\u5c06 5 \u63d2\u5165 2 \u90e8\u5206\u7684\u4e2d\u95f4\uff1a</p> <pre><code>      \u5c0f\u4e8e5                     \u5927\u4e8e5\n ___ ___ ___ ___      ___      ___ ___\n| 2 | 4 | 3 | 1 |    | 5 |    | 7 | 6 |\n</code></pre> <p>\u6b64\u65f6 5 \u5c31\u5df2\u7ecf\u6392\u597d\u4e86\u3002</p> <p>\u4e0b\u9762\u63a5\u7740\u5bf9\u5de6\u53f3 2 \u90e8\u5206\u8fdb\u884c\u9012\u5f52\u6392\u5e8f\u3002</p> <p>(1) \u5148\u5bf9\u5de6\u8fb9\u5c0f\u4e8e 5 \u7684\u90e8\u5206\u6392\u5e8f</p> <p>\u9996\u5148\u9009\u53d6\u4e00\u4e2a\u5206\u533a\u503c 2\uff0c\u7136\u540e\u4ee5 2 \u4e3a\u57fa\u51c6\u5206\u5272\u6210 2 \u90e8\u5206\uff1a</p> <pre><code>\u5c0f\u4e8e2           \u5927\u4e8e2\n ___           ___ ___\n| 1 |         | 4 | 3 |\n</code></pre> <p>\u5c06 2 \u63d2\u5165\u4e2d\u95f4\u4f4d\u7f6e\uff1a</p> <pre><code>\u5c0f\u4e8e2           \u5927\u4e8e2\n ___    ___    ___ ___\n| 1 |  | 2 |  | 4 | 3 |\n</code></pre> <p>\u6b64\u65f6 2 \u5c31\u6392\u597d\u4e86\u3002</p> <p>\u63a5\u7740\u4e0d\u65ad\u5f80\u4e0b\u9012\u5f52\uff0c\u76f4\u5230\u65e0\u6cd5\u5206\u5272\u4e3a\u6b62\uff0c\u6700\u540e\u53ef\u4ee5\u5f97\u5230\uff1a</p> <pre><code> ___    ___    ___    ___\n| 1 |  | 2 |  | 3 |  | 4 |\n</code></pre> <p>(2) \u518d\u5bf9\u53f3\u8fb9\u5927\u4e8e 5 \u7684\u90e8\u5206\u6392\u5e8f</p> <p>\u540c\u7406\uff0c\u4e5f\u662f\u9012\u5f52\u5206\u5272\u6570\u636e\uff0c\u6700\u540e\u53ef\u4ee5\u5f97\u5230\uff1a</p> <pre><code> ___    ___\n| 6 |  | 7 |\n</code></pre> <p>(3) \u6700\u540e\u5b8c\u6574\u7684\u5e8f\u5217\u7ed3\u679c</p> <pre><code> ___    ___    ___    ___    ___    ___    ___\n| 1 |  | 2 |  | 3 |  | 4 |  | 5 |  | 6 |  | 7 |\n</code></pre> <p>\u81f3\u6b64\u6392\u5e8f\u5c31\u5b8c\u6210\u4e86\uff0c\u5feb\u901f\u6392\u5e8f\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u5206\u6cbb\u7b97\u6cd5\uff0c\u5c06\u5927\u6392\u5e8f\u53d8\u6210\u5c0f\u6392\u5e8f\u6765\u505a\u3002</p>"},{"location":"ch10_sort/quicksort/#_3","title":"\u4e8c\u3001\u7b97\u6cd5\u5b9e\u73b0","text":""},{"location":"ch10_sort/quicksort/#21","title":"2.1 \u9012\u5f52\u4e8c\u5206\u6392\u5e8f","text":"<pre><code>void partSort(int[] arr, int start, int end) {\n    if (start &lt; end) {\n        // \u5206\u533a\n        int m = partition(arr, start, end);\n        // \u5de6\u8fb9\u6392\u5e8f\n        partSort(arr, start, m);\n        // \u53f3\u8fb9\u6392\u5e8f\n        partSort(arr, m + 1, end);\n    }\n}\n</code></pre>"},{"location":"ch10_sort/quicksort/#22","title":"2.2 \u5bf9\u6570\u636e\u8fdb\u884c\u5206\u533a","text":"<pre><code>int partition(int[] arr, int start, int end) {\n    // \u9009\u53d6\u5206\u533a\u70b9\n    int p = pivot(arr, start, end - 1);\n    // \u5c06\u5206\u533a\u70b9\u653e\u5230\u6700\u524d\u9762\n    swap(arr, start, p);\n    int ref = arr[start];\n    int lp = start;\n    // \u5c06\u6570\u636e\u4e0e\u5206\u533a\u70b9\u5bf9\u6bd4\uff0c\u5206\u6210\u5c0f\u4e8e\u548c\u5927\u4e8e2\u90e8\u5206\n    for (int i = lp + 1; i &lt; end; i++) {\n        if (arr[i] &lt;= ref) {\n            swap(arr, ++lp, i);\n        }\n    }\n    // \u5c06\u5206\u533a\u70b9\u653e\u5230\u5b83\u6700\u7ec8\u7684\u4f4d\u7f6e\n    swap(arr, start, lp);\n    return lp;\n}\n</code></pre>"},{"location":"ch10_sort/quicksort/#23","title":"2.3 \u5206\u533a\u70b9\u7684\u9009\u62e9","text":"<pre><code>// \u91c7\u7528\u5de6\u4e2d\u53f3\u4e09\u70b9\u53d6\u4e2d\u503c\u7684\u65b9\u5f0f\nint pivot(int[] arr, int i, int j) {\n    int mid = i + (j - i) / 2;\n    if (arr[i] &lt; arr[j]) {\n        return arr[mid] &gt; arr[i] ? mid : j;\n    } else {\n        return arr[mid] &lt; arr[i] ? mid : i;\n    }\n}\n</code></pre>"},{"location":"ch10_sort/quicksort/#_4","title":"\u4e09\u3001\u7b97\u6cd5\u5206\u6790","text":""},{"location":"ch10_sort/quicksort/#31","title":"3.1 \u65f6\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)</li> <li>\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)</li> <li>\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)</li> </ul>"},{"location":"ch10_sort/quicksort/#32","title":"3.2 \u7a7a\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(logn)</li> <li>\u539f\u5730\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/quicksort/#33","title":"3.3 \u7a33\u5b9a\u6027","text":"<ul> <li>\u4e0d\u7a33\u5b9a\u6392\u5e8f\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/quicksort/#_5","title":"\u56db\u3001\u9002\u7528\u573a\u666f","text":"<ul> <li>\u6570\u636e\u91cf\u6bd4\u8f83\u5927</li> <li>\u6570\u636e\u6709\u5e8f\u6027\u6bd4\u8f83\u5dee</li> </ul>"},{"location":"ch10_sort/quicksort/#_6","title":"\u9644\u5f55","text":"<pre><code>/**\n * \u5feb\u901f\u6392\u5e8f\n * &lt;p&gt;\n * \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6700\u597d O(nlogn) \u6700\u5dee O(n^2) \u5e73\u5747 O(nlogn)\n * &lt;p&gt;\n * \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(logn)\n * &lt;p&gt;\n * \u7a33\u5b9a\u6027\uff1a\u4e0d\u7a33\u5b9a\n *\n * @author weijiaduo\n * @since 2022/7/16\n */\npublic class QuickSort implements Sort {\n\n    /**\n     * \u6392\u5e8f\n     *\n     * @param arr \u6570\u7ec4\n     */\n    @Override\n    public void sort(int[] arr) {\n        partSort(arr, 0, arr.length);\n    }\n\n    /**\n     * \u9012\u5f52\u6392\u5e8f\n     *\n     * @param arr   \u6570\u7ec4\n     * @param start [start, end)\n     * @param end   [start, end)\n     */\n    private void partSort(int[] arr, int start, int end) {\n        if (start &lt; end) {\n            // \u5206\u533a\n            int m = partition(arr, start, end);\n            // \u5de6\u8fb9\u6392\u5e8f\n            partSort(arr, start, m);\n            // \u53f3\u8fb9\u6392\u5e8f\n            partSort(arr, m + 1, end);\n        }\n    }\n\n    /**\n     * \u4e8c\u5206\u6570\u7ec4\n     *\n     * @param arr   \u6570\u7ec4\n     * @param start [start, end)\n     * @param end   [start, end)\n     * @return \u5206\u9694\u70b9\u7d22\u5f15\n     */\n    private int partition(int[] arr, int start, int end) {\n        // \u9009\u53d6\u5206\u533a\u70b9\n        int p = pivot(arr, start, end - 1);\n        // \u5c06\u5206\u533a\u70b9\u653e\u5230\u6700\u524d\u9762\n        swap(arr, start, p);\n        int ref = arr[start];\n        int lp = start;\n        // \u5c06\u6570\u636e\u4e0e\u5206\u533a\u70b9\u5bf9\u6bd4\uff0c\u5206\u6210\u5c0f\u4e8e\u548c\u5927\u4e8e2\u90e8\u5206\n        for (int i = lp + 1; i &lt; end; i++) {\n            if (arr[i] &lt;= ref) {\n                swap(arr, ++lp, i);\n            }\n        }\n        // \u5c06\u5206\u533a\u70b9\u653e\u5230\u5b83\u6700\u7ec8\u7684\u4f4d\u7f6e\n        swap(arr, start, lp);\n        return lp;\n    }\n\n    /**\n     * \u9009\u62e9\u5206\u533a\u70b9\uff08\u9009\u62e9\u4e09\u4e2a\u70b9\u7684\u4e2d\u503c\u4f4d\u7f6e\uff09\n     *\n     * @param arr \u6570\u7ec4\n     * @param i   [i, j]\n     * @param j   [i, j]\n     * @return \u5206\u533a\u70b9\u7d22\u5f15\n     */\n    private int pivot(int[] arr, int i, int j) {\n        int mid = i + (j - i) / 2;\n        if (arr[i] &lt; arr[j]) {\n            return arr[mid] &gt; arr[i] ? mid : j;\n        } else {\n            return arr[mid] &lt; arr[i] ? mid : i;\n        }\n    }\n\n}\n</code></pre>"},{"location":"ch10_sort/radixsort/","title":"\u57fa\u6570\u6392\u5e8f","text":""},{"location":"ch10_sort/radixsort/#_2","title":"\u4e00\u3001\u7b97\u6cd5\u63cf\u8ff0","text":""},{"location":"ch10_sort/radixsort/#11","title":"1.1 \u6838\u5fc3\u601d\u60f3","text":"<ul> <li>\u6570\u636e\u6709\u9ad8\u4f4e\u4f4d\u4e4b\u5206\uff0c\u4f4d\u4e4b\u95f4\u6709\u9012\u8fdb\u5173\u7cfb</li> <li>\u9ad8\u4f4d\u76f8\u7b49\u7684\u60c5\u51b5\u4e0b\uff0c\u624d\u53bb\u5bf9\u6bd4\u4f4e\u4f4d\u5927\u5c0f</li> <li>\u6309\u7167\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u7684\u987a\u5e8f\uff0c\u4f7f\u7528\u7a33\u5b9a\u6392\u5e8f\u7b97\u6cd5\u5bf9\u6bcf\u4e00\u4f4d\u6392\u5e8f</li> </ul>"},{"location":"ch10_sort/radixsort/#12","title":"1.2 \u7ec6\u8282\u89e3\u91ca","text":"<p>\u6570\u636e\u6709\u9ad8\u4f4e\u4f4d\u4e4b\u5206\uff0c\u6bd4\u5982\u5341\u8fdb\u5236\u6570\u5b57 <code>1232</code>\uff0c\u5b57\u7b26\u4e32 <code>dwsc</code>\uff0c\u4e8c\u8fdb\u5236 <code>1001</code> \u7b49\u7b49\u3002</p> <p>\u8fd9\u4e9b\u7c7b\u578b\u7684\u6570\u636e\u90fd\u6709\u9ad8\u4f4e\u4f4d\uff0c\u800c\u4e14\u662f\u9ad8\u4f4d\u5927\u7684\u6570\u636e\u80af\u5b9a\u6bd4\u9ad8\u4f4d\u5c0f\u7684\u6570\u636e\u5927\u3002</p> <p>\u6bd4\u5982 <code>123</code> \u548c <code>234</code>\uff0c<code>123</code> \u6700\u9ad8\u4f4d <code>1</code> \u5c0f\u4e8e <code>234</code> \u6700\u9ad8\u4f4d <code>2</code>\uff0c\u6240\u4ee5  <code>123 &lt; 234</code>\u3002</p> <ul> <li>\u57fa\u6570\u6392\u5e8f\u5c31\u662f\u5229\u7528\u6570\u636e\u7684\u6bcf\u4e00\u4f4d\u8fdb\u884c\u6392\u5e8f\uff0c\u6700\u7ec8\u5f97\u5230\u6709\u5e8f\u5e8f\u5217\u7684</li> </ul> <p>\u6bd4\u5982\u8bf4\uff0c\u6570\u7ec4 <code>[12, 3, 154, 78, 9, 245, 35, 92]</code>\u3002</p> <p>\u56e0\u4e3a\u6570\u5b57\u957f\u5ea6\u4e0d\u540c\uff0c\u6240\u4ee5\u9996\u5148\u5c06\u6240\u6709\u6570\u5b57\u8865 0 \u8fdb\u884c\u957f\u5ea6\u5bf9\u9f50\uff1a</p> <pre><code>012\n003\n154\n078\n009\n245\n035\n092\n</code></pre> <p>\u7136\u540e\u6309\u7167\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u8fdb\u884c\u6392\u5e8f\uff1a</p> <p>\u5148\u6309\u201c\u4e2a\u4f4d\u201d\u6392\u5e8f\uff1a</p> <pre><code>\u5f53\u524d\u6570\u7ec4     \u53d6\u51fa\u201c\u4e2a\u201d\u4f4d     \u6309\u201c\u4e2a\u201d\u4f4d\u6392\u5e8f\n\n  012           xx2            012\n  003           xx3            092\n  154           xx4            003\n  078    =&gt;     xx8     =&gt;     154\n  009           xx9            245\n  245           xx5            035\n  035           xx5            078\n  092           xx2            009\n</code></pre> <p>\u518d\u6309\u201c\u5341\u4f4d\u201d\u6392\u5e8f\uff1a</p> <pre><code>\u5f53\u524d\u6570\u7ec4     \u53d6\u51fa\u201c\u5341\u201d\u4f4d     \u6309\u201c\u5341\u201d\u4f4d\u6392\u5e8f\n\n  012           x1x            003\n  092           x9x            009\n  003           x0x            012\n  154    =&gt;     x5x     =&gt;     035\n  245           x4x            245\n  035           x3x            154\n  078           x7x            078\n  009           x0x            092\n</code></pre> <p>\u518d\u6309\u201c\u767e\u4f4d\u201d\u6392\u5e8f\uff1a</p> <pre><code>\u5f53\u524d\u6570\u7ec4     \u53d6\u51fa\u201c\u767e\u201d\u4f4d     \u6309\u201c\u767e\u201d\u4f4d\u6392\u5e8f\n\n  003           0xx            003\n  009           0xx            009\n  012           0xx            012\n  035    =&gt;     0xx     =&gt;     035\n  245           2xx            078\n  154           1xx            092\n  078           0xx            154\n  092           0xx            245\n</code></pre> <p>\u6bcf\u4e2a\u201c\u4f4d\u201d\u90fd\u6392\u5b8c\u4e4b\u540e\uff0c\u5c31\u662f\u6700\u7ec8\u7684\u6392\u5e8f\u7ed3\u679c\u4e86\uff1a</p> <pre><code>[3, 9, 12, 35, 78, 92, 154, 245]\n</code></pre> <p>\u57fa\u6570\u6392\u5e8f\u7684\u5173\u952e\u5728\u4e8e\u4ece\u4f4e\u4f4d\u5f80\u9ad8\u4f4d\u6392\u5e8f\uff0c\u8fd9\u6837\u80fd\u4fdd\u8bc1\u9ad8\u4f4d\u6392\u5e8f\u662f\u6700\u540e\u7684\u3002</p>"},{"location":"ch10_sort/radixsort/#_3","title":"\u4e8c\u3001\u7b97\u6cd5\u5b9e\u73b0","text":""},{"location":"ch10_sort/radixsort/#21","title":"2.1 \u8ba1\u7b97\u6570\u636e\u7684\u57fa\u6570","text":"<pre><code>// \u627e\u5230\u6700\u5927\u503c\nint max = Integer.MIN_VALUE;\nfor (int a : arr) {\n    if (a &gt; max) {\n        max = a;\n    }\n}\n\n// \u7b97\u51fa\u57fa\u6570\uff08\u5373\u4f4d\u6570\uff09\nint radix = 0;\nwhile(max &gt; 0) {\n    max = max / 10;\n    radix++;\n}\n</code></pre>"},{"location":"ch10_sort/radixsort/#22","title":"2.2 \u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u6392\u5e8f","text":"<pre><code>// \u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\nint exp = 1;\nfor (int i = 0; i &lt; radix; i++) {\n    countSort(arr, exp);\n    exp *= 10;\n}\n</code></pre> <p>\u5bf9\u6bcf\u4e00\u4f4d\u8fdb\u884c\u6392\u5e8f\uff0c\u5219\u4f7f\u7528\u8ba1\u6570\u6392\u5e8f\uff08\u6216\u8005\u5176\u4ed6\u7a33\u5b9a\u6392\u5e8f\u7b97\u6cd5\u4e5f\u884c\uff09\u3002</p>"},{"location":"ch10_sort/radixsort/#_4","title":"\u4e09\u3001\u7b97\u6cd5\u5206\u6790","text":""},{"location":"ch10_sort/radixsort/#31","title":"3.1 \u65f6\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> <li>\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> <li>\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> </ul>"},{"location":"ch10_sort/radixsort/#32","title":"3.2 \u7a7a\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> <li>\u975e\u539f\u5730\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/radixsort/#33","title":"3.3 \u7a33\u5b9a\u6027","text":"<ul> <li>\u7a33\u5b9a\u6392\u5e8f\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/radixsort/#_5","title":"\u56db\u3001\u9002\u7528\u573a\u666f","text":"<ul> <li>\u6570\u636e\u53ef\u4ee5\u5206\u5272\u51fa\u201c\u4f4d\u201d\u6765\u6bd4\u8f83</li> <li>\u6570\u636e\u6709\u9ad8\u4f4e\u4f4d\u4e4b\u5206\uff0c\u4f4d\u4e4b\u95f4\u6709\u9012\u8fdb\u5173\u7cfb</li> <li>\u6bcf\u4e00\u4f4d\u7684\u6570\u636e\u8303\u56f4\u4e0d\u80fd\u592a\u5927\uff0c\u8981\u53ef\u4ee5\u7528\u7ebf\u6027\u6392\u5e8f\u7b97\u6cd5\u6765\u6392\u5e8f</li> </ul>"},{"location":"ch10_sort/radixsort/#_6","title":"\u9644\u5f55","text":"<pre><code>/**\n * \u57fa\u6570\u6392\u5e8f\n * &lt;p&gt;\n * \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\n * &lt;p&gt;\n * \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)\n * &lt;p&gt;\n * \u7a33\u5b9a\u6027\uff1a\u7a33\u5b9a\n *\n * @author weijiaduo\n * @since 2022/9/6\n */\npublic class RadixSort implements Sort {\n\n    @Override\n    public void sort(int[] arr) {\n        // \u627e\u5230\u6570\u7ec4\u6700\u5927\u503c\n        int max = Integer.MIN_VALUE;\n        for (int a : arr) {\n            if (a &gt; max) {\n                max = a;\n            }\n        }\n\n        // \u8ba1\u7b97\u57fa\u6570\u5927\u5c0f\n        int radix = 0;\n        while(max &gt; 0) {\n            max = max / 10;\n            radix++;\n        }\n\n        // \u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\n        int exp = 1;\n        for (int i = 0; i &lt; radix; i++) {\n            countSort(arr, exp);\n            exp *= 10;\n        }\n    }\n\n    /**\n     * \u8ba1\u6570\u6392\u5e8f\n     *\n     * @param arr \u6570\u7ec4\n     * @param exp \u6307\u6570\n     */\n    private void countSort(int[] arr, int exp) {\n        // \u7edf\u8ba1\u6bcf\u4e2a\u6570\u5b57\uff080-9\uff09\u7684\u6b21\u6570\n        int[] counts = new int[10];\n        for (int a : arr) {\n            counts[(a / exp) % 10]++;\n        }\n\n        // \u7d2f\u8ba1\u6570\u5b57\u7684\u6b21\u6570\u548c\n        for (int i = 1; i &lt; counts.length; i++) {\n            counts[i] += counts[i - 1];\n        }\n\n        // \u66f4\u65b0\u6392\u5e8f\u7ed3\u679c\u5230\u539f\u6570\u7ec4\n        int[] copy = Arrays.copyOf(arr, arr.length);\n        for (int i = copy.length - 1; i &gt;= 0; i--) {\n            int index = (copy[i] / exp) % 10;\n            counts[index]--;\n            arr[counts[index]] = copy[i];\n        }\n    }\n\n}\n</code></pre>"},{"location":"ch10_sort/selectsort/","title":"\u9009\u62e9\u6392\u5e8f","text":""},{"location":"ch10_sort/selectsort/#_2","title":"\u4e00\u3001\u7b97\u6cd5\u63cf\u8ff0","text":""},{"location":"ch10_sort/selectsort/#11","title":"1.1 \u6838\u5fc3\u601d\u60f3","text":"<ul> <li>\u6570\u636e\u5206\u4e3a\u5df2\u6392\u5e8f\u533a\u95f4\u548c\u672a\u6392\u5e8f\u533a\u95f4</li> <li>\u4ece\u672a\u6392\u5e8f\u533a\u95f4\u4e2d\u627e\u5230\u6700\u5c0f/\u6700\u5927\u7684\u5143\u7d20\uff0c\u653e\u5230\u5230\u5df2\u6392\u5e8f\u533a\u95f4\u7684\u5c3e\u90e8</li> <li>\u6267\u884c n \u8f6e\u540e\uff0c\u6240\u6709\u672a\u6392\u5e8f\u5143\u7d20\u90fd\u4f1a\u8fc1\u79fb\u5230\u5df2\u6392\u5e8f\u533a\u95f4\u4e2d</li> </ul>"},{"location":"ch10_sort/selectsort/#12","title":"1.2 \u7ec6\u8282\u89e3\u91ca","text":"<p>\u6bd4\u5982\u8bf4\uff0c\u6570\u7ec4 <code>[2, 7, 1, 4, 3, 6, 5]</code>\u3002</p> <p>\u9996\u5148\u5206\u6210\u672a\u6392\u5e8f\u548c\u5df2\u6392\u5e8f\u533a\u95f4\uff0c\u5df2\u6392\u5e8f\u533a\u95f4\u4e00\u5f00\u59cb\u662f\u7a7a\u7684\uff1a</p> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n                                   ___ ___ ___ ___ ___ ___ ___\n                                  | 2 | 7 | 1 | 4 | 3 | 6 | 5 |\n</code></pre> <p>\u9996\u5148\u627e\u5230\u672a\u6392\u5e8f\u533a\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u4e5f\u5c31\u662f 1\uff0c\u5c06 1 \u8fc1\u79fb\u5230\u5df2\u6392\u5e8f\u533a\u95f4\u4e2d\uff1a</p> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n ___                               ___ ___ ___ ___ ___ ___\n| 1 |                             | 7 | 2 | 4 | 3 | 6 | 5 |\n</code></pre> <p>\u7ee7\u7eed\u4ece\u672a\u6392\u5e8f\u533a\u95f4\u627e\u6700\u5c0f\u503c\uff0c\u5f97\u5230 2\uff0c\u7136\u540e\u5c06 2 \u79fb\u52a8\u5230\u5df2\u6392\u5e8f\u533a\u95f4\uff1a</p> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n ___ ___                           ___ ___ ___ ___ ___\n| 1 | 2 |                         | 7 | 4 | 3 | 6 | 5 |\n</code></pre> <p>\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5206\u522b\u4ea4\u6362\u5f97\u5230 3\u30014\u30015\u30016\u30017 \u7684\u6700\u7ec8\u4f4d\u7f6e\uff1a</p> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n ___ ___ ___                       ___ ___ ___ ___\n| 1 | 2 | 3 |                     | 4 | 7 | 6 | 5 |\n</code></pre> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n ___ ___ ___ ___                   ___ ___ ___\n| 1 | 2 | 3 | 4 |                 | 7 | 6 | 5 |\n</code></pre> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n ___ ___ ___ ___ ___               ___ ___\n| 1 | 2 | 3 | 4 | 5 |             | 6 | 7 |\n</code></pre> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n ___ ___ ___ ___ ___ ___           ___\n| 1 | 2 | 3 | 4 | 5 | 6 |         | 7 |\n</code></pre> <pre><code> \u5df2\u6392\u5e8f                           \u672a\u6392\u5e8f\n ___ ___ ___ ___ ___ ___ ___ \n| 1 | 2 | 3 | 4 | 5 | 6 | 7 |\n</code></pre> <p>\u7ecf\u8fc7 n \u8f6e\u4ea4\u6362\uff0c\u6570\u7ec4\u5c31\u6392\u597d\u5e8f\u4e86\u3002</p>"},{"location":"ch10_sort/selectsort/#_3","title":"\u4e8c\u3001\u7b97\u6cd5\u5b9e\u73b0","text":"<pre><code>public void selectSort(int[] arr) {\n    int n = arr.length;\n    for (int i = 0; i &lt; n; i++) {\n        // \u5bfb\u627e\u672a\u6392\u5e8f\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\n        int min = i;\n        for (int j = i + 1; j &lt; n; j++) {\n            if (arr[j] &lt; arr[min]) {\n                min = j;\n            }\n        }\n        // \u5c06\u6700\u5c0f\u503c\u63d2\u5165\u5230\u5df2\u6392\u5e8f\u533a\u95f4\u7684\u672b\u5c3e\n        swap(arr, min, i);\n    }\n}\n</code></pre> <p>\u6267\u884c\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <pre><code>=====  \u521d\u59cb\u6570\u7ec4 =====\n[0, 3, 1, 6, 2, 5, 4]\n\n=====\u7b2c 1 \u8f6e\u63d2\u5165=====\n[0, 3, 1, 6, 2, 5, 4]\n\n=====\u7b2c 2 \u8f6e\u63d2\u5165=====\n[0, 1, 3, 6, 2, 5, 4]\n\n=====\u7b2c 3 \u8f6e\u63d2\u5165=====\n[0, 1, 2, 6, 3, 5, 4]\n\n=====\u7b2c 4 \u8f6e\u63d2\u5165=====\n[0, 1, 2, 3, 6, 5, 4]\n\n=====\u7b2c 5 \u8f6e\u63d2\u5165=====\n[0, 1, 2, 3, 4, 5, 6]\n\n=====\u7b2c 6 \u8f6e\u63d2\u5165=====\n[0, 1, 2, 3, 4, 5, 6]\n\n=====\u7b2c 7 \u8f6e\u63d2\u5165=====\n[0, 1, 2, 3, 4, 5, 6]\n</code></pre>"},{"location":"ch10_sort/selectsort/#_4","title":"\u4e09\u3001\u7b97\u6cd5\u5206\u6790","text":""},{"location":"ch10_sort/selectsort/#31","title":"3.1 \u65f6\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u6700\u597d\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)</li> <li>\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)</li> <li>\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)</li> </ul>"},{"location":"ch10_sort/selectsort/#32","title":"3.2 \u7a7a\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)</li> <li>\u539f\u5730\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/selectsort/#33","title":"3.3 \u7a33\u5b9a\u6027","text":"<ul> <li>\u4e0d\u7a33\u5b9a\u6392\u5e8f\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/selectsort/#_5","title":"\u9644\u5f55","text":"<pre><code>/**\n * \u9009\u62e9\u6392\u5e8f\n * &lt;p&gt;\n * \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6700\u597d O(n^2) \u6700\u5dee O(n^2) \u5e73\u5747 O(n^2)\n * &lt;p&gt;\n * \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\n * &lt;p&gt;\n * \u7a33\u5b9a\u6027\uff1a\u4e0d\u7a33\u5b9a\n *\n * @author weijiaduo\n * @since 2022/7/21\n */\npublic class SelectSort implements Sort {\n\n    @Override\n    public void sort(int[] arr) {\n        int n = arr.length;\n        for (int i = 0; i &lt; n; i++) {\n            // \u5bfb\u627e\u672a\u6392\u5e8f\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\n            int min = i;\n            for (int j = i + 1; j &lt; n; j++) {\n                if (arr[j] &lt; arr[min]) {\n                    min = j;\n                }\n            }\n            // \u5c06\u6700\u5c0f\u503c\u63d2\u5165\u5230\u5df2\u6392\u5e8f\u533a\u95f4\u7684\u672b\u5c3e\n            swap(arr, min, i);\n        }\n    }\n\n}\n</code></pre>"},{"location":"ch10_sort/shellsort/","title":"\u5e0c\u5c14\u6392\u5e8f","text":""},{"location":"ch10_sort/shellsort/#_2","title":"\u4e00\u3001\u4ec0\u4e48\u662f\u5e0c\u5c14\u6392\u5e8f\uff1f","text":"<ul> <li>\u5e0c\u5c14\u6392\u5e8f\u662f\u4e00\u79cd\u57fa\u4e8e\u63d2\u5165\u6392\u5e8f\u8fdb\u884c\u4e86\u4f18\u5316\u540e\u7684\u6392\u5e8f\u7b97\u6cd5</li> <li>\u5e0c\u5c14\u6392\u5e8f\u6bd4\u666e\u901a\u63d2\u5165\u6392\u5e8f\u66f4\u9002\u7528\u4e8e\u5927\u89c4\u6a21\u6570\u7ec4\u6392\u5e8f</li> </ul>"},{"location":"ch10_sort/shellsort/#_3","title":"\u4e8c\u3001\u4e3a\u4ec0\u4e48\u8981\u7528\u5e0c\u5c14\u6392\u5e8f\uff1f","text":"<p>\u666e\u901a\u7684\u63d2\u5165\u6392\u5e8f\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff1a</p> <ul> <li>\u5bf9\u4e8e\u5927\u89c4\u6a21\u4e71\u5e8f\u6570\u7ec4\u6392\u5e8f\u5f88\u6162</li> </ul> <p>\u800c\u5b83\u8fd9\u4e48\u6162\u7684\u539f\u56e0\u662f\uff1a</p> <ul> <li>\u63d2\u5165\u6392\u5e8f\u53ea\u662f\u4ea4\u6362\u76f8\u90bb\u5143\u7d20\uff0c\u56e0\u6b64\u5143\u7d20\u53ea\u80fd\u4e00\u70b9\u70b9\u4ece\u4e00\u7aef\u79fb\u52a8\u5230\u53e6\u4e00\u7aef</li> </ul> <p>\u6bd4\u5982\u8bf4\uff0c\u6570\u7ec4 <code>[7, 2, 3, 5, 6, 4, 1]</code>\uff0c\u63d2\u5165\u6392\u5e8f\u53ea\u80fd\u4e00\u70b9\u70b9\u5730\u5c06 <code>1</code> \u79fb\u52a8\u5230\u6700\u524d\u9762\u3002</p> <p>\u5e0c\u5c14\u6392\u5e8f\u4e3a\u4e86\u52a0\u5feb\u8fd9\u79cd\u60c5\u51b5\u7684\u6392\u5e8f\u901f\u5ea6\uff0c\u5bf9\u63d2\u5165\u6392\u5e8f\u8fdb\u884c\u4e86\u4f18\u5316\uff1a</p> <ul> <li>\u5bf9\u6570\u7ec4\u5143\u7d20\u6309\u7167\u6307\u5b9a\u95f4\u9694\u8fdb\u884c\u8df3\u8dc3\u5f0f\u7684\u5206\u7ec4</li> <li>\u5bf9\u5206\u7ec4\u5185\u8fdb\u884c\u5c40\u90e8\u6392\u5e8f\uff0c\u4ea4\u6362\u4e0d\u76f8\u90bb\u7684\u5143\u7d20</li> <li>\u6700\u7ec8\u7528\u63d2\u5165\u6392\u5e8f\u5c06\u5c40\u90e8\u6709\u5e8f\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f</li> </ul> <p>\u6bd4\u5982\u8bf4\uff0c\u6570\u7ec4 <code>[7, 2, 3, 5, 6, 4, 1]</code>\u3002</p> <p>\u5e0c\u5c14\u6392\u5e8f\u4f1a\u5c06\u5176\u5212\u5206\u4e3a\u591a\u4e2a\u7ec4\uff0c\u5047\u8bbe\u6309\u7167\u95f4\u9694\u4e3a 3 \u5206\u7ec4\uff0c\u53ef\u5206\u6210 3 \u7ec4\uff1a</p> <pre><code>   _______________________________________________\n  |                       |                       |\n  v                       v                       v\n ___     ___     ___     ___     ___     ___     ___\n| 7 |   | 2 |   | 3 |   | 5 |   | 6 |   | 4 |   | 1 |\n</code></pre> <pre><code>           _______________________\n          |                       |\n          v                       v\n ___     ___     ___     ___     ___     ___     ___\n| 7 |   | 2 |   | 3 |   | 5 |   | 6 |   | 4 |   | 1 |\n</code></pre> <pre><code>                   _______________________\n                  |                       |\n                  v                       v\n ___     ___     ___     ___     ___     ___     ___\n| 7 |   | 2 |   | 3 |   | 5 |   | 6 |   | 4 |   | 1 |\n</code></pre> <p>\u7136\u540e\u5206\u522b\u5bf9\u6bcf\u4e2a\u7ec4\u5185\u8fdb\u884c\u6392\u5e8f\uff1a</p> <pre><code>               [7, 5, 1] --&gt; [1, 5, 7]\n\n   _______________________________________________\n  |                       |                       |\n  v                       v                       v\n ___     ___     ___     ___     ___     ___     ___\n| 1 |   | 2 |   | 3 |   | 5 |   | 6 |   | 4 |   | 7 |\n</code></pre> <pre><code>              [2, 6] --&gt; [2, 6]\n\n           _______________________\n          |                       |\n          v                       v\n ___     ___     ___     ___     ___     ___     ___\n| 1 |   | 2 |   | 3 |   | 5 |   | 6 |   | 4 |   | 7 |\n</code></pre> <pre><code>\n                      [3, 4] --&gt; [3, 4]\n\n                   _______________________\n                  |                       |\n                  v                       v\n ___     ___     ___     ___     ___     ___     ___\n| 1 |   | 2 |   | 3 |   | 5 |   | 6 |   | 4 |   | 7 |\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\uff0c<code>1</code> \u5df2\u7ecf\u76f4\u63a5\u79fb\u52a8\u5230\u6700\u524d\u9762\u4e86\uff0c\u4ece\u4e00\u7aef\u79fb\u52a8\u5230\u53e6\u4e00\u7aef\u7684\u901f\u5ea6\u5f88\u5feb\u3002</p> <p>\u800c\u4e14\uff0c\u5728\u5c40\u90e8\u6709\u5e8f\u7684\u60c5\u51b5\u4e0b\uff0c\u6574\u4e2a\u6570\u7ec4\u770b\u8d77\u6765\u4e5f\u57fa\u672c\u662f\u6709\u5e8f\u7684\u4e86\u3002</p> <p>\u5e0c\u5c14\u6392\u5e8f\u5c31\u662f\u91c7\u7528\u95f4\u9694\u5206\u7ec4\u6392\u5e8f\u7684\u65b9\u5f0f\uff0c\u6765\u4f18\u5316\u5bf9\u5927\u89c4\u6a21\u7684\u6570\u7ec4\u6392\u5e8f\u3002</p>"},{"location":"ch10_sort/shellsort/#_4","title":"\u4e09\u3001\u5982\u4f55\u5b9e\u73b0\u5e0c\u5c14\u6392\u5e8f\uff1f","text":"<p>\u5e0c\u5c14\u6392\u5e8f\u7684\u57fa\u672c\u601d\u60f3\u662f\u6309\u7167\u95f4\u9694\u8fdb\u884c\u8df3\u8dc3\u5f0f\u5206\u7ec4\uff0c\u5e76\u5bf9\u7ec4\u5185\u8fdb\u884c\u6392\u5e8f\u3002</p> <p>\u5176\u6392\u5e8f\u8fc7\u7a0b\u662f\u8fd9\u6837\uff1a</p> <ol> <li>\u6309\u7167\u95f4\u9694 h \u5bf9\u6570\u7ec4\u8fdb\u884c\u8df3\u8dc3\u5f0f\u5206\u7ec4</li> <li>\u5bf9\u6bcf\u4e2a\u5206\u7ec4\u5185\u7684\u5143\u7d20\u8fdb\u884c\u6392\u5e8f</li> <li>\u7f29\u5c0f\u95f4\u9694 h\uff0c\u91cd\u65b0\u56de\u5230\u7b2c 1 \u6b65\uff0c\u76f4\u5230 h = 1 \u4e3a\u6b62</li> </ol> <p>\u8fd9\u91cc\u9762\u6709 2 \u4e2a\u6838\u5fc3\u7684\u70b9\uff1a</p> <ul> <li>\u5206\u7ec4\u5185\u7684\u6392\u5e8f</li> <li>\u95f4\u9694 h \u7684\u9009\u62e9\u548c\u7f29\u5c0f</li> </ul> <p>\u5f53\u95f4\u9694 h = 1 \u65f6\uff0c\u5176\u5b9e\u5c31\u662f\u666e\u901a\u7684\u63d2\u5165\u6392\u5e8f\u4e86\u3002</p>"},{"location":"ch10_sort/shellsort/#31","title":"3.1 \u5206\u7ec4\u5185\u6392\u5e8f","text":"<p>\u4e00\u822c\u6765\u8bf4\uff0c\u5e0c\u5c14\u6392\u5e8f\u7684\u5b9e\u73b0\u4e2d\uff0c\u5206\u7ec4\u5185\u6392\u5e8f\u91c7\u7528\u7684\u662f\u63d2\u5165\u6392\u5e8f\u3002</p> <p>\u6bd4\u5982\u5bf9\u8fd9\u4e2a\u5206\u7ec4\u8fdb\u884c\u63d2\u5165\u6392\u5e8f\uff1a</p> <pre><code>   _______________________________________________\n  |                       |                       |\n  v                       v                       v\n ___     ___     ___     ___     ___     ___     ___\n| 7 |   | 2 |   | 3 |   | 5 |   | 6 |   | 4 |   | 1 |\n</code></pre> <pre><code>   _______________________________________________\n  |                       |                       |\n  v                       v                       v\n ___     ___     ___     ___     ___     ___     ___\n| 5 |   | 2 |   | 3 |   | 7 |   | 6 |   | 4 |   | 1 |           -- (5 \u63d2\u5230 7 \u524d)\n</code></pre> <pre><code>   _______________________________________________\n  |                       |                       |\n  v                       v                       v\n ___     ___     ___     ___     ___     ___     ___\n| 1 |   | 2 |   | 3 |   | 5 |   | 6 |   | 4 |   | 7 |           -- (1 \u63d2\u5230 5 \u524d)\n</code></pre> <p>\u6240\u4ee5\u8bf4\u5e0c\u5c14\u6392\u5e8f\u672c\u8d28\u5c31\u662f\u63d2\u5165\u6392\u5e8f\uff0c\u53ea\u662f\u63d2\u5165\u7684\u65b9\u5f0f\u6709\u70b9\u4e0d\u540c\u3002</p> <p>\u63d2\u5165\u6392\u5e8f\u662f\u76f8\u90bb\u5143\u7d20\u4e4b\u95f4\u7684\u4ea4\u6362\uff0c\u800c\u5e0c\u5c14\u6392\u5e8f\u662f\u8df3\u8dc3\u5f0f\u7684\u4ea4\u6362\u3002</p>"},{"location":"ch10_sort/shellsort/#32","title":"3.2 \u589e\u91cf\u5e8f\u5217","text":"<p>\u5e0c\u5c14\u6392\u5e8f\u4e2d\u7684\u95f4\u9694 h \u53d8\u5316\u5e8f\u5217\uff0c\u4e00\u822c\u79f0\u4e3a\u589e\u91cf\u5e8f\u5217\u3002</p> <p>\u6bd4\u5982\u8bf4\uff0c\u5f00\u59cb\u95f4\u9694 <code>h = n / 2</code>\uff0c\u540e\u9762\u4ee5 <code>h = h / 2</code> \u7f29\u5c0f\u589e\u91cf\uff1a</p> <pre><code>n/2 n/4 n/8 ... 1\n</code></pre> <p>\u90a3\u4e48\u8fd9\u6837\u7684\u4e00\u4e2a\u5e8f\u5217\uff0c\u5c31\u79f0\u4e3a\u589e\u91cf\u5e8f\u5217\u3002</p> <ul> <li>\u76ee\u524d\u6765\u8bf4\uff0c\u5e0c\u5c14\u6392\u5e8f\u7684\u589e\u91cf\u5e8f\u5217\u7684\u9009\u62e9\u8fd8\u6ca1\u6709\u6700\u4f18\u7684\u65b9\u6848</li> </ul> <p>\u56e0\u4e3a\u589e\u91cf\u5e8f\u5217\u7684\u9009\u62e9\u548c\u8bc1\u660e\u8fd8\u662f\u4e00\u4e2a\u6570\u5b66\u96be\u9898\u3002</p> <p>\u9664\u4e86\u4e0a\u9762\u53d6\u4e2d\u7684\u589e\u91cf\u5e8f\u5217\uff0c\u5728\u300a\u7b97\u6cd5\u300b\u4e00\u4e66\u4e2d\u8fd8\u7ed9\u51fa\u4e86 2 \u79cd\u589e\u91cf\u5e8f\u5217\uff1a</p> <pre><code>1, 4, 13, 40, 121, 364 ... (h = 3 * h + 1)\n</code></pre> <pre><code>1, 5, 19, 41, 109, 209, 505, 929, 2161, 3905, 8929, 16001, 36289, 64769, 146305, 260609\n</code></pre> <p>\u5e0c\u5c14\u6392\u5e8f\u7684\u6027\u80fd\u4f1a\u53d7\u5230\u589e\u91cf\u5e8f\u5217\u7684\u5f71\u54cd\uff0c\u4f46\u662f\u76ee\u524d\u6682\u65f6\u6ca1\u6709\u529e\u6cd5\u8bc1\u660e\u54ea\u4e2a\u589e\u91cf\u5e8f\u5217\u662f\u6700\u4f18\u7684\u3002</p>"},{"location":"ch10_sort/shellsort/#_5","title":"\u56db\u3001\u7b97\u6cd5\u5206\u6790","text":""},{"location":"ch10_sort/shellsort/#41","title":"4.1 \u65f6\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u76ee\u524d\u5c1a\u672a\u80fd\u51c6\u786e\u7b97\u51fa\u6765\u590d\u6742\u5ea6</li> <li>\u53ea\u80fd\u77e5\u9053\u5927\u6982\u8303\u56f4\uff1anlogn &lt; O &lt; n^2</li> </ul>"},{"location":"ch10_sort/shellsort/#42","title":"4.2 \u7a7a\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)</li> <li>\u539f\u5730\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/shellsort/#43","title":"4.3 \u7a33\u5b9a\u6027","text":"<ul> <li>\u975e\u7a33\u5b9a\u6392\u5e8f\u7b97\u6cd5</li> </ul>"},{"location":"ch10_sort/shellsort/#_6","title":"\u603b\u7ed3","text":"<ul> <li>\u5e0c\u5c14\u6392\u5e8f\u662f\u4e00\u79cd\u57fa\u4e8e\u63d2\u5165\u6392\u5e8f\u8fdb\u884c\u4e86\u4f18\u5316\u540e\u7684\u6392\u5e8f\u7b97\u6cd5</li> <li>\u5e0c\u5c14\u6392\u5e8f\u6bd4\u666e\u901a\u63d2\u5165\u6392\u5e8f\u66f4\u9002\u7528\u4e8e\u5927\u89c4\u6a21\u6570\u7ec4\u6392\u5e8f</li> <li>\u5e0c\u5c14\u6392\u5e8f\u7684\u5173\u952e\u70b9\u5305\u62ec\u589e\u91cf\u5e8f\u5217\u7684\u9009\u62e9\u548c\u5206\u7ec4\u5185\u6392\u5e8f</li> <li>\u76ee\u524d\u8fd8\u6ca1\u6709\u627e\u5230\u6700\u4f18\u7684\u589e\u91cf\u5e8f\u5217</li> <li>\u6682\u65f6\u65e0\u6cd5\u8bc1\u660e\u5e0c\u5c14\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6</li> </ul>"},{"location":"ch10_sort/shellsort/#_7","title":"\u53c2\u8003","text":"<p>https://www.cnblogs.com/chengxiao/p/6104371.html</p>"},{"location":"ch10_sort/shellsort/#_8","title":"\u9644\u5f55","text":"<pre><code>/**\n * \u5e0c\u5c14\u6392\u5e8f\n * &lt;p&gt;\n * \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6682\u65f6\u65e0\u6cd5\u5206\u6790\uff0c\u4f46\u662f\u8fbe\u4e0d\u5230 O(n^2)\n * &lt;p&gt;\n * \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\n * &lt;p&gt;\n * \u7a33\u5b9a\u6027\uff1a\u4e0d\u7a33\u5b9a\n */\npublic void shellSort(int[] arr) {\n    int n = arr.length;\n\n    // \u9012\u589e\u5e8f\u5217\uff1a1, 4, 13, 40, 121, ...\n    int h = 1;\n    while (h &lt; n / 3) {\n        h = 3 * h + 1;\n    }\n\n    // \u589e\u91cf\u5e8f\u5217\u5012\u5e8f\u9012\u51cf\u81f3 1\n    while (h &gt;= 1) {\n        // \u5c40\u90e8\u63d2\u5165\u6392\u5e8f\n        for (int i = h; i &lt; n; i++) {\n            int x = arr[i];\n            int j = i;\n            for (; j &gt;= h &amp;&amp; x &lt; arr[j - h]; j -= h) {\n                arr[j] = arr[j - h];\n            }\n            arr[j] = x;\n        }\n        // \u9012\u51cf h \u95f4\u9694\n        h /= 3;\n    }\n}\n</code></pre>"}]}